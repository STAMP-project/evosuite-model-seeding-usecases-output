<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.io.StreamTokenizer.pushBack()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s1" action="java.io.StreamTokenizer.lineno()" proba="0.5"></transition></state><state id="s4"><transition target="s5" action="java.io.StreamTokenizer.ordinaryChar(int)" proba="1.0"></transition></state><state id="s5"><transition target="s1" action="java.io.StreamTokenizer.lineno()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="java.io.StreamTokenizer.&lt;init&gt;(java.io.Reader)" proba="0.2222222222222222"></transition><transition target="s1" action="java.io.StreamTokenizer.lineno()" proba="0.5555555555555556"></transition><transition target="s2" action="java.io.StreamTokenizer.nextToken()" proba="0.2222222222222222"></transition></state><state id="s1"><transition target="s3" action="java.io.StreamTokenizer.pushBack()" proba="0.05"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s1" action="java.io.StreamTokenizer.lineno()" proba="0.5"></transition><transition target="s2" action="java.io.StreamTokenizer.nextToken()" proba="0.05"></transition></state><state id="s2"><transition target="s3" action="java.io.StreamTokenizer.pushBack()" proba="0.5"></transition><transition target="s1" action="java.io.StreamTokenizer.lineno()" proba="0.25"></transition><transition target="s2" action="java.io.StreamTokenizer.nextToken()" proba="0.25"></transition></state></states></ts>