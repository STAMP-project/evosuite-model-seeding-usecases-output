/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 18 12:19:57 GMT 2019
 */

package no.tellu.lib.data.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import no.tellu.lib.data.DataGroupNode;
import no.tellu.lib.data.DataHandle;
import no.tellu.lib.data.DataNode;
import no.tellu.lib.data.DataPredicate;
import no.tellu.lib.data.DataValueNode;
import no.tellu.lib.data.MetaGroupNode;
import no.tellu.lib.data.MetaItemNode;
import no.tellu.lib.data.SetDefaultTrav;
import no.tellu.lib.data.model.DataModel;
import no.tellu.lib.data.model.DataModelHandle;
import no.tellu.lib.data.model.ParsedExpr;
import no.tellu.lib.data.model.Rule;
import no.tellu.lib.log.Logger;
import org.evosuite.runtime.ViolatedAssumptionAnswer;

public class DataModelHandle_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      dataModelHandle0.deactivateProvider((DataHandle.DataUpdateSubscriber) null, "model");
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.addDataSubscriber("", (DataHandle.DataUpdateSubscriber) null);
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.cancelTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("model");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("model", "model", "model");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.removeDataSubscriber((DataHandle.DataUpdateSubscriber) null);
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.startTransaction();
      dataModelHandle0.setValue("", dataGroupNode0);
      assertEquals("", dataModelHandle0.getName());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      // Undeclared exception!
      try { 
        dataModelHandle0.addProcessor((DataModel.DataProcessor) null, "model", "model", "model");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "model");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("-<=L_c", "Text was found between an array's closing bracket and a subsequent comma (this is usually caused by a missing comma); Text=\"", 2450, metaItemNode_DataType0);
      dataModelHandle0.addDataSubscriber("-<=L_c", "f", "modelZC[Pjyau=/", (DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("Lq^Zmis;+''0pl57f", "6", 1093, metaItemNode_DataType0);
      dataModelHandle0.removeDataSubscriber("Lq^Zmis;+''0pl57f", (DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.commitTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "3(+J3:W\"(mWAO,k}d");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("IB5wZ_y<=dwi!7SLyTa", "", (-1455), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) parsedExpr0, dataHandle_TransactionCommitCallback0);
      dataModelHandle0.addNode(dataGroupNode0);
      assertEquals("", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "no.tellu.lib.data.model.Rule");
      // Undeclared exception!
      try { 
        dataModelHandle0.getNode();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No direct access to DataNodes managed by model
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "", 937, metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataModelHandle0.activateProvider(parsedExpr0, "d", dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath((String) null);
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      long long0 = dataModelHandle0.getLong("92u/s_~'", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("", dataGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      long long0 = dataModelHandle0.getLong(":,", 3326L);
      assertEquals(3326L, long0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath((String) null);
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("SIy+-");
      assertEquals(":/SIy+-", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath(":/SIy+-");
      assertEquals(":/SIy+-", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("/");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(":/");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle(":/");
      assertEquals(0, dataHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("/");
      assertEquals(0, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        DataModelHandle.handleFromPath(dataModel0, "instance(Operator expected numerical operand");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("/");
      assertFalse(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      DataNode dataNode0 = dataModelHandle0.getNodeInter();
      assertFalse(dataNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(":/SIy+-", 31, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(":/SIy+-");
      List<DataNode> list0 = dataGroupNode0.getChildNodes(":/SIy+-", dataPredicate0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, list0, (String) null);
      DataNode dataNode0 = dataModelHandle0.getNodeInter();
      assertNull(dataNode0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "No DataProvider found with name ");
      DataValueNode dataValueNode0 = dataModelHandle0.getValueNode("No DataProvider found with name ");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataValueNode dataValueNode0 = dataModelHandle0.getValueNode("");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "e>bMo?c,n=rI;[pL^+");
      DataValueNode dataValueNode0 = dataModelHandle0.getValueNode("e>bMo?c,n=rI;[pL^+");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode0.process(setDefaultTrav0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      DataValueNode dataValueNode0 = dataModelHandle0.getValueNode("/");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle((String) null);
      assertTrue(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("");
      assertTrue(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("b9ZH|J0H#[");
      assertEquals(0, dataHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("'xI:o-3W}Bt-J-6c");
      assertFalse(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "no.tellu.lib.data.model.Rule");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      ParsedExpr parsedExpr0 = new ParsedExpr("no.tellu.lib.data.model.Rule", "model", 57, metaItemNode_DataType0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("no.tellu.lib.data.model.Rule");
      dataModelHandle0.addProcessor((DataModel.DataProcessor) parsedExpr0, (List<String>) linkedList0);
      assertFalse(linkedList0.contains("model"));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      boolean boolean0 = dataModelHandle0.hasOpenTransaction();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, (String) null);
      dataModelHandle0.startTransaction();
      boolean boolean0 = dataModelHandle0.hasOpenTransaction();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "model");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("-<=L_c", dataModelHandle0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataGroupNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("#/");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "#/");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("#/", "#/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // removeValue path can't null/empty
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(":/SIy+-", 31, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(":/SIy+-");
      List<DataNode> list0 = dataGroupNode0.getChildNodes(":/SIy+-", dataPredicate0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, list0, (String) null);
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("DataHandle node is DataValueNode");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, (String) null);
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // removeValue path can't null/empty
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("Q*-.kp,F");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "Q*-.kp,F");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("Q*-.kp,F");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode(dataGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, "?uE)8(LmS,F0");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode((DataNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // addNode newNode can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, (String) null);
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode(dataValueNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode(dataGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode((DataNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mergeNode newNode can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode(dataValueNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("2#1^EQ0Q$]&sl.");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "2#1^EQ0Q$]&sl.");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("2#1^EQ0Q$]&sl.", "2#1^EQ0Q$]&sl.", "2#1^EQ0Q$]&sl.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath("");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath("/");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath(":/2#1^,0Q]$s./2#1^,0Q]$s./");
      assertEquals(":/2#1^,0Q]$s./2#1^,0Q]$s./", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath("R$e7Bh-FNvUp;/Xt");
      assertEquals("R$e7Bh-FNvUp;/Xt", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("model", dataGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = null;
      try {
        dataModelHandle0 = new DataModelHandle(dataModel0, (List<DataNode>) null, "#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, (DataNode) null, "E`_P;sv|ihHjr6P2Ig");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("E`_P;sv|ihHjr6P2Ig", "E`_P;sv|ihHjr6P2Ig", (-1), metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataModelHandle0.addDataSubscriber("E`_P;sv|ihHjr6P2Ig", "E`_P;sv|ihHjr6P2Ig", "E`_P;sv|ihHjr6P2Ig", (DataHandle.DataUpdateSubscriber) parsedExpr0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "", 8260, metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataModelHandle0.addDataSubscriber("", (DataHandle.DataUpdateSubscriber) parsedExpr0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode(dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        dataModelHandle0.addProcessor((DataModel.DataProcessor) null, (List<String>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "", (-1782), metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataModelHandle0.deactivateProvider(parsedExpr0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("no.tellu.lib.log.Logger");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "no.tellu.lib.log.Logger");
      // Undeclared exception!
      try { 
        dataModelHandle0.getDataHandle("no.tellu.lib.log.Logger");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, (DataNode) null, "/");
      // Undeclared exception!
      try { 
        dataModelHandle0.getDataNodes("/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, "instance(Transaction loop limit exceeded - transaction canceled");
      // Undeclared exception!
      try { 
        dataModelHandle0.getValueNode("instance(Transaction loop limit exceeded - transaction canceled");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataModelHandle.handleFromPath((DataModel) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode(dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      Rule rule0 = new Rule("", "", "_", ";*p@Y|");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeDataSubscriber("_", (DataHandle.DataUpdateSubscriber) rule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "rsF\"{bM>+*D|xu!',", 12, metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataModelHandle0.removeDataSubscriber((DataHandle.DataUpdateSubscriber) parsedExpr0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("JsonParser");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.startTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      boolean boolean0 = dataModelHandle0.activateProvider((DataHandle.DataUpdateSubscriber) null, "", dataGroupNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode("i=eW8O+\"1");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction((DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0, false);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "i=eW8O+\"1");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("#");
      assertFalse(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      List<DataNode> list0 = dataModelHandle0.getDataNodes("");
      assertFalse(list0.isEmpty());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      List<DataNode> list0 = dataModelHandle0.getDataNodes("KA/T");
      assertNotNull(list0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "instance(IBvJO3");
      List<DataNode> list0 = dataModelHandle0.getDataNodes("OGkTokIq");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      String string0 = dataModelHandle0.getGlobalDataPath((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Logger logger0 = new Logger("RWj7Oj+'U.hSR_Us");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("RWj7Oj+'U.hSR_Us");
      String string0 = dataModelHandle0.getGlobalDataPath("#");
      assertEquals(":/RWj7Oj+'U.hSR_Us/#", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(":/SIy+-", 31, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(":/SIy+-");
      List<DataNode> list0 = dataGroupNode0.getChildNodes(":/SIy+-", dataPredicate0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, list0, (String) null);
      String string0 = dataModelHandle0.getGlobalDataPath("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode0.process(setDefaultTrav0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      DataNode dataNode0 = dataModelHandle0.getNodeInter();
      assertTrue(dataNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "instance(IBvJO3");
      DataValueNode dataValueNode1 = dataModelHandle0.getValueNode((String) null);
      assertSame(dataValueNode1, dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initFromMeta();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      assertEquals(1, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("no.tellu.lib.data.DataRestrictionException", ";>!|;QC(", (-270), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(parsedExpr0, dataHandle_TransactionCommitCallback0, false);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, (String) null);
      assertEquals(0, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Stack<DataNode> stack0 = new Stack<DataNode>();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, stack0, ")T(I)rP!|[");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("btDC", "<", 47, metaItemNode_DataType0);
      dataModelHandle0.addProcessor((DataModel.DataProcessor) parsedExpr0, "UL|@!(e}ZDcpIym", "", "1}7zgH@? mdEW");
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      dataModelHandle0.cancelTransaction();
      assertEquals("model", dataModelHandle0.getName());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "model");
      dataModelHandle0.startTransaction();
      dataModelHandle0.changeName("model", "model", "model");
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, ":/Can't copyMetaData to initialized DataModel");
      dataModelHandle0.commitTransaction();
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "instance(2)^E>0LB~#sl.");
      assertEquals(0, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Logger logger0 = new Logger("3qogL");
      DataModel dataModel0 = new DataModel(logger0);
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "No direct access to DataNodes managed by model");
      dataModelHandle0.startTransaction();
      dataModelHandle0.mergeNode(dataGroupNode0);
      assertTrue(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, ":/no.tellu.lib.data.model.DataModelHandle/M:*yDm@Lnp+ac/");
      dataModelHandle0.startTransaction();
      dataModelHandle0.removeValue(":/no.tellu.lib.data.model.DataModelHandle/M:*yDm@Lnp+ac/");
      assertEquals(1, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, ")", "tEP:A", ")");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, false);
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, (String) null);
      dataModelHandle0.setValue((String) null, (Object) null);
      assertTrue(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("\"X7>&:$~7mEPq");
      assertEquals(":/\"X7>&:$~7mEPq", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Logger logger0 = new Logger("^(*XB4=Yy6o");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("#");
      assertNull(dataModelHandle0.getName());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "<siwrkqK+9:id$K");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("", 1, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("2FW", "ObjectMember", "+");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }
}
