<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.lang.String.isEmpty()" proba="0.1"/><transition target="s4" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.05"/><transition target="s5" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="0.05"/><transition target="s6" action="java.lang.String.endsWith(java.lang.String)" proba="0.05"/><transition target="s7" action="java.lang.String.toLowerCase()" proba="0.4"/><transition target="s8" action="java.lang.String.valueOf(int)" proba="0.1"/><transition target="s9" action="java.lang.String.matches(java.lang.String)" proba="0.1"/><transition target="s1" action="java.lang.String.split(java.lang.String)" proba="0.1"/><transition target="s2" action="java.lang.String.equalsIgnoreCase(java.lang.String)" proba="0.05"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>