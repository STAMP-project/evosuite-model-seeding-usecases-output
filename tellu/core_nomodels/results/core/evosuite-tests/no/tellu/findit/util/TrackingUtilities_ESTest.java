/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 21 08:18:03 GMT 2019
 */

package no.tellu.findit.util;

import org.junit.Test;
import static org.junit.Assert.*;
import no.tellu.findit.domain.Asset;
import no.tellu.findit.domain.AssetImpl;
import no.tellu.findit.domain.AssetTypeImpl;
import no.tellu.findit.domain.LocationImpl;
import no.tellu.findit.domain.LocationProjectionType;
import no.tellu.findit.domain.Position;
import no.tellu.findit.domain.PositionImpl;
import no.tellu.findit.domain.PositionProvider;
import no.tellu.findit.domain.Tracking;
import no.tellu.findit.util.TrackingUtilities;

public class TrackingUtilities_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TrackingUtilities trackingUtilities0 = new TrackingUtilities();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl(0.0, 0.38791433378577056);
      AssetImpl assetImpl0 = new AssetImpl();
      assetImpl0.setMyValidPosition(positionImpl0);
      double double0 = TrackingUtilities.distanceBetween((PositionProvider) assetImpl0, (PositionProvider) assetImpl0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = TrackingUtilities.formatString("00");
      assertEquals("00", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween((Asset) null, (Asset) null);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AssetImpl assetImpl0 = new AssetImpl();
      double double0 = TrackingUtilities.distanceBetween((Asset) assetImpl0, (Asset) null);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween((PositionProvider) null, (PositionProvider) null);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AssetImpl assetImpl0 = new AssetImpl();
      double double0 = TrackingUtilities.distanceBetween((PositionProvider) assetImpl0, (PositionProvider) null);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AssetImpl assetImpl0 = new AssetImpl();
      double double0 = TrackingUtilities.distanceBetween((PositionProvider) assetImpl0, (PositionProvider) assetImpl0);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl();
      LocationProjectionType locationProjectionType0 = LocationProjectionType.WGS84;
      Double double0 = positionImpl0.getLongitude();
      Tracking tracking0 = Tracking.ALWAYS;
      AssetImpl assetImpl0 = new AssetImpl((Long) null, true, false, tracking0);
      LocationImpl locationImpl0 = new LocationImpl((Long) null, positionImpl0, false, false, "I;ynL8", "I;ynL8", locationProjectionType0, (Double) null, double0, (Double) null, (Double) null, (Double) null, double0, (Long) null);
      double double1 = TrackingUtilities.distanceBetween((PositionProvider) locationImpl0, (PositionProvider) assetImpl0);
      assertEquals((-1.0), double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween("", "", "", "");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween("00", "00", "00", "00");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween("B*M z]o", "", "", "B*M z]o");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween("B*M z]o", "B*M z]o", "", "");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween("no.tellu.findit.util.TrackingUtilities", "no.tellu.findit.util.TrackingUtilities", "Fxj+U.*Fst", "");
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween(0.18256861339400116, 0.18256861339400116, 0.18256861339400116, 2340.067);
      assertEquals(1.9906970705833316E7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl(0.519909187592938, 0.0);
      PositionImpl positionImpl1 = new PositionImpl(0.0, 0.0);
      double double0 = TrackingUtilities.getDistance(positionImpl1, positionImpl0);
      assertEquals(57488.59775513535, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = TrackingUtilities.atan2(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl(0.0, 0.38791433378577056);
      AssetImpl assetImpl0 = new AssetImpl();
      assetImpl0.setMyValidPosition(positionImpl0);
      PositionImpl positionImpl1 = new PositionImpl(0.0, 0.0);
      Double double0 = positionImpl1.getLatitude();
      AssetTypeImpl assetTypeImpl0 = new AssetTypeImpl();
      Long long0 = assetTypeImpl0.getId();
      LocationProjectionType locationProjectionType0 = LocationProjectionType.UTM;
      LocationImpl locationImpl0 = new LocationImpl(long0, positionImpl1, false, false, "K", "3YUD@|HT)paS", locationProjectionType0, double0, (Double) null, double0, double0, double0, double0, (Long) null);
      double double1 = TrackingUtilities.distanceBetween((PositionProvider) locationImpl0, (PositionProvider) assetImpl0);
      assertEquals(43182.426108425636, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = TrackingUtilities.atan2(0.0, 2984.9194);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = TrackingUtilities.atan2(962.93438731424, 1902.8543644236101);
      assertEquals(0.46847376834247306, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = TrackingUtilities.atan2((-0.34985979828616176), (-0.34985979828616176));
      assertEquals(3.9269908169872414, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = TrackingUtilities.atan2((-1165.408658), 0.0);
      assertEquals((-1.5707963267948966), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = TrackingUtilities.atan2(57.29577951308232, (-1.5707963267948966));
      assertEquals(1.598205029035931, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = TrackingUtilities.atan2(0.2095638970793265, 0.0);
      assertEquals(1.5707963267948966, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        TrackingUtilities.distanceBetween((String) null, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl();
      AssetImpl assetImpl0 = new AssetImpl();
      assetImpl0.setMyValidPosition(positionImpl0);
      // Undeclared exception!
      try { 
        TrackingUtilities.distanceBetween((PositionProvider) assetImpl0, (PositionProvider) assetImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        TrackingUtilities.getDistance((Position) null, (Position) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween(0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween((-2902.7979F), (-2902.7979F), (-2902.7979F), (-2902.7979F));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = TrackingUtilities.formatString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = TrackingUtilities.formatString((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl(0.9998466721718164, (-2818.9741419));
      double double0 = TrackingUtilities.getDistance(positionImpl0, positionImpl0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AssetImpl assetImpl0 = new AssetImpl();
      PositionImpl positionImpl0 = new PositionImpl(2013.5, 2013.5);
      AssetImpl assetImpl1 = new AssetImpl();
      assetImpl1.setMyValidPosition(positionImpl0);
      // Undeclared exception!
      try { 
        TrackingUtilities.distanceBetween((Asset) assetImpl1, (Asset) assetImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PositionImpl positionImpl0 = new PositionImpl(0.0, 0.38791433378577056);
      AssetImpl assetImpl0 = new AssetImpl();
      assetImpl0.setMyValidPosition(positionImpl0);
      AssetImpl assetImpl1 = new AssetImpl();
      assetImpl1.setMyValidPosition(positionImpl0);
      double double0 = TrackingUtilities.distanceBetween((Asset) assetImpl1, (Asset) assetImpl0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween(1.0F, 0.0F, 1.0F, (-3271.0F));
      assertEquals(3450368.9348862167, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween(1.0F, 1.0F, (-2874.9236F), (-2874.9236F));
      assertEquals(639096.6915577849, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        TrackingUtilities.distanceBetween("0", "}S_I)'E0vP;}|':=B/", "0", "0");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        TrackingUtilities.distanceBetween("30", "30", "30", "\"");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double double0 = TrackingUtilities.distanceBetween(0.0, 0.0, (-1165.408658), 0.0);
      assertEquals(9489151.552092372, double0, 0.01);
  }
}
