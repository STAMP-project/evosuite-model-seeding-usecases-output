/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:13:25 GMT 2019
 */

package org.ow2.proactive.catalog.repository.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.SortedSet;
import java.util.TreeSet;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.ow2.proactive.catalog.repository.entity.BucketEntity;
import org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity;
import org.ow2.proactive.catalog.repository.entity.CatalogObjectRevisionEntity;

public class CatalogObjectEntity_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      catalogObjectEntity_CatalogObjectEntityKey0.setName("r vax<Q~45");
      assertEquals("r vax<Q~45", catalogObjectEntity_CatalogObjectEntityKey0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      String string0 = catalogObjectEntity_CatalogObjectEntityKey0.toString();
      assertEquals("CatalogObjectEntity.CatalogObjectEntityKey(bucketId=null, name=null)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = CatalogObjectEntity.builder();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder1 = catalogObjectEntity_CatalogObjectEntityBuilder0.extension("UotBI>@k'");
      assertSame(catalogObjectEntity_CatalogObjectEntityBuilder0, catalogObjectEntity_CatalogObjectEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = new CatalogObjectEntity.CatalogObjectEntityBuilder();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder1 = catalogObjectEntity_CatalogObjectEntityBuilder0.id(catalogObjectEntity_CatalogObjectEntityKey0);
      assertSame(catalogObjectEntity_CatalogObjectEntityBuilder0, catalogObjectEntity_CatalogObjectEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = CatalogObjectEntity.builder();
      String string0 = catalogObjectEntity_CatalogObjectEntityBuilder0.toString();
      assertEquals("CatalogObjectEntity.CatalogObjectEntityBuilder(id=null, bucket=null, contentType=null, kind=null, extension=null, revisions=null, lastCommitTime=0)", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = new CatalogObjectEntity.CatalogObjectEntityBuilder();
      BucketEntity bucketEntity0 = new BucketEntity();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder1 = catalogObjectEntity_CatalogObjectEntityBuilder0.bucket(bucketEntity0);
      assertSame(catalogObjectEntity_CatalogObjectEntityBuilder1, catalogObjectEntity_CatalogObjectEntityBuilder0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = CatalogObjectEntity.builder();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder1 = catalogObjectEntity_CatalogObjectEntityBuilder0.kind("J~_*@j(");
      assertSame(catalogObjectEntity_CatalogObjectEntityBuilder0, catalogObjectEntity_CatalogObjectEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = new CatalogObjectEntity.CatalogObjectEntityBuilder();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder1 = catalogObjectEntity_CatalogObjectEntityBuilder0.lastCommitTime((-1704L));
      assertSame(catalogObjectEntity_CatalogObjectEntityBuilder0, catalogObjectEntity_CatalogObjectEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = new CatalogObjectEntity.CatalogObjectEntityBuilder();
      catalogObjectEntity_CatalogObjectEntityBuilder0.revisions((SortedSet<CatalogObjectRevisionEntity>) null);
      CatalogObjectEntity catalogObjectEntity0 = catalogObjectEntity_CatalogObjectEntityBuilder0.build();
      SortedSet<CatalogObjectRevisionEntity> sortedSet0 = catalogObjectEntity0.getRevisions();
      assertNull(sortedSet0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      TreeSet<CatalogObjectRevisionEntity> treeSet0 = new TreeSet<CatalogObjectRevisionEntity>();
      catalogObjectEntity0.setRevisions(treeSet0);
      assertNull(catalogObjectEntity0.getContentType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      long long0 = catalogObjectEntity0.getLastCommitTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      BucketEntity bucketEntity0 = new BucketEntity();
      catalogObjectEntity0.setBucket(bucketEntity0);
      BucketEntity bucketEntity1 = catalogObjectEntity0.getBucket();
      assertNull(bucketEntity1.getOwner());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = catalogObjectEntity0.getId();
      assertNull(catalogObjectEntity_CatalogObjectEntityKey0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      String string0 = catalogObjectEntity0.getExtension();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      BucketEntity bucketEntity0 = catalogObjectEntity0.getBucket();
      assertNull(bucketEntity0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      catalogObjectEntity0.setContentType((String) null);
      assertNull(catalogObjectEntity0.getExtension());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      String string0 = catalogObjectEntity0.toString();
      assertEquals("CatalogObjectEntity{id=null, bucket=null, contentType='null', kind='null', lastCommitTime=0}", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      String string0 = catalogObjectEntity0.getKind();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      catalogObjectEntity0.setKind("");
      String string0 = catalogObjectEntity0.getKind();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      // Undeclared exception!
      try { 
        catalogObjectEntity0.addRevision((CatalogObjectRevisionEntity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BucketEntity bucketEntity0 = new BucketEntity();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, "2sJroRCI", "2sJroRCI", "2sJroRCI", (SortedSet<CatalogObjectRevisionEntity>) null, 0L);
      String string0 = catalogObjectEntity0.getContentType();
      assertEquals("2sJroRCI", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = new CatalogObjectEntity.CatalogObjectEntityBuilder();
      TreeSet<CatalogObjectRevisionEntity> treeSet0 = new TreeSet<CatalogObjectRevisionEntity>();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder1 = catalogObjectEntity_CatalogObjectEntityBuilder0.revisions(treeSet0);
      CatalogObjectEntity catalogObjectEntity0 = catalogObjectEntity_CatalogObjectEntityBuilder1.build();
      assertNull(catalogObjectEntity0.getExtension());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      boolean boolean0 = catalogObjectEntity_CatalogObjectEntityKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      boolean boolean0 = catalogObjectEntity_CatalogObjectEntityKey0.equals(catalogObjectEntity_CatalogObjectEntityKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = CatalogObjectEntity.builder();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      boolean boolean0 = catalogObjectEntity_CatalogObjectEntityKey0.equals(catalogObjectEntity_CatalogObjectEntityBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey1 = new CatalogObjectEntity.CatalogObjectEntityKey();
      boolean boolean0 = catalogObjectEntity_CatalogObjectEntityKey0.equals(catalogObjectEntity_CatalogObjectEntityKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BucketEntity bucketEntity0 = new BucketEntity();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, ")gJ=", ")gJ=", "Sensitive", (SortedSet<CatalogObjectRevisionEntity>) null, (-544L));
      // Undeclared exception!
      try { 
        catalogObjectEntity0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BucketEntity bucketEntity0 = new BucketEntity();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, "Sensitive", "Sensitive", "Sensitive", (SortedSet<CatalogObjectRevisionEntity>) null, 0L);
      Long long0 = new Long(0L);
      catalogObjectEntity_CatalogObjectEntityKey0.setBucketId(long0);
      // Undeclared exception!
      try { 
        catalogObjectEntity0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      boolean boolean0 = catalogObjectEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      boolean boolean0 = catalogObjectEntity0.equals(catalogObjectEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectEntity catalogObjectEntity1 = new CatalogObjectEntity();
      boolean boolean0 = catalogObjectEntity1.equals(catalogObjectEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = CatalogObjectEntity.builder();
      boolean boolean0 = catalogObjectEntity0.equals(catalogObjectEntity_CatalogObjectEntityBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = new CatalogObjectEntity.CatalogObjectEntityBuilder();
      catalogObjectEntity_CatalogObjectEntityBuilder0.contentType("");
      CatalogObjectEntity catalogObjectEntity0 = catalogObjectEntity_CatalogObjectEntityBuilder0.build();
      String string0 = catalogObjectEntity0.getContentType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      String string0 = catalogObjectEntity0.getContentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, (BucketEntity) null, ", name=", (String) null, (String) null, (SortedSet<CatalogObjectRevisionEntity>) null, 3413L);
      catalogObjectEntity0.setExtension("");
      catalogObjectEntity0.getExtension();
      assertEquals(3413L, catalogObjectEntity0.getLastCommitTime());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      catalogObjectEntity0.setExtension("3tu!\"37/=#+Ac4fD");
      String string0 = catalogObjectEntity0.getExtension();
      assertEquals("3tu!\"37/=#+Ac4fD", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = mock(CatalogObjectEntity.CatalogObjectEntityKey.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(catalogObjectEntity_CatalogObjectEntityKey0).toString();
      catalogObjectEntity0.setId(catalogObjectEntity_CatalogObjectEntityKey0);
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey1 = catalogObjectEntity0.getId();
      assertNull(catalogObjectEntity_CatalogObjectEntityKey1.getName());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Long long0 = new Long(0L);
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey(long0, "");
      BucketEntity bucketEntity0 = new BucketEntity();
      TreeSet<CatalogObjectRevisionEntity> treeSet0 = new TreeSet<CatalogObjectRevisionEntity>();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, "org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity$CatalogObjectEntityKey", "Q?r&iD]W", "", treeSet0, 0L);
      String string0 = catalogObjectEntity0.getKind();
      assertEquals("Q?r&iD]W", string0);
      assertEquals("org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity$CatalogObjectEntityKey", catalogObjectEntity0.getContentType());
      assertEquals("", catalogObjectEntity0.getExtension());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BucketEntity bucketEntity0 = new BucketEntity("CatalogObjectEntity.CatalogObjectEntityBuilder(id=", "CatalogObjectEntity.CatalogObjectEntityBuilder(id=");
      Long long0 = new Long(2078L);
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey(long0, "org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity");
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      SortedSet<CatalogObjectRevisionEntity> sortedSet0 = catalogObjectEntity0.getRevisions();
      CatalogObjectEntity catalogObjectEntity1 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, "", "org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity", "*9:3tpe", sortedSet0, (-1593L));
      long long1 = catalogObjectEntity1.getLastCommitTime();
      assertEquals("", catalogObjectEntity1.getContentType());
      assertEquals("org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity", catalogObjectEntity1.getKind());
      assertEquals("*9:3tpe", catalogObjectEntity1.getExtension());
      assertEquals((-1593L), long1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CatalogObjectEntity.CatalogObjectEntityBuilder catalogObjectEntity_CatalogObjectEntityBuilder0 = CatalogObjectEntity.builder();
      CatalogObjectEntity catalogObjectEntity0 = catalogObjectEntity_CatalogObjectEntityBuilder0.build();
      catalogObjectEntity0.setLastCommitTime(3019L);
      long long0 = catalogObjectEntity0.getLastCommitTime();
      assertEquals(3019L, long0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      catalogObjectEntity0.addRevision(catalogObjectRevisionEntity0);
      assertNull(catalogObjectRevisionEntity0.getUsername());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Long long0 = Long.valueOf((-2338L));
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey(long0, "");
      Long long1 = catalogObjectEntity_CatalogObjectEntityKey0.getBucketId();
      assertEquals((-2338L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Long long0 = new Long(1L);
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey(long0, "zCbe(?r@,f");
      String string0 = catalogObjectEntity_CatalogObjectEntityKey0.getName();
      assertEquals("zCbe(?r@,f", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BucketEntity bucketEntity0 = new BucketEntity();
      Long long0 = new Long(64L);
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey(long0, ", name=");
      TreeSet<CatalogObjectRevisionEntity> treeSet0 = new TreeSet<CatalogObjectRevisionEntity>();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, "", (String) null, "NttzDSK>%Pzs", treeSet0, (-2115L));
      catalogObjectEntity0.hashCode();
      assertEquals("", catalogObjectEntity0.getContentType());
      assertEquals("NttzDSK>%Pzs", catalogObjectEntity0.getExtension());
      assertEquals((-2115L), catalogObjectEntity0.getLastCommitTime());
  }
}
