<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s10" action="java.util.List.get(int)" proba="0.4166666666666667"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/><transition target="s15" action="java.util.List.toArray(java.lang.Object[])" proba="0.08333333333333333"/><transition target="s1" action="java.util.List.stream()" proba="0.16666666666666666"/></state><state id="s4"><transition target="s5" action="java.util.List.filter(java.util.function.Predicate)" proba="0.05263157894736842"/><transition target="sX" action="epsilon" proba="0.8421052631578947"/><transition target="s12" action="java.util.List.findFirst()" proba="0.05263157894736842"/><transition target="s9" action="java.util.List.findAny()" proba="0.05263157894736842"/></state><state id="s5"><transition target="s4" action="java.util.List.map(java.util.function.Function)" proba="0.3125"/><transition target="sX" action="epsilon" proba="0.375"/><transition target="s12" action="java.util.List.findFirst()" proba="0.0625"/><transition target="s9" action="java.util.List.findAny()" proba="0.125"/><transition target="s1" action="java.util.List.stream()" proba="0.125"/></state><state id="s6"><transition target="s7" action="java.util.List.toString()" proba="0.14285714285714285"/><transition target="sX" action="epsilon" proba="0.8571428571428571"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s6" action="java.util.List.iterator()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.util.List.stream()" proba="0.25"/></state><state id="s9"><transition target="sX" action="epsilon" proba="0.6666666666666666"/><transition target="s14" action="java.util.List.get()" proba="0.3333333333333333"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="s10" action="java.util.List.get(int)" proba="0.5882352941176471"/><transition target="sX" action="epsilon" proba="0.4117647058823529"/></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s13" action="java.util.List.orElse(java.lang.Object)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s15"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.List.size()" proba="0.1935483870967742"/><transition target="s11" action="java.util.List.forEach(java.util.function.Consumer)" proba="0.0967741935483871"/><transition target="s6" action="java.util.List.iterator()" proba="0.0967741935483871"/><transition target="s10" action="java.util.List.get(int)" proba="0.03225806451612903"/><transition target="s8" action="java.util.List.isEmpty()" proba="0.06451612903225806"/><transition target="s16" action="java.util.List.toArray()" proba="0.016129032258064516"/><transition target="s1" action="java.util.List.stream()" proba="0.41935483870967744"/><transition target="s2" action="java.util.List.add(java.lang.Object)" proba="0.08064516129032258"/></state><state id="s1"><transition target="s4" action="java.util.List.map(java.util.function.Function)" proba="0.45161290322580644"/><transition target="s5" action="java.util.List.filter(java.util.function.Predicate)" proba="0.4838709677419355"/><transition target="sX" action="epsilon" proba="0.06451612903225806"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.625"/><transition target="s2" action="java.util.List.add(java.lang.Object)" proba="0.375"/></state></states></ts>