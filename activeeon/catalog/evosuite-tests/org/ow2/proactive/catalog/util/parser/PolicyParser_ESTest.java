/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:38:36 GMT 2019
 */

package org.ow2.proactive.catalog.util.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.ByteArrayInputStream;
import java.util.LinkedList;
import java.util.List;
import org.ow2.proactive.catalog.repository.entity.KeyValueLabelMetadataEntity;
import org.ow2.proactive.catalog.util.parser.PolicyParser;

public class PolicyParser_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PolicyParser policyParser0 = new PolicyParser();
      boolean boolean0 = policyParser0.isMyKind("policynodesourcegeneral");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PolicyParser policyParser0 = new PolicyParser();
      LinkedList<KeyValueLabelMetadataEntity> linkedList0 = new LinkedList<KeyValueLabelMetadataEntity>();
      String string0 = policyParser0.getIconPath(linkedList0);
      assertEquals("/automation-dashboard/styles/patterns/img/objects-icons/node_source_policy_icon.png", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PolicyParser policyParser0 = new PolicyParser();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      List<KeyValueLabelMetadataEntity> list0 = policyParser0.getMetadataKeyValues(byteArrayInputStream0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PolicyParser policyParser0 = new PolicyParser();
      // Undeclared exception!
      try { 
        policyParser0.isMyKind((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PolicyParser policyParser0 = new PolicyParser();
      boolean boolean0 = policyParser0.isMyKind("General");
      assertFalse(boolean0);
  }
}
