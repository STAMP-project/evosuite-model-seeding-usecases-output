/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 15:17:28 GMT 2019
 */

package org.ow2.proactive.catalog.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.ow2.proactive.catalog.dto.Metadata;
import org.ow2.proactive.catalog.repository.entity.KeyValueLabelMetadataEntity;
import org.ow2.proactive.catalog.service.KeyValueLabelMetadataHelper;
import org.ow2.proactive.catalog.service.OwnerGroupStringHelper;
import org.ow2.proactive.catalog.service.model.GenericInfoBucketData;
import org.ow2.proactive.catalog.util.parser.AbstractCatalogObjectParser;

public class KeyValueLabelMetadataHelper_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      ArrayList<AbstractCatalogObjectParser> arrayList0 = new ArrayList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, arrayList0);
      Vector<KeyValueLabelMetadataEntity> vector0 = new Vector<KeyValueLabelMetadataEntity>();
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.getOnlyGenericInformation(vector0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Vector<AbstractCatalogObjectParser> vector0 = new Vector<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, vector0);
      ArrayList<KeyValueLabelMetadataEntity> arrayList0 = new ArrayList<KeyValueLabelMetadataEntity>();
      KeyValueLabelMetadataEntity keyValueLabelMetadataEntity0 = new KeyValueLabelMetadataEntity("GROUP:", "GROUP:", "GROUP:");
      arrayList0.add(keyValueLabelMetadataEntity0);
      Map<String, String> map0 = keyValueLabelMetadataHelper0.toMap(arrayList0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      ArrayList<AbstractCatalogObjectParser> arrayList0 = new ArrayList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, arrayList0);
      Vector<KeyValueLabelMetadataEntity> vector0 = new Vector<KeyValueLabelMetadataEntity>();
      GenericInfoBucketData genericInfoBucketData0 = GenericInfoBucketData.EMPTY;
      genericInfoBucketData0.setGroup("");
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.replaceMetadataRelatedGenericInfoAndKeepOthers(vector0, genericInfoBucketData0);
      List<KeyValueLabelMetadataEntity> list1 = keyValueLabelMetadataHelper0.getOnlyNotDuplicatedDependsOn(list0);
      assertEquals(1, list0.size());
      assertFalse(list1.equals((Object)list0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Metadata> linkedList0 = new LinkedList<Metadata>();
      List<KeyValueLabelMetadataEntity> list0 = KeyValueLabelMetadataHelper.convertToEntity(linkedList0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      ArrayList<AbstractCatalogObjectParser> arrayList0 = new ArrayList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, arrayList0);
      Vector<KeyValueLabelMetadataEntity> vector0 = new Vector<KeyValueLabelMetadataEntity>();
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.getOnlyNotDuplicatedDependsOn(vector0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      ArrayList<AbstractCatalogObjectParser> arrayList0 = new ArrayList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, arrayList0);
      Vector<KeyValueLabelMetadataEntity> vector0 = new Vector<KeyValueLabelMetadataEntity>();
      GenericInfoBucketData genericInfoBucketData0 = GenericInfoBucketData.EMPTY;
      genericInfoBucketData0.setGroup("");
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.replaceMetadataRelatedGenericInfoAndKeepOthers(vector0, genericInfoBucketData0);
      List<KeyValueLabelMetadataEntity> list1 = keyValueLabelMetadataHelper0.getOnlyGenericInformation(list0);
      assertEquals(1, list1.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      ArrayList<AbstractCatalogObjectParser> arrayList0 = new ArrayList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, arrayList0);
      // Undeclared exception!
      try { 
        keyValueLabelMetadataHelper0.convertFromEntity((List<KeyValueLabelMetadataEntity>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Stack<AbstractCatalogObjectParser> stack0 = new Stack<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, stack0);
      GenericInfoBucketData genericInfoBucketData0 = GenericInfoBucketData.EMPTY;
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.replaceMetadataRelatedGenericInfoAndKeepOthers((List<KeyValueLabelMetadataEntity>) null, genericInfoBucketData0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Stack<AbstractCatalogObjectParser> stack0 = new Stack<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, stack0);
      ArrayList<KeyValueLabelMetadataEntity> arrayList0 = new ArrayList<KeyValueLabelMetadataEntity>();
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.replaceMetadataRelatedGenericInfoAndKeepOthers(arrayList0, (GenericInfoBucketData) null);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        KeyValueLabelMetadataHelper.convertToEntity((List<Metadata>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Stack<AbstractCatalogObjectParser> stack0 = new Stack<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, stack0);
      // Undeclared exception!
      try { 
        keyValueLabelMetadataHelper0.extractKeyValuesFromRaw("GROUP:", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Stack<AbstractCatalogObjectParser> stack0 = new Stack<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, stack0);
      // Undeclared exception!
      try { 
        keyValueLabelMetadataHelper0.getOnlyGenericInformation((List<KeyValueLabelMetadataEntity>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      LinkedList<AbstractCatalogObjectParser> linkedList0 = new LinkedList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, linkedList0);
      // Undeclared exception!
      try { 
        keyValueLabelMetadataHelper0.getOnlyNotDuplicatedDependsOn((List<KeyValueLabelMetadataEntity>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<AbstractCatalogObjectParser> linkedList0 = new LinkedList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper((OwnerGroupStringHelper) null, linkedList0);
      LinkedList<KeyValueLabelMetadataEntity> linkedList1 = new LinkedList<KeyValueLabelMetadataEntity>();
      GenericInfoBucketData genericInfoBucketData0 = GenericInfoBucketData.EMPTY;
      // Undeclared exception!
      try { 
        keyValueLabelMetadataHelper0.replaceMetadataRelatedGenericInfoAndKeepOthers(linkedList1, genericInfoBucketData0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Vector<AbstractCatalogObjectParser> vector0 = new Vector<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, vector0);
      // Undeclared exception!
      try { 
        keyValueLabelMetadataHelper0.toMap((List<KeyValueLabelMetadataEntity>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = mock(OwnerGroupStringHelper.class, new ViolatedAssumptionAnswer());
      Vector<AbstractCatalogObjectParser> vector0 = new Vector<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, vector0);
      byte[] byteArray0 = new byte[2];
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.extractKeyValuesFromRaw("Map cannot be null", byteArray0);
      List<Metadata> list1 = keyValueLabelMetadataHelper0.convertFromEntity(list0);
      assertFalse(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stack<AbstractCatalogObjectParser> stack0 = new Stack<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper((OwnerGroupStringHelper) null, stack0);
      Stack<KeyValueLabelMetadataEntity> stack1 = new Stack<KeyValueLabelMetadataEntity>();
      List<Metadata> list0 = keyValueLabelMetadataHelper0.convertFromEntity(stack1);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Stack<Metadata> stack0 = new Stack<Metadata>();
      Metadata metadata0 = mock(Metadata.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(metadata0).getKey();
      doReturn((String) null).when(metadata0).getLabel();
      doReturn((String) null).when(metadata0).getValue();
      stack0.add(metadata0);
      List<KeyValueLabelMetadataEntity> list0 = KeyValueLabelMetadataHelper.convertToEntity(stack0);
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      Stack<AbstractCatalogObjectParser> stack0 = new Stack<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, stack0);
      ArrayList<KeyValueLabelMetadataEntity> arrayList0 = new ArrayList<KeyValueLabelMetadataEntity>();
      Map<String, String> map0 = keyValueLabelMetadataHelper0.toMap(arrayList0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      ArrayList<AbstractCatalogObjectParser> arrayList0 = new ArrayList<AbstractCatalogObjectParser>();
      KeyValueLabelMetadataHelper keyValueLabelMetadataHelper0 = new KeyValueLabelMetadataHelper(ownerGroupStringHelper0, arrayList0);
      GenericInfoBucketData genericInfoBucketData0 = GenericInfoBucketData.EMPTY;
      genericInfoBucketData0.setGroup("");
      genericInfoBucketData0.setBucketName("|3)^8Y");
      Stack<KeyValueLabelMetadataEntity> stack0 = new Stack<KeyValueLabelMetadataEntity>();
      List<KeyValueLabelMetadataEntity> list0 = keyValueLabelMetadataHelper0.replaceMetadataRelatedGenericInfoAndKeepOthers(stack0, genericInfoBucketData0);
      assertEquals(2, list0.size());
  }
}
