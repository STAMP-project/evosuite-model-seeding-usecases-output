/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 24 09:16:30 GMT 2019
 */

package no.tellu.lib.data.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import no.tellu.lib.data.DataGroupNode;
import no.tellu.lib.data.DataHandle;
import no.tellu.lib.data.DataNode;
import no.tellu.lib.data.DataPath;
import no.tellu.lib.data.DataSerializer;
import no.tellu.lib.data.DataValueNode;
import no.tellu.lib.data.MetaGroupNode;
import no.tellu.lib.data.MetaItemNode;
import no.tellu.lib.data.MetaNode;
import no.tellu.lib.data.MetaNumberNode;
import no.tellu.lib.data.model.Action;
import no.tellu.lib.data.model.DataModel;
import no.tellu.lib.data.model.DataModelHandle;
import no.tellu.lib.data.model.DataProvider;
import no.tellu.lib.data.model.ExprParser;
import no.tellu.lib.data.model.ParsedExpr;
import no.tellu.lib.data.model.Rule;
import no.tellu.lib.data.model.Trigger;
import no.tellu.lib.data.serialize.JsonSerializer;
import no.tellu.lib.log.Logger;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;

public class DataModel_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("Tz'G*", "Tz'G*", 2336, metaItemNode_DataType0);
      String string0 = parsedExpr0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.removeMetaNode("jkMmY8d", "Failed to merge instance ");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(" E44MM2AEbko&-5");
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("", metaGroupNode0);
      String string0 = dataModel_MetaTransaction0.toString();
      assertEquals("MetaTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      ParsedExpr parsedExpr0 = new ParsedExpr("+<la<%,TW", "+<la<%,TW", 68, metaItemNode_DataType0);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("#PS");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, parsedExpr0, (DataHandle.TransactionCommitCallback) null);
      String string0 = dataModel_ModelMergeTransaction0.toString();
      assertEquals("MergeTransaction for instance \"#PS\"", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode(":}aKP@r pi7/");
      Rule rule0 = new Rule("DataModel initialized from file", ":}aKP@r pi7/", ":}aKP@r pi7", "DataModel initialized from file");
      DataModel.CopyTransaction dataModel_CopyTransaction0 = dataModel0.new CopyTransaction(dataGroupNode0, (String) null, rule0, (DataHandle.TransactionCommitCallback) null);
      String string0 = dataModel_CopyTransaction0.toString();
      assertEquals("CopyTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("conds");
      // Undeclared exception!
      try { 
        dataModel_GroupSubscriberNode0.removeSubscrImpl((-1780));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.startTransaction((DataHandle.DataUpdateSubscriber) null, (DataHandle.TransactionCommitCallback) null, false);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("ld?mdr@-rL}", "End parenthesis without matching start", (-2071), metaItemNode_DataType0);
      DataModel.DataTransaction dataModel_DataTransaction0 = dataModel0.new DataTransaction(parsedExpr0, (DataHandle.TransactionCommitCallback) null, true);
      String string0 = dataModel_DataTransaction0.toString();
      assertEquals("DataTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Logger logger0 = new Logger("no.tellu.lib.data.model.DataModel$ValueNodeTransaction");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("b>c{ XEm{#S*N@bL_)", "b>c{ XEm{#S*N@bL_)", 5, metaItemNode_DataType0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction(" ^*", dataModel_SubscriberFields0, true);
      String string0 = dataModel_SubscriberTransaction0.toString();
      assertEquals("SubscriberTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("c", "$N", "$N", "$N");
      dataModel0.addDataSubscriber(":;V;iG/", "rules", "conds", rule0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      ParsedExpr parsedExpr0 = new ParsedExpr("T(>rD=", "y", 32, metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.resetDefaults(parsedExpr0, dataHandle_TransactionCommitCallback0);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Logger logger0 = new Logger((String) null);
      DataModel dataModel0 = new DataModel(logger0, 408);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("#", "#", (-2057), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ResetTransaction dataModel_ResetTransaction0 = dataModel0.new ResetTransaction(parsedExpr0, dataHandle_TransactionCommitCallback0);
      String string0 = dataModel_ResetTransaction0.toString();
      assertEquals("ResetTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.setMainFile((File) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule(":}aKP@r p7", "+|ph-' mJwUg", ":}aKP@r p7", ":}aKP@r p7");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("-");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.mergeInstance(dataGroupNode0, true, rule0, dataHandle_TransactionCommitCallback0);
      assertEquals(0, dataGroupNode0.childNodes());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      ParsedExpr parsedExpr0 = new ParsedExpr("$/", "O(dt`6k/Hx%,F", (-1021), (MetaItemNode.DataType) null);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.copyFromModel((DataModelHandle) null, "$/", parsedExpr0, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.setMainSerializer((DataSerializer) null);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.mergeFromFile("Bi@&hqs0uP^Pcd", (File) null);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getRootHandle();
      assertNull(dataModelHandle0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData((DataModelHandle) null, "52k-a__yTA%CL=B{`//");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Logger logger0 = new Logger("rules//");
      DataModel dataModel0 = new DataModel(logger0, 1);
      // Undeclared exception!
      try { 
        dataModel0.initFromModel((DataModelHandle) null, "#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode((String) null, (Object) null, 0.0, 0.0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, metaNumberNode0);
      DataModel.ValueNodeTransaction dataModel_ValueNodeTransaction0 = dataModel0.new ValueNodeTransaction(dataValueNode0, metaNumberNode0.CARD_ZERO_OR_ONE);
      boolean boolean0 = dataModel_ValueNodeTransaction0.execute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      try { 
        dataModel0.initFromFile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initFromFile();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initFromMeta();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initFromMeta();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initEmpty();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initFromModel(dataModel0, "X#xC_");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      JsonSerializer jsonSerializer0 = new JsonSerializer();
      dataModel0.setInstanceSerializer("?jdi$?*m", jsonSerializer0);
      dataModel0.setInstanceSerializer("{", jsonSerializer0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Logger logger0 = new Logger(";.E`");
      DataModel dataModel0 = new DataModel(logger0);
      File file0 = MockFile.createTempFile("eE1G3t", "' the character '", (File) null);
      dataModel0.setInstanceFile("", file0);
      dataModel0.setInstanceFile("eE1G3t", (File) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.writeToFile((String) null, (File) null);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      File file0 = MockFile.createTempFile("$yw3Wz1dSt,HN", "MergeHandle is read-only/");
      try { 
        dataModel0.writeToFile((String) null, file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      InputStream inputStream0 = dataModel0.getInputStream((String) null);
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      InputStream inputStream0 = dataModel0.getInputStream("7");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0);
      InputStream inputStream0 = dataModel0.getInputStream("");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      OutputStream outputStream0 = dataModel0.getOutputStream((String) null);
      assertNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      OutputStream outputStream0 = dataModel0.getOutputStream("p@X");
      assertNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.persistAll();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      try { 
        dataModel0.writeToStream(dataGroupNode0, byteArrayOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("' is already pending/", 1553);
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("STIXG", metaGroupNode0);
      dataModel0.addTransaction(dataModel_MetaTransaction0);
      dataModel0.addTransaction(dataModel_MetaTransaction0);
      assertEquals("MetaTransaction", dataModel_MetaTransaction0.toString());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Logger logger0 = new Logger("Can't add DataProvider - contextPath not found in model");
      DataModel dataModel0 = new DataModel(logger0, 5);
      dataModel0.initEmpty();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("$", "X#xC_", 6, metaItemNode_DataType0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) null, locale_FilteringMode0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "", "S", "");
      LinkedList<Trigger> linkedList0 = new LinkedList<Trigger>();
      LinkedList<Action> linkedList1 = new LinkedList<Action>();
      dataModel0.addRule("$", "MaH", "#", "X#xC_", list0, linkedList0, linkedList1);
      assertFalse(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addMetaNode((String) null, (MetaNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // addMetaNode meta can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.removeMetaNode("Error writing data to file", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // removeMetaNode metaName can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.removeMetaNode("G", "G");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData((DataModel) null, "$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData(dataModel0, "I$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't copyMetaData to initialized DataModel
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.copyMetaData(dataModel0, "");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.copyMetaData(dataModel0, (String) null);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.copyMetaData(dataModel0, "$");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      MetaItemNode metaItemNode0 = new MetaItemNode("", "", (-1937509255));
      dataModel0.addMetaNode("", metaItemNode0);
      assertEquals((-1937509255), metaItemNode0.getUnit());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode metaItemNode0 = new MetaItemNode("", (Object) null);
      dataModel0.addMetaNode("Nshi+XJ-4<G//", metaItemNode0);
      assertEquals(0, metaItemNode0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.metaDataRemove(":", ":");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode("U=?'");
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, (DataHandle.DataUpdateSubscriber) null, (DataHandle.TransactionCommitCallback) null);
      dataModel_ModelMergeTransaction0.execute();
      dataModel0.metaDataRemove("U=?'", "rules/");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.metaDataRemove("29=*J%l?Fk@~g8&fC///", "29=*J%l?Fk@~g8&fC///");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("}aKP@ p7", "}aKP@ p7", "}aKP@ p7", "}aKP@ p7");
      dataModel0.addDataSubscriber((String) null, "conds", "}aKP@ p7", rule0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.addDataSubscriber("", "", "", (DataHandle.DataUpdateSubscriber) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, (String) null, "}?NC/c", "}?NC/c");
      dataModel0.addDataSubscriber("}?NC/c", "]ahHKAw|n+-", "]ahHKAw|n+-", rule0);
      dataModel0.removeDataSubscriber("}?NC/c", rule0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, (String) null, "}?NC/c", "}?NC/c");
      dataModel0.removeDataSubscriber("}?NC/c", rule0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.removeDataSubscriber("d]", (DataHandle.DataUpdateSubscriber) null);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.clearDataSubscribers();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("dNUR*NbU*D&>,1S3", "dNUR*NbU*D&>,1S3", (-42305025), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, ":", "dNUR*NbU*D&>,1S3", ":");
      dataModel0.addDataSubscriber("dNUR*NbU*D&>,1S3", "dNUR*NbU*D&>,1S3", "dNUR*NbU*D&>,1S3", parsedExpr0);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("gvGq^PFD9L=i", "1Y(l@s/OLplW(RdEc", (-1851668821), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "int", "Attempt to remove required node/value", (String) null);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "int", "Attempt to remove required node/value", "Attempt to remove required node/value");
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("+|ph-' mJwUg", " except CR, LF and TAB", 100, metaItemNode_DataType0);
      DataModel dataModel0 = new DataModel();
      dataModel0.addDataSubscriber("xC?MNJT#J0", " except CR, LF and TAB", " except CR, LF and TAB", parsedExpr0);
      Rule rule0 = new Rule("+|ph-' mJwUg", " incompatible with meta type ", "P*R>VaD", "N");
      dataModel0.removeDataSubscriber((String) null, rule0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.removeSubscriber((DataPath) null, (DataHandle.DataUpdateSubscriber) null);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, (String) null, (String) null, (String) null);
      dataModel0.addDataSubscriber("]ahHKAw\n+-", "]ahHKAw\n+-", "]ahHKAw\n+-", rule0);
      dataModel0.removeDataSubscriber((String) null, rule0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "", (-408), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "", "", ":");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) parsedExpr0, (DataNode) dataGroupNode0, "");
      assertEquals("", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("*lrp};T|6?Cem0", "", (-408), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "*lrp};T|6?Cem0", "*lrp};T|6?Cem0", ":");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) parsedExpr0, (DataNode) dataGroupNode0, "*lrp};T|6?Cem0");
      assertEquals("", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("Add meta data on path $");
      Rule rule0 = new Rule((String) null, (String) null, (String) null, (String) null);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      dataModel_GroupSubscriberNode0.addSubscriber((DataPath) null, dataModel_SubscriberFields0, metaGroupNode0);
      dataModel_GroupSubscriberNode0.addSubscriber((DataPath) null, dataModel_SubscriberFields0, metaGroupNode0);
      assertEquals("model", metaGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("OFTd^&,", (String) null, (-48077992), metaItemNode_DataType0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0, "330", "kF*yyxBje");
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("kF*yyxBje");
      dataModel_GroupSubscriberNode0.addSubscrImpl("+<la<%,TW", dataModel_SubscriberFields0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("S", (-262));
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("S");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields((DataHandle.DataUpdateSubscriber) null);
      dataModel_GroupSubscriberNode0.addSubscrImpl("0", dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) null, (DataNode) dataGroupNode0, "0");
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode(";7T_Z");
      DataHandle.DataUpdateSubscriber dataHandle_DataUpdateSubscriber0 = mock(DataHandle.DataUpdateSubscriber.class, new ViolatedAssumptionAnswer());
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(dataHandle_DataUpdateSubscriber0);
      dataModel_GroupSubscriberNode0.addSubscrImpl(";7T_Z", dataModel_SubscriberFields0);
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      dataModel_GroupSubscriberNode0.notify((DataNode) null, (DataHandle.DataUpdateSubscriber) null, (DataNode) dataValueNode0, "_o4p.;R&q&7");
      assertFalse(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("STIXG");
      Stack<DataModel.DataSubscriberNode> stack0 = new Stack<DataModel.DataSubscriberNode>();
      stack0.add((DataModel.DataSubscriberNode) dataModel_GroupSubscriberNode0);
      dataModel_GroupSubscriberNode0.childNodes = (List<DataModel.DataSubscriberNode>) stack0;
      Rule rule0 = new Rule((String) null, "?NC/c", (String) null, "?NC/c");
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataModel_GroupSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) rule0, (DataNode) dataGroupNode0, (String) null);
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Logger logger0 = new Logger("?jdi$?Bm");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction((String) null, (DataModel.SubscriberFields) null, false);
      // Undeclared exception!
      try { 
        dataModel_SubscriberTransaction0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Logger logger0 = new Logger("?jdi$?Bm");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction("?jdi$?Bm", (DataModel.SubscriberFields) null, true);
      // Undeclared exception!
      try { 
        dataModel_SubscriberTransaction0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Logger logger0 = new Logger("?jdi$?Bm");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction((String) null, (DataModel.SubscriberFields) null, true);
      boolean boolean0 = dataModel_SubscriberTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Logger logger0 = new Logger(";.Fm`");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("#", "FM#EkS6R,", 1, metaItemNode_DataType0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0, "5k{~sqh", "$");
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction((String) null, dataModel_SubscriberFields0, true);
      boolean boolean0 = dataModel_SubscriberTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dataProvider0).getName();
      // Undeclared exception!
      try { 
        dataModel0.addDataProvider(dataProvider0, "int");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      boolean boolean0 = dataModel0.hasDataProvider("U=?'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.replaceDataProvider((DataProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dataProvider0).getName();
      // Undeclared exception!
      try { 
        dataModel0.replaceDataProvider(dataProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No DataProvider found with name null
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.clearDataProviders();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      boolean boolean0 = dataModel0.activateProvider((DataHandle.DataUpdateSubscriber) null, "", dataGroupNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.deactivateProvider((DataHandle.DataUpdateSubscriber) null, "$");
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Stack<String> stack0 = new Stack<String>();
      stack0.add("Nshi+XJ-<G");
      LinkedList<Trigger> linkedList0 = new LinkedList<Trigger>();
      LinkedList<Action> linkedList1 = new LinkedList<Action>();
      stack0.add("Nshi+XJ-<G");
      // Undeclared exception!
      try { 
        dataModel0.addRule((String) null, "Nshi+XJ-<G", "Nshi+XJ-<G", "Nshi+XJ-<G", stack0, linkedList0, linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr(":}aKP@r p7", ":}aKP@r p7", 100, metaItemNode_DataType0);
      dataModel0.initEmpty();
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "", ":}aKP@r p7", (String) null);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr(":}aKP@r p7", ":}aKP@r p7", 100, metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "*!&1pEnjw*!4.wc/", "*!&1pEnjw*!4.wc/", "*!&1pEnjw*!4.wc/");
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Action> linkedList1 = new LinkedList<Action>();
      dataModel0.addRule("Value ", "Value ", "0", (String) null, linkedList0, (List<Trigger>) null, linkedList1);
      try { 
        dataModel0.addProcessor("The input stream ended with an incomplete escape sequence//", "^X*Y`g7s&~U");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Assignment must start with a data path
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      try { 
        dataModel0.addProcessor("}aKP@r p7", "}aKP@r p7");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Assignment must start with a data path
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      ExprParser exprParser0 = new ExprParser(dataModel0);
      List<String> list0 = exprParser0.subscrPaths;
      Stack<Trigger> stack0 = new Stack<Trigger>();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      // Undeclared exception!
      try { 
        dataModel0.addRule("removeMetaNode metaName can't be null/", "removeMetaNode metaName can't be null/", "removeMetaNode metaName can't be null/", "removeMetaNode metaName can't be null/", list0, stack0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addRule("no.tellu.lib.data.model.DataModel$ValueNodeTransaction", "q*M)G-nSa5!Rj", "DataProvider $ needs configuration", "l", (List<String>) null, (List<Trigger>) null, (List<Action>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Stack<String> stack0 = new Stack<String>();
      LinkedList<Trigger> linkedList0 = new LinkedList<Trigger>();
      Trigger trigger0 = mock(Trigger.class, new ViolatedAssumptionAnswer());
      linkedList0.add(trigger0);
      LinkedList<Action> linkedList1 = new LinkedList<Action>();
      // Undeclared exception!
      try { 
        dataModel0.addRule("+ BQv%dL*^)D5[L#", "0", "+ BQv%dL*^)D5[L#", "0", stack0, linkedList0, linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Stack<String> stack0 = new Stack<String>();
      LinkedList<Trigger> linkedList0 = new LinkedList<Trigger>();
      LinkedList<Action> linkedList1 = new LinkedList<Action>();
      Action action0 = mock(Action.class, new ViolatedAssumptionAnswer());
      linkedList1.push(action0);
      // Undeclared exception!
      try { 
        dataModel0.addRule("FqJmg<OX|g5UO<H]_+", "0", "FqJmg<OX|g5UO<H]_+", "0", stack0, linkedList0, linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.commitTransaction();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("eB$PnN<<ku56XJ6kGa", "/", (String) null, (String) null);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("rules");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("eB$PnN<<ku56XJ6kGa", "eB$PnN<<ku56XJ6kGa", 554, metaItemNode_DataType0);
      parsedExpr0.onDataValueUpdate(dataModelHandle0);
      assertTrue(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.cancelTransaction();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule(":}aKP@r p7", ":}aKP@r p7", ".bBY5 r;({HT;~vf", ".bBY5 r;({HT;~vf");
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(":}aKP@r p7");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback0);
      dataModel0.cancelTransaction();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule(":}aKP@r p7", ":}aKP@r p7", ".bBY5 r;({HT;~vf", ".bBY5 r;({HT;~vf");
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(":}aKP@r p7");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback1 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback1);
      dataModel0.cancelTransaction();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addDataUpdate((DataHandle.Transaction) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel.NodeNameTransaction dataModel_NodeNameTransaction0 = dataModel0.new NodeNameTransaction(dataGroupNode0, "", "", "");
      boolean boolean0 = dataModel_NodeNameTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("DataModel initialized rom file", ":}aKP@r pi7", ":}aKP@r pi7", "DataModel initialized rom file");
      dataModel0.addDataSubscriber(":}aKP@r pi7", ":}aKP@r pi7", ":}aKP@r pi7", rule0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("HXT\"G6\b<9D|q*=lvz", "S7L'\"e:aD>^c}`z5", (-24589507), metaItemNode_DataType0);
      dataModel0.addDataSubscriber("no.tellu.lib.data.model.DataModel$ModelMergeTransaction", "An array element cannot be a Name:Value pair - it must be only a value (this is most likely caused by misplaced or missing closing bracket)", "DataModel initialized rom file", parsedExpr0);
      assertEquals((byte)1, ParsedExpr.PATH_LOCAL_PATH);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("*lrp};T|6?Cel0", "", (-408), metaItemNode_DataType0);
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      DataPath dataPath0 = new DataPath("model");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0);
      dataModel_DataSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, (MetaGroupNode) null);
      assertFalse(dataPath0.moreLeft());
      assertEquals("", dataPath0.getRemainingString());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("+|ph-' mJwUg", ":}aKP@r p7", 76, metaItemNode_DataType0);
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      DataPath dataPath0 = new DataPath(":}aKP@r p7");
      dataModel_DataSubscriberNode0.removeSubscriber(dataPath0, (DataHandle.DataUpdateSubscriber) parsedExpr0);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("ep_AVxaSL`y*FD_");
      // Undeclared exception!
      try { 
        dataModel_DataSubscriberNode0.addSubscriber(dataPath0, (DataModel.SubscriberFields) null, metaGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("STIG");
      DataPath dataPath0 = new DataPath("T}';y0i}z");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("{");
      // Undeclared exception!
      try { 
        dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, (DataModel.SubscriberFields) null, metaGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("ST(_IG");
      DataPath dataPath0 = new DataPath("");
      dataModel_GroupSubscriberNode0.removeSubscriber(dataPath0, (DataHandle.DataUpdateSubscriber) null);
      assertEquals("", dataPath0.toString());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("STIXG");
      Stack<DataModel.DataSubscriberNode> stack0 = new Stack<DataModel.DataSubscriberNode>();
      stack0.add((DataModel.DataSubscriberNode) dataModel_GroupSubscriberNode0);
      dataModel_GroupSubscriberNode0.childNodes = (List<DataModel.DataSubscriberNode>) stack0;
      Rule rule0 = new Rule((String) null, "?NC/N", (String) null, "?NC/N");
      DataPath dataPath0 = new DataPath("STIXG");
      dataModel_GroupSubscriberNode0.removeSubscriber(dataPath0, (DataHandle.DataUpdateSubscriber) rule0);
      assertFalse(dataPath0.moreLeft());
      assertEquals("", dataPath0.getRemainingString());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("ST(_IG");
      Rule rule0 = new Rule("%", (String) null, "DataTransaction discarded", "ST(_IG");
      LinkedList<DataHandle.DataUpdateSubscriber> linkedList0 = new LinkedList<DataHandle.DataUpdateSubscriber>();
      dataModel_GroupSubscriberNode0.subscrList = (List<DataHandle.DataUpdateSubscriber>) linkedList0;
      linkedList0.add((DataHandle.DataUpdateSubscriber) rule0);
      // Undeclared exception!
      try { 
        dataModel_GroupSubscriberNode0.removeSubscriber((DataHandle.DataUpdateSubscriber) rule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.removeSubscriber((DataHandle.DataUpdateSubscriber) null);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("*lrp};T|6?Cel0", "", (-408), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "*lrp};T|6?Cel0", "*lrp};T|6?Cel0", ":");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.removeSubscriber((DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "no.tellu.lib.data.model.DataModel", (-408), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "", "H;9q}<3n", "H;9q}<3n");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      ParsedExpr parsedExpr1 = new ParsedExpr("removeMetaNode metaName can't be null", "no.tellu.lib.data.model.DataModel", (-2089554364), metaItemNode_DataType0);
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) parsedExpr1, (DataNode) dataGroupNode0, "DataTransaction stack overflow");
      assertEquals((byte)1, ParsedExpr.PATH_LOCAL_PATH);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Logger logger0 = new Logger("}?NC/c/");
      DataModel dataModel0 = new DataModel(logger0, 5);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("$", "X#xC_", 6, metaItemNode_DataType0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "", " except CR, LF and TAB", "");
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, (List<String>) linkedList0);
      assertEquals((byte)1, ParsedExpr.PATH_LOCAL_PATH);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Logger logger0 = new Logger("Text was found preceding an array's opening bracket (this is usually caused by a missing comma or colon, or by using equals instead of a colon); Text=\"");
      DataModel dataModel0 = null;
      try {
        dataModel0 = new DataModel(logger0, (-102441799));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 2147483645);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("+|ph-' mJwUg", "DataModel initialized from file", 100, metaItemNode_DataType0);
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.activateProvider(parsedExpr0, "conds/", (DataNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("+|ph-' mJwUg", " except CR, LF and TAB", 100, metaItemNode_DataType0);
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.addDataSubscriber("xC?MNJT#J0", " except CR, LF and TAB", " except CR, LF and TAB", parsedExpr0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      DataModel.AddNodeTransaction dataModel_AddNodeTransaction0 = dataModel0.new AddNodeTransaction((DataGroupNode) null, (DataNode) null);
      // Undeclared exception!
      try { 
        dataModel0.addDataUpdate(dataModel_AddNodeTransaction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("S", 0);
      DataGroupNode dataGroupNode0 = dataModel0.data;
      dataGroupNode0.addNodeRaw((DataNode) null);
      // Undeclared exception!
      try { 
        dataModel0.addMetaNode("\u0003k|1P", metaGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((DataModel.DataProcessor) null, "8", "8", "8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((DataModel.DataProcessor) null, (List<String>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Stack<String> stack0 = new Stack<String>();
      LinkedList<Trigger> linkedList0 = new LinkedList<Trigger>();
      LinkedList<Action> linkedList1 = new LinkedList<Action>();
      stack0.add("^NM|<=6[7@O>");
      try { 
        dataModel0.addRule((String) null, "^NM|<=6[7@O>", "Error parsing XML", (String) null, stack0, linkedList0, linkedList1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Operator ^ without left operand
         //
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addTransaction((DataModel.ModelTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.clearDataSubscribers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("Cl#Ma/P<");
      dataModel0.initFromModel(dataModelHandle0, "conds");
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData(dataModelHandle0, "rules");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't copyMetaData to initialized DataModel
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.executeNextTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.initEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 100);
      // Undeclared exception!
      try { 
        dataModel0.initFromFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.initFromMeta();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.initFromModel((DataModel) null, "no.tellu.lib.data.model.DataModel$ModelTransaction/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("DatModeliitialized from file", "+|ph-' mJwUg", ":}aKP@r p7", "DatModeliitialized from file");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.mergeInstance((DataGroupNode) null, false, rule0, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null, 5);
      // Undeclared exception!
      try { 
        dataModel0.metaDataInsert((String) null, metaGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.metaDataRemove((String) null, "tg\"Z`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Rule rule0 = new Rule("MergeHandle is read-only//", "MergeHandle is read-only//", "&Ut<+k$9", "Es&TA?M//");
      DataModel dataModel0 = new DataModel((Logger) null, 1907);
      // Undeclared exception!
      try { 
        dataModel0.removeDataSubscriber("m[SG~8iP#GbQ/", rule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 2);
      // Undeclared exception!
      try { 
        dataModel0.removeMetaNode("B(I", "K$@NqL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("DataHandle doesn't support Subscribers", "gC", (-1), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.startTransaction(parsedExpr0, dataHandle_TransactionCommitCallback0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      File file0 = MockFile.createTempFile("$yw3Wz1dSt,HN", "MergeHandle is read-only/");
      file0.mkdir();
      try { 
        dataModel0.writeToFile((String) null, file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 117);
      MockFile mockFile0 = new MockFile("DataTransaction stack overflow", "nUAfW8e?}zaw!W");
      // Undeclared exception!
      try { 
        dataModel0.writeToFile("nUAfW8e?}zaw!W", mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(58);
      // Undeclared exception!
      try { 
        dataModel0.writeToStream(dataGroupNode0, byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Logger logger0 = new Logger("}?NC/c/");
      DataModel dataModel0 = new DataModel(logger0, 5);
      dataModel0.initEmpty();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("");
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, (String) null, (String) null, (String) null);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("rules");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback0);
      DataModelHandle dataModelHandle1 = dataModel0.getDataHandle((String) null);
      assertNull(dataModelHandle1.getName());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("?r2WVc{(J&!v@Y?e(/");
      dataModel0.rootHandle = dataModelHandle0;
      DataModelHandle dataModelHandle1 = dataModel0.getRootHandle();
      assertFalse(dataModelHandle1.isValueNode());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("Cl#Ma/P<");
      dataModel0.initFromModel(dataModelHandle0, "conds");
      DataModelHandle dataModelHandle1 = dataModel0.getRootHandle();
      assertFalse(dataModelHandle1.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JsonSerializer jsonSerializer0 = new JsonSerializer();
      Logger logger0 = new Logger("?jdi$?Bm");
      DataModel dataModel0 = new DataModel(logger0);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("~9Pft}EwKXMS8H_", jsonSerializer0);
      boolean boolean0 = dataModel0.metaDataInsert("~9Pft}EwKXMS8H_", metaNumberNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "$/");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("O(dA`6k/HxF),F", "O(dA`6k/HxF),F", (-1021), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.copyFromModel(dataModelHandle0, "$/", parsedExpr0, dataHandle_TransactionCommitCallback0);
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("~9Pft}EwKXMS8H_");
      dataModel0.copyMetaData(dataModelHandle0, "z{VK");
      assertFalse(dataModelHandle0.isValueNode());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("~9Pft}EwKXMS8H_");
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel.AddNodeTransaction dataModel_AddNodeTransaction0 = dataModel0.new AddNodeTransaction(dataGroupNode0, dataValueNode0);
      boolean boolean0 = dataModel_AddNodeTransaction0.execute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("Uei;]l", "Uei;]l", 2397, metaItemNode_DataType0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.CopyTransaction dataModel_CopyTransaction0 = dataModel0.new CopyTransaction(dataGroupNode2, "", parsedExpr0, dataHandle_TransactionCommitCallback0);
      boolean boolean0 = dataModel_CopyTransaction0.execute();
      assertTrue(boolean0);
      assertFalse(dataGroupNode1.isModified());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("D.bH8Vw@3iHb%)lR");
      DataHandle.DataUpdateSubscriber dataHandle_DataUpdateSubscriber0 = mock(DataHandle.DataUpdateSubscriber.class, new ViolatedAssumptionAnswer());
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(dataHandle_DataUpdateSubscriber0);
      dataModel_GroupSubscriberNode0.addSubscrImpl("D.bH8Vw@3iHb%)lR", dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.removeSubscrImpl((byte)0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0, 1);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("The input stream ended with an incomplete escape sequence");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      Rule rule0 = new Rule("Transaction loop limit exceeded - transaction canceled", "Transaction loop limit exceeded - transaction canceled", " except CR, LF and TAB/", "$");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, false, rule0, dataHandle_TransactionCommitCallback0);
      boolean boolean0 = dataModel_ModelMergeTransaction0.execute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("~9Pft}EwKXMS8H_");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("k$|#ykZ+(C/", "-U;Ys46kG>vB", 60, metaItemNode_DataType0);
      boolean boolean0 = parsedExpr0.process(dataModelHandle0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.new DataSubscriberNode("no.tellu.lib.data.model.DataModel$ModelMergeTransaction");
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("D.bH8Vw@3iHb%)lR");
      DataHandle.DataUpdateSubscriber dataHandle_DataUpdateSubscriber0 = mock(DataHandle.DataUpdateSubscriber.class, new ViolatedAssumptionAnswer());
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(dataHandle_DataUpdateSubscriber0);
      dataModel_GroupSubscriberNode0.addSubscrImpl("D.bH8Vw@3iHb%)lR", dataModel_SubscriberFields0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("DataModel initialized from file", "");
      boolean boolean0 = dataModel_MetaTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("U=?'", "U=?'", (-2717), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ResetTransaction dataModel_ResetTransaction0 = dataModel0.new ResetTransaction(parsedExpr0, dataHandle_TransactionCommitCallback0);
      boolean boolean0 = dataModel_ResetTransaction0.execute();
      assertTrue(boolean0);
  }
}
