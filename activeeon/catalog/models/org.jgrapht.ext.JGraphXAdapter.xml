<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s1" action="org.jgrapht.ext.JGraphXAdapter.getStylesheet()" proba="1.0"/></state><state id="s4"><transition target="s3" action="org.jgrapht.ext.JGraphXAdapter.put(java.lang.Object,java.lang.Object)" proba="0.25"/><transition target="s5" action="org.jgrapht.ext.JGraphXAdapter.getVertexToCellMap()" proba="0.125"/><transition target="s1" action="org.jgrapht.ext.JGraphXAdapter.getStylesheet()" proba="0.625"/></state><state id="s5"><transition target="s6" action="org.jgrapht.ext.JGraphXAdapter.entrySet()" proba="1.0"/></state><state id="s6"><transition target="s7" action="org.jgrapht.ext.JGraphXAdapter.stream()" proba="0.5"/><transition target="s13" action="org.jgrapht.ext.JGraphXAdapter.forEach(java.util.function.Consumer)" proba="0.5"/></state><state id="s7"><transition target="s8" action="org.jgrapht.ext.JGraphXAdapter.filter(java.util.function.Predicate)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s9" action="org.jgrapht.ext.JGraphXAdapter.map(java.util.function.Function)" proba="1.0"/></state><state id="s9"><transition target="s10" action="org.jgrapht.ext.JGraphXAdapter.setCellStyle(java.lang.String,java.lang.Object[])" proba="1.0"/></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s11"><transition target="s12" action="org.jgrapht.ext.JGraphXAdapter.beginUpdate()" proba="0.3333333333333333"/><transition target="s14" action="org.jgrapht.ext.JGraphXAdapter.endUpdate()" proba="0.6666666666666666"/></state><state id="s10"><transition target="s11" action="org.jgrapht.ext.JGraphXAdapter.getModel()" proba="1.0"/></state><state id="s13"><transition target="s11" action="org.jgrapht.ext.JGraphXAdapter.getModel()" proba="1.0"/></state><state id="s12"><transition target="s5" action="org.jgrapht.ext.JGraphXAdapter.getVertexToCellMap()" proba="1.0"/></state><state id="s15"><transition target="s16" action="org.jgrapht.ext.JGraphXAdapter.setCellsResizable(boolean)" proba="1.0"/></state><state id="s14"><transition target="s11" action="org.jgrapht.ext.JGraphXAdapter.getModel()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s17"><transition target="s18" action="org.jgrapht.ext.JGraphXAdapter.setHtmlLabels(boolean)" proba="1.0"/></state><state id="s16"><transition target="s17" action="org.jgrapht.ext.JGraphXAdapter.setAllowLoops(boolean)" proba="1.0"/></state><state id="s19"><transition target="s20" action="org.jgrapht.ext.JGraphXAdapter.getDefaultParent()" proba="1.0"/></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s15" action="org.jgrapht.ext.JGraphXAdapter.setAutoSizeCells(boolean)" proba="0.25"/><transition target="s19" action="org.jgrapht.ext.JGraphXAdapter.&lt;init>(org.jgrapht.Graph)" proba="0.25"/><transition target="s1" action="org.jgrapht.ext.JGraphXAdapter.getStylesheet()" proba="0.5"/></state><state id="s1"><transition target="s4" action="org.jgrapht.ext.JGraphXAdapter.getDefaultVertexStyle()" proba="0.6666666666666666"/><transition target="s2" action="org.jgrapht.ext.JGraphXAdapter.getDefaultEdgeStyle()" proba="0.3333333333333333"/></state><state id="s2"><transition target="s3" action="org.jgrapht.ext.JGraphXAdapter.put(java.lang.Object,java.lang.Object)" proba="0.75"/><transition target="sX" action="epsilon" proba="0.25"/></state></states></ts>