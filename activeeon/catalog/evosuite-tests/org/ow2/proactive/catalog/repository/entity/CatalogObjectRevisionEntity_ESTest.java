/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:20:20 GMT 2019
 */

package org.ow2.proactive.catalog.repository.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.ow2.proactive.catalog.repository.entity.BucketEntity;
import org.ow2.proactive.catalog.repository.entity.CatalogObjectEntity;
import org.ow2.proactive.catalog.repository.entity.CatalogObjectRevisionEntity;
import org.ow2.proactive.catalog.repository.entity.KeyValueLabelMetadataEntity;

public class CatalogObjectRevisionEntity_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      catalogObjectRevisionEntity0.setCommitMessage("");
      assertNull(catalogObjectRevisionEntity0.getUsername());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      byte[] byteArray0 = new byte[0];
      catalogObjectRevisionEntity0.setRawObject(byteArray0);
      byte[] byteArray1 = catalogObjectRevisionEntity0.getRawObject();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      long long0 = catalogObjectRevisionEntity0.getCommitTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      catalogObjectRevisionEntity0.setUsername("");
      String string0 = catalogObjectRevisionEntity0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      String string0 = catalogObjectRevisionEntity0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      Long long0 = catalogObjectRevisionEntity0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      String string0 = catalogObjectRevisionEntity0.getCommitMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      List<KeyValueLabelMetadataEntity> list0 = catalogObjectRevisionEntity0.getKeyValueMetadataList();
      catalogObjectRevisionEntity0.addKeyValueList(list0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      catalogObjectRevisionEntity0.setCommitTime((-1482L));
      long long0 = catalogObjectRevisionEntity0.getCommitTime();
      assertEquals((-1482L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      byte[] byteArray0 = catalogObjectRevisionEntity0.getRawObject();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      int int0 = catalogObjectRevisionEntity0.compareTo(catalogObjectRevisionEntity0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long(1370L);
      ArrayList<KeyValueLabelMetadataEntity> arrayList0 = new ArrayList<KeyValueLabelMetadataEntity>();
      KeyValueLabelMetadataEntity keyValueLabelMetadataEntity0 = new KeyValueLabelMetadataEntity();
      arrayList0.add(keyValueLabelMetadataEntity0);
      LinkedList<KeyValueLabelMetadataEntity> linkedList0 = new LinkedList<KeyValueLabelMetadataEntity>(arrayList0);
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity(long0, "@FT^,TrCX0,*Z7#?Vj", "$_^i", 1370L, (CatalogObjectEntity) null, linkedList0, (byte[]) null);
      // Undeclared exception!
      try { 
        catalogObjectRevisionEntity0.addKeyValueList(linkedList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      ArrayList<KeyValueLabelMetadataEntity> arrayList0 = new ArrayList<KeyValueLabelMetadataEntity>();
      catalogObjectRevisionEntity0.setKeyValueMetadataList(arrayList0);
      assertNull(catalogObjectRevisionEntity0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      String string0 = catalogObjectRevisionEntity0.toString();
      assertEquals("CatalogObjectRevisionRepository{commitMessage='null', username='null', commitTime=0, metadataList=[]}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      CatalogObjectEntity catalogObjectEntity0 = catalogObjectRevisionEntity0.getCatalogObject();
      assertNull(catalogObjectEntity0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      catalogObjectRevisionEntity0.setCatalogObject(catalogObjectEntity0);
      CatalogObjectEntity catalogObjectEntity1 = catalogObjectRevisionEntity0.getCatalogObject();
      assertSame(catalogObjectEntity1, catalogObjectEntity0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = CatalogObjectRevisionEntity.builder();
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.username("com.google.common.collect.AbstractMultiset");
      assertSame(catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0, catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = CatalogObjectRevisionEntity.builder();
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.commitTime(1105L);
      assertSame(catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0, catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = CatalogObjectRevisionEntity.builder();
      Long long0 = Long.getLong("&k6KLO[V$)`%pb:4", (-1482L));
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.id(long0);
      assertSame(catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1, catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = new CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder();
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.commitMessage("");
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1.build();
      String string0 = catalogObjectRevisionEntity0.getCommitMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = new CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.catalogObject(catalogObjectEntity0);
      assertSame(catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0, catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = new CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder();
      LinkedList<KeyValueLabelMetadataEntity> linkedList0 = new LinkedList<KeyValueLabelMetadataEntity>();
      catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.keyValueMetadataList(linkedList0);
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.build();
      assertEquals(0L, catalogObjectRevisionEntity0.getCommitTime());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = CatalogObjectRevisionEntity.builder();
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.rawObject((byte[]) null);
      assertSame(catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0, catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = CatalogObjectRevisionEntity.builder();
      String string0 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.toString();
      assertEquals("CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder(id=null, commitMessage=null, username=null, commitTime=0, catalogObject=null, keyValueMetadataList=null, rawObject=null)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      boolean boolean0 = catalogObjectRevisionEntity0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      boolean boolean0 = catalogObjectRevisionEntity0.equals(catalogObjectRevisionEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      boolean boolean0 = catalogObjectRevisionEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      CatalogObjectRevisionEntity.CatalogObjectRevisionEntityBuilder catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0 = CatalogObjectRevisionEntity.builder();
      CatalogObjectRevisionEntity catalogObjectRevisionEntity1 = catalogObjectRevisionEntity_CatalogObjectRevisionEntityBuilder0.build();
      boolean boolean0 = catalogObjectRevisionEntity0.equals(catalogObjectRevisionEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      catalogObjectRevisionEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      Long long0 = new Long((-3093L));
      catalogObjectRevisionEntity0.setId(long0);
      catalogObjectRevisionEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      // Undeclared exception!
      try { 
        catalogObjectRevisionEntity0.addKeyValue((KeyValueLabelMetadataEntity) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      // Undeclared exception!
      try { 
        catalogObjectRevisionEntity0.addKeyValueList((Collection<KeyValueLabelMetadataEntity>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      // Undeclared exception!
      try { 
        catalogObjectRevisionEntity0.compareTo("CatalogObjectRevisionRepository{commitMessage='null', username='null', commitTime=0, metadataList=[]}");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.ow2.proactive.catalog.repository.entity.CatalogObjectRevisionEntity
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      // Undeclared exception!
      try { 
        catalogObjectRevisionEntity0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Long long0 = new Long(1L);
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      List<KeyValueLabelMetadataEntity> list0 = catalogObjectRevisionEntity0.getKeyValueMetadataList();
      byte[] byteArray0 = new byte[1];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity1 = new CatalogObjectRevisionEntity(long0, "", "", 1L, catalogObjectEntity0, list0, byteArray0);
      int int0 = catalogObjectRevisionEntity1.compareTo(catalogObjectRevisionEntity0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long((-1819L));
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      Stack<KeyValueLabelMetadataEntity> stack0 = new Stack<KeyValueLabelMetadataEntity>();
      byte[] byteArray0 = new byte[9];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity(long0, "", "", (-1819L), catalogObjectEntity0, stack0, byteArray0);
      CatalogObjectRevisionEntity catalogObjectRevisionEntity1 = new CatalogObjectRevisionEntity(long0, "", (String) null, 0L, catalogObjectEntity0, stack0, byteArray0);
      int int0 = catalogObjectRevisionEntity0.compareTo(catalogObjectRevisionEntity1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      catalogObjectEntity0.setLastCommitTime((-1482L));
      catalogObjectRevisionEntity0.setCatalogObject(catalogObjectEntity0);
      CatalogObjectEntity catalogObjectEntity1 = catalogObjectRevisionEntity0.getCatalogObject();
      assertNull(catalogObjectEntity1.getContentType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      BucketEntity bucketEntity0 = new BucketEntity((String) null, (String) null);
      TreeSet<CatalogObjectRevisionEntity> treeSet0 = new TreeSet<CatalogObjectRevisionEntity>();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, (String) null, "", "", treeSet0, 2513L);
      catalogObjectRevisionEntity0.setCatalogObject(catalogObjectEntity0);
      CatalogObjectEntity catalogObjectEntity1 = catalogObjectRevisionEntity0.getCatalogObject();
      assertSame(catalogObjectEntity1, catalogObjectEntity0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Long long0 = new Long(1L);
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      Vector<KeyValueLabelMetadataEntity> vector0 = new Vector<KeyValueLabelMetadataEntity>();
      byte[] byteArray0 = new byte[0];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity(long0, "sxN'=gt{(A+<", (String) null, 0L, catalogObjectEntity0, vector0, byteArray0);
      String string0 = catalogObjectRevisionEntity0.getCommitMessage();
      assertEquals("sxN'=gt{(A+<", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      byte[] byteArray0 = new byte[4];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity((Long) null, "#-oO s", ", commitMessage=", 9223372036854775807L, catalogObjectEntity0, (List<KeyValueLabelMetadataEntity>) null, byteArray0);
      long long0 = catalogObjectRevisionEntity0.getCommitTime();
      assertEquals(9223372036854775807L, long0);
      assertEquals("#-oO s", catalogObjectRevisionEntity0.getCommitMessage());
      assertEquals(", commitMessage=", catalogObjectRevisionEntity0.getUsername());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      Long long0 = new Long((-44L));
      catalogObjectRevisionEntity0.id = long0;
      Long long1 = catalogObjectRevisionEntity0.getId();
      assertEquals((-44L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      Long long0 = Long.valueOf(2413L);
      catalogObjectRevisionEntity0.id = long0;
      Long long1 = catalogObjectRevisionEntity0.getId();
      assertEquals(2413L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Long long0 = new Long(0L);
      CatalogObjectEntity.CatalogObjectEntityKey catalogObjectEntity_CatalogObjectEntityKey0 = new CatalogObjectEntity.CatalogObjectEntityKey();
      BucketEntity bucketEntity0 = new BucketEntity();
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity(catalogObjectEntity_CatalogObjectEntityKey0, bucketEntity0, "[63s", "IS_NULL", ")Bc-Cb6e3..+geP;y", (SortedSet<CatalogObjectRevisionEntity>) null, 0L);
      LinkedList<KeyValueLabelMetadataEntity> linkedList0 = new LinkedList<KeyValueLabelMetadataEntity>();
      byte[] byteArray0 = new byte[0];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity(long0, (String) null, "[63s", (-1L), catalogObjectEntity0, linkedList0, byteArray0);
      Long long1 = catalogObjectRevisionEntity0.getId();
      assertEquals((-1L), catalogObjectRevisionEntity0.getCommitTime());
      assertNotNull(long1);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity();
      KeyValueLabelMetadataEntity keyValueLabelMetadataEntity0 = new KeyValueLabelMetadataEntity("`z'?-c", "s;'PM", "");
      catalogObjectRevisionEntity0.addKeyValue(keyValueLabelMetadataEntity0);
      List<KeyValueLabelMetadataEntity> list0 = catalogObjectRevisionEntity0.getKeyValueMetadataList();
      assertTrue(list0.contains(keyValueLabelMetadataEntity0));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      byte[] byteArray0 = new byte[5];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity((Long) null, "'Y%+U+8fxP|y&{Y0", "'Y%+U+8fxP|y&{Y0", (-371L), catalogObjectEntity0, (List<KeyValueLabelMetadataEntity>) null, byteArray0);
      catalogObjectRevisionEntity0.getKeyValueMetadataList();
      assertEquals((-371L), catalogObjectRevisionEntity0.getCommitTime());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CatalogObjectEntity catalogObjectEntity0 = new CatalogObjectEntity();
      ArrayList<KeyValueLabelMetadataEntity> arrayList0 = new ArrayList<KeyValueLabelMetadataEntity>();
      byte[] byteArray0 = new byte[3];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity((Long) null, "Rj", "Rj", (-1L), catalogObjectEntity0, arrayList0, byteArray0);
      catalogObjectRevisionEntity0.getRawObject();
      assertEquals((-1L), catalogObjectRevisionEntity0.getCommitTime());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Long long0 = new Long((-1L));
      Vector<KeyValueLabelMetadataEntity> vector0 = new Vector<KeyValueLabelMetadataEntity>();
      byte[] byteArray0 = new byte[5];
      CatalogObjectRevisionEntity catalogObjectRevisionEntity0 = new CatalogObjectRevisionEntity(long0, "iE<UJ+7~|A!bBNHPA", "iE<UJ+7~|A!bBNHPA", (-1L), (CatalogObjectEntity) null, vector0, byteArray0);
      catalogObjectRevisionEntity0.getUsername();
      assertEquals((-1L), catalogObjectRevisionEntity0.getCommitTime());
  }
}
