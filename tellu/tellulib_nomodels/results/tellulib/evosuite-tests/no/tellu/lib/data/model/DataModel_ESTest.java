/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 18 11:22:26 GMT 2019
 */

package no.tellu.lib.data.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import no.tellu.lib.data.DataGroupNode;
import no.tellu.lib.data.DataHandle;
import no.tellu.lib.data.DataNode;
import no.tellu.lib.data.DataPath;
import no.tellu.lib.data.DataValueNode;
import no.tellu.lib.data.MetaGroupNode;
import no.tellu.lib.data.MetaItemNode;
import no.tellu.lib.data.MetaNode;
import no.tellu.lib.data.MetaNumberNode;
import no.tellu.lib.data.model.Action;
import no.tellu.lib.data.model.DataModel;
import no.tellu.lib.data.model.DataModelHandle;
import no.tellu.lib.data.model.DataProvider;
import no.tellu.lib.data.model.ExprParser;
import no.tellu.lib.data.model.ParsedExpr;
import no.tellu.lib.data.model.Rule;
import no.tellu.lib.data.model.Trigger;
import no.tellu.lib.data.serialize.JsonSerializer;
import no.tellu.lib.data.serialize.XmlSerializer;
import no.tellu.lib.log.LogEvent;
import no.tellu.lib.log.Logger;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;

public class DataModel_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("$", "#");
      String string0 = dataModel_MetaTransaction0.toString();
      assertEquals("MetaTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, (DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
      String string0 = dataModel_ModelMergeTransaction0.toString();
      assertEquals("MergeTransaction for instance \"\"", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("Failed to copy instance ", "#", 1, metaItemNode_DataType0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.CopyTransaction dataModel_CopyTransaction0 = dataModel0.new CopyTransaction(dataGroupNode0, "Object member name or value is missing in a Name:Value pair (this is possibly caused by missing array brackets in an array)", parsedExpr0, dataHandle_TransactionCommitCallback0);
      String string0 = dataModel_CopyTransaction0.toString();
      assertEquals("CopyTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Logger logger0 = new Logger("`apUvZ@K&R/:w-pzC");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("#");
      // Undeclared exception!
      try { 
        dataModel_GroupSubscriberNode0.removeSubscrImpl(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("}a?#lr7\"y", "#", 6, metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.DataTransaction dataModel_DataTransaction0 = dataModel0.new DataTransaction(parsedExpr0, dataHandle_TransactionCommitCallback0, false);
      String string0 = dataModel_DataTransaction0.toString();
      assertEquals("DataTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Logger logger0 = new Logger("5]KZwo#X/h*U]@ ~`");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction(".>B*AVN(KF", (DataModel.SubscriberFields) null, false);
      String string0 = dataModel_SubscriberTransaction0.toString();
      assertEquals("SubscriberTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields((DataHandle.DataUpdateSubscriber) null);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction("1NH1Y|U<wnq~48:^>", dataModel_SubscriberFields0, true);
      boolean boolean0 = dataModel_SubscriberTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.resetDefaults((DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
      dataModel0.persistAll();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Logger logger0 = new Logger((String) null);
      DataModel dataModel0 = new DataModel(logger0, 6);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("bX+W2]L", "0UO&B*", 1, metaItemNode_DataType0);
      DataModel.ResetTransaction dataModel_ResetTransaction0 = dataModel0.new ResetTransaction(parsedExpr0, (DataHandle.TransactionCommitCallback) null);
      String string0 = dataModel_ResetTransaction0.toString();
      assertEquals("ResetTransaction", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MockFile mockFile0 = new MockFile("`1}@", "Attempt to set value in group node");
      dataModel0.setMainFile(mockFile0);
      assertFalse(mockFile0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("&", "&", "P@m3G:iC", "&");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.copyFromModel((DataModelHandle) null, "BOcEUiGg?.%]-C0W", rule0, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      JsonSerializer jsonSerializer0 = new JsonSerializer();
      dataModel0.setMainSerializer(jsonSerializer0);
      try { 
        dataModel0.initFromFile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No data file specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Logger logger0 = new Logger("5]KZwo#X/h*U]@ ~`");
      DataModel dataModel0 = new DataModel(logger0);
      dataModel0.mergeFromFile("sOKI@(bodezo3 /", (File) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getRootHandle();
      assertNull(dataModelHandle0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData((DataModelHandle) null, "No data -3le pecifed");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.initFromModel((DataModelHandle) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModel.NodeNameTransaction dataModel_NodeNameTransaction0 = dataModel0.new NodeNameTransaction(dataGroupNode0, "model", "model", "model");
      boolean boolean0 = dataModel_NodeNameTransaction0.execute();
      assertEquals("model", dataGroupNode0.getName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Logger logger0 = new Logger("conds");
      DataModel dataModel0 = new DataModel(logger0, 5);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("#", "conds", 6, metaItemNode_DataType0);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("R5_I,-ez@!dE>");
      parsedExpr0.onDataValueUpdate(dataModelHandle0);
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      try { 
        dataModel0.initFromFile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initFromFile();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initFromMeta();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initFromMeta();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      dataModel0.initEmpty();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr((String) null, (String) null, (-1), metaItemNode_DataType0);
      DataGroupNode dataGroupNode0 = new DataGroupNode("^y[26Md;(FHlu'8T.j");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.mergeInstance(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      // Undeclared exception!
      dataModel0.initFromModel(dataModel0, (String) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      // Undeclared exception!
      try { 
        dataModel0.initFromModel(dataModel0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Already has child node with this name
         //
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      JsonSerializer jsonSerializer0 = new JsonSerializer();
      dataModel0.setInstanceSerializer("rules", jsonSerializer0);
      dataModel0.setInstanceSerializer("9", jsonSerializer0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MockFile mockFile0 = new MockFile("T>F", "T>F");
      dataModel0.setInstanceFile("T>F", mockFile0);
      dataModel0.setInstanceFile("Copied instance \"$\" from source model//", mockFile0);
      assertFalse(mockFile0.exists());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MockFile mockFile0 = new MockFile(".)z_LR6");
      dataModel0.writeToFile((String) null, mockFile0);
      assertFalse(mockFile0.canRead());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      // Undeclared exception!
      try { 
        dataModel0.writeToFile("", (File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      InputStream inputStream0 = dataModel0.getInputStream("The encoding '");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Logger logger0 = new Logger("KV\"S'yU7z2?N)8");
      DataModel dataModel0 = new DataModel(logger0);
      MockFile mockFile0 = new MockFile("$", "no.tellu.lib.data.model.DataModel$ResetTransaction");
      dataModel0.setInstanceFile("]c?&b", mockFile0);
      InputStream inputStream0 = dataModel0.getInputStream("$");
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MockFile mockFile0 = new MockFile("yKLUy\"]}s", "yKLUy\"]}s");
      dataModel0.mainFile = (File) mockFile0;
      try { 
        dataModel0.getInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      OutputStream outputStream0 = dataModel0.getOutputStream((String) null);
      assertNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      OutputStream outputStream0 = dataModel0.getOutputStream("");
      assertNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, File> hashMap0 = new HashMap<String, File>();
      dataModel0.instanceFiles = (Map<String, File>) hashMap0;
      OutputStream outputStream0 = dataModel0.getOutputStream("oRS7%v`");
      assertNull(outputStream0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      try { 
        dataModel0.writeToStream(dataGroupNode0, (OutputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      dataModel0.setInstanceSerializer("cj?bt", xmlSerializer0);
      DataGroupNode dataGroupNode0 = dataModel0.data;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        dataModel0.writeToStream(dataGroupNode0, pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      XmlSerializer xmlSerializer0 = new XmlSerializer();
      dataModel0.setInstanceSerializer("cj?bt", xmlSerializer0);
      DataGroupNode dataGroupNode0 = new DataGroupNode("cj?bt");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        dataModel0.writeToStream(dataGroupNode0, pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.persistAll();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("T>");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("e", "6S:Z'Z)W~-", "T>");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      dataModel_ModelMergeTransaction0.inCommit = true;
      dataModel0.addTransaction(dataModel_ModelMergeTransaction0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      dataModel0.initEmpty();
      dataModel0.clearingSubscr = true;
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      dataModel0.addRule((String) null, "_9Er1eHluog6g^8LI", "_9Er1eHluog6g^8LI", "_9Er1eHluog6g^8LI", linkedList0, linkedList1, (List<Action>) null);
      assertEquals(0, linkedList1.size());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      ParsedExpr parsedExpr0 = new ParsedExpr("&!EKr]]gz:!i^", "", 2, metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "", "", "");
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      Stack<String> stack0 = new Stack<String>();
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      dataModel0.addRule("conds", "ArrayBegin", "", "07", stack0, linkedList1, linkedList0);
      assertEquals("[]", stack0.toString());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      JsonSerializer jsonSerializer0 = new JsonSerializer();
      dataModel0.setMainSerializer(jsonSerializer0);
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("model", "", (-4722), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.mergeInstance(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      assertEquals("model", dataGroupNode0.getName());
      assertEquals("model", metaGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      Logger logger0 = new Logger("sb35iG^6Ut>L");
      DataModel dataModel1 = new DataModel(logger0);
      logger0.setLogLevel(1);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("MergeTransaction for instance \"", "model", (-132379129), metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel1.mergeInstance(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      assertEquals("model", dataGroupNode0.getName());
      assertEquals("model", metaGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addMetaNode("Transaction loop limit exceeded - transaction canceled", (MetaNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // addMetaNode meta can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.removeMetaNode("}mi", "}mi");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Logger logger0 = new Logger(",Ax0;Kyma");
      DataModel dataModel0 = new DataModel(logger0);
      // Undeclared exception!
      try { 
        dataModel0.removeMetaNode("$", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // removeMetaNode metaName can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0, 3);
      dataModel0.initFromModel(dataModel0, "It5yXWK");
      dataModel0.removeMetaNode("", "ELoKaGrBW(B");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData((DataModel) null, "\"Ll'8ZD~<5i0f@3/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData(dataModel0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't copyMetaData to initialized DataModel
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.copyMetaData(dataModel0, "");
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.copyMetaData(dataModel0, (String) null);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.copyMetaData(dataModel0, "z");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      dataModel0.addMetaNode((String) null, metaGroupNode0);
      assertEquals("model", metaGroupNode0.getName());
      assertEquals(1, metaGroupNode0.numberOfChildren());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("");
      dataModel0.initEmpty();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      dataModel0.addRule("", "", "", (String) null, linkedList1, (List<Trigger>) null, linkedList0);
      dataModel0.addMetaNode("rules", metaGroupNode0);
      assertFalse(metaGroupNode0.isMultiple());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("T>");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>", "T>", "T>");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      dataModel0.addTransaction(dataModel_ModelMergeTransaction0);
      boolean boolean0 = dataModel0.metaDataInsert("T>", metaGroupNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      dataModel0.addMetaNode("k(FH$Dfos{AHcx;/%x", metaGroupNode0);
      assertEquals("model", metaGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("T>");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>", "T>", "T>");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      dataModel0.addTransaction(dataModel_ModelMergeTransaction0);
      dataModel0.metaDataRemove("T>", "T>");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.metaDataRemove("1d/yGK", "1d/yGK");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr((String) null, "XXkDLU", (-2078209979), metaItemNode_DataType0);
      dataModel0.addDataSubscriber((String) null, (String) null, "XXkDLU", parsedExpr0);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.addDataSubscriber("HcL7ey", "HcL7ey", "HcL7ey", (DataHandle.DataUpdateSubscriber) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Rule rule0 = new Rule("", "", "", "");
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.removeDataSubscriber("Yq%wGaUYjx>:Y|zV~,", rule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.removeDataSubscriber("?Hpa3U1", (DataHandle.DataUpdateSubscriber) null);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Logger logger0 = new Logger("STC<");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("#", "STC<", 5, metaItemNode_DataType0);
      dataModel0.removeDataSubscriber((String) null, parsedExpr0);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.clearDataSubscribers();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.new DataSubscriberNode((String) null);
      // Undeclared exception!
      try { 
        dataModel_DataSubscriberNode0.addSubscriber((DataPath) null, (DataModel.SubscriberFields) null, (MetaGroupNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("l");
      DataPath dataPath0 = new DataPath("XujZ6YH_9");
      Rule rule0 = new Rule("#", "l", "$", "Invalid content of object ");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G:x)K6I^JTk@L:e");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      MetaItemNode metaItemNode0 = new MetaItemNode("XujZ6YH_9", metaItemNode_DataType0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, metaGroupNode1);
      assertFalse(dataPath0.moreLeft());
      assertEquals("", dataPath0.getRemainingString());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Logger logger0 = new Logger("kXbB6jNr=[EiiGr<");
      DataModel dataModel0 = new DataModel(logger0);
      Rule rule0 = new Rule("#", "#", "#", "");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("#");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("$", "#", 6, metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, (List<String>) linkedList0);
      dataModel0.removeDataSubscriber("#", rule0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>", "T>", "T>");
      dataModel0.removeDataSubscriber("T>", parsedExpr0);
      assertEquals((byte)0, ParsedExpr.PATH_LOCAL_NAME);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Logger logger0 = new Logger("1|/");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("no.tellu.lib.data.model.DataModel$ModelTransaction", "#", (-2093040), metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "#", "DataProvider deativation error", "no.tellu.lib.data.model.DataModel$ModelTransaction");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.removeSubscriber((DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>", "T>", "T>");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      LinkedList<DataHandle.DataUpdateSubscriber> linkedList0 = new LinkedList<DataHandle.DataUpdateSubscriber>();
      dataModel_DataSubscriberNode0.subscrList = (List<DataHandle.DataUpdateSubscriber>) linkedList0;
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) parsedExpr0, (DataNode) dataGroupNode0, "T>");
      assertEquals("model", dataGroupNode0.getName());
      assertEquals("model", metaGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("qca&!^i{i", (String) null, (String) null, "9");
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("qca&!^i{i");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      dataModel_GroupSubscriberNode0.addSubscrImpl("conds/", dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.addSubscrImpl((String) null, dataModel_SubscriberFields0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("3_d");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields((DataHandle.DataUpdateSubscriber) null);
      dataModel_GroupSubscriberNode0.addSubscrImpl("3_d", dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) null, (DataNode) dataGroupNode0, "model");
      assertEquals("model", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, (String) null, (String) null, "9");
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      Rule rule1 = new Rule("", (String) null, "#D", "#D");
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode((String) null);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule1);
      dataModel_GroupSubscriberNode0.addSubscrImpl((String) null, dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) rule0, (DataNode) dataGroupNode0, "9");
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("9", "9", "Apm[Rc0}SZ", "Q%d");
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      Rule rule1 = new Rule("93@", "Q%d", "rules", ")");
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("conds");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule1, "#D", "[p1F6*Y\"");
      dataModel_GroupSubscriberNode0.addSubscrImpl((String) null, dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) rule0, (DataNode) dataGroupNode0, "v:d=!!GZv[ZtW");
      assertFalse(rule0.equals((Object)rule1));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("model");
      DataPath dataPath0 = new DataPath("model");
      Rule rule0 = new Rule("model", "model", "model", "model");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, metaGroupNode0);
      DataGroupNode dataGroupNode0 = dataModel0.data;
      // Undeclared exception!
      try { 
        dataModel_GroupSubscriberNode0.notify((DataNode) null, dataModel_SubscriberFields0.subscr, (DataNode) dataGroupNode0, "rules");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("model");
      DataPath dataPath0 = new DataPath("model");
      Rule rule0 = new Rule("model", "model", "model", "model");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, metaGroupNode0);
      assertEquals("", dataPath0.getRemainingString());
      
      DataGroupNode dataGroupNode0 = dataModel0.data;
      dataModel_GroupSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) rule0, (DataNode) null, (String) null);
      assertEquals("model", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields((DataHandle.DataUpdateSubscriber) null);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction((String) null, dataModel_SubscriberFields0, false);
      // Undeclared exception!
      try { 
        dataModel_SubscriberTransaction0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields((DataHandle.DataUpdateSubscriber) null);
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction((String) null, dataModel_SubscriberFields0, true);
      boolean boolean0 = dataModel_SubscriberTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModel.SubscriberTransaction dataModel_SubscriberTransaction0 = dataModel0.new SubscriberTransaction((String) null, (DataModel.SubscriberFields) null, true);
      boolean boolean0 = dataModel_SubscriberTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dataProvider0).getName();
      // Undeclared exception!
      try { 
        dataModel0.addDataProvider(dataProvider0, "T>F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      boolean boolean0 = dataModel0.hasDataProvider(";h-o+i/");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      boolean boolean0 = dataModel0.hasDataProvider("DataProvider deativation error");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      hashMap0.put("DSwUH3S~q1[~Hy", dataProvider0);
      boolean boolean0 = dataModel0.hasDataProvider("DSwUH3S~q1[~Hy");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dataProvider0).getName();
      // Undeclared exception!
      try { 
        dataModel0.replaceDataProvider(dataProvider0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No DataProvider found with name null
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.replaceDataProvider((DataProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.clearDataProviders();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      hashMap0.put("_", (DataProvider) null);
      // Undeclared exception!
      try { 
        dataModel0.clearDataProviders();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      DataGroupNode dataGroupNode0 = dataModel0.data;
      boolean boolean0 = dataModel0.activateProvider((DataHandle.DataUpdateSubscriber) null, "[F!0*M)DL&;G@|F{p", dataGroupNode0);
      assertFalse(boolean0);
      assertEquals("model", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.deactivateProvider((DataHandle.DataUpdateSubscriber) null, "DataProvider $ activated, cunt is #");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      dataModel0.deactivateProvider((DataHandle.DataUpdateSubscriber) null, "::Yafn2ml+j-\"J");
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      DataModel dataModel0 = new DataModel();
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>///", "T>///", "T>///");
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, (List<String>) linkedList0);
      assertEquals((byte)0, ParsedExpr.PATH_LOCAL_NAME);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("T>");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      ExprParser exprParser0 = new ExprParser(dataModel0);
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>", "T>", "T>");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ModelMergeTransaction dataModel_ModelMergeTransaction0 = dataModel0.new ModelMergeTransaction(dataGroupNode0, true, parsedExpr0, dataHandle_TransactionCommitCallback0);
      dataModel0.addTransaction(dataModel_ModelMergeTransaction0);
      List<String> list0 = exprParser0.subscrPaths;
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr((String) null, (String) null, 2, metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "model", "0", (String) null);
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Logger logger0 = new Logger("KV\"S'yU7z2?N)8");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("KV\"S'yU7z2?N)8", "KV\"S'yU7z2?N)8", 3, metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "B+iC]Xq95/+dO2}#/", " into model", "$");
      assertEquals((byte)0, ParsedExpr.PATH_LOCAL_NAME);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Logger logger0 = new Logger("&");
      DataModel dataModel0 = new DataModel(logger0);
      ExprParser exprParser0 = new ExprParser(dataModel0);
      dataModel0.parser = exprParser0;
      try { 
        dataModel0.addProcessor("3,&PGR|VZMR=Q", "#");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Assignment must start with a data path
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      try { 
        dataModel0.addProcessor("hjL&nJ`C", "hjL&nJ`C");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Equals ('=') expected for assignment
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      Stack<String> stack0 = new Stack<String>();
      dataModel0.addRule((String) null, "/c9~*(.", "/c9~*(.", "_9Er1eHluog6g^8LI", stack0, linkedList1, linkedList0);
      dataModel0.addRule("", "", "3b!\"0gB%S<", "vjnQY;R0`=b[oV", stack0, linkedList1, linkedList0);
      assertEquals(10, stack0.capacity());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        dataModel0.addRule(".)z_SR6C/", ".)z_SR6C/", ".)z_SR6C/", ".)z_SR6C/", stack0, linkedList1, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Logger logger0 = new Logger("Already has DataProvider with same name");
      DataModel dataModel0 = new DataModel(logger0);
      Stack<Trigger> stack0 = new Stack<Trigger>();
      // Undeclared exception!
      try { 
        dataModel0.addRule("Already has DataProvider with same name", "#", "N$/(1E", "", (List<String>) null, stack0, (List<Action>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      Stack<String> stack0 = new Stack<String>();
      stack0.add("/c9~#8.");
      try { 
        dataModel0.addRule("/c9~#8.", "/c9~#8.", "/c9~#8.", "/c9~#8.", stack0, linkedList1, linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid character ~
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      Trigger trigger0 = mock(Trigger.class, new ViolatedAssumptionAnswer());
      linkedList1.add(trigger0);
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        dataModel0.addRule("/c9~*(#8.", "/c9~*(#8.", "/c9~*(#8.", "/c9~*(#8.", stack0, linkedList1, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      Action action0 = mock(Action.class, new ViolatedAssumptionAnswer());
      linkedList0.offerFirst(action0);
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        dataModel0.addRule("/c9~(#8.", "/c9~(#8.", "/c9~(#8.", "/c9~(#8.", stack0, linkedList1, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("H.j0UP=d2QX>JT4Y;", "H.j0UP=d2QX>JT4Y;", "#", "#");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, false);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("rules");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback1 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback1);
      assertTrue(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Logger logger0 = new Logger("boG|");
      DataModel dataModel0 = new DataModel(logger0);
      dataModel0.commitTransaction();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      DataModelHandle dataModelHandle0 = dataModel0.rootHandle;
      Rule rule0 = new Rule("model", "model", "model", "C[*QDc|>");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback0);
      rule0.initiate(dataModelHandle0);
      assertTrue(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.cancelTransaction();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule((String) null, (String) null, (String) null, (String) null);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, false);
      dataModel0.cancelTransaction();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("H.j0UP=d2QX>JT4Y;", "H.j0UP=d2QX>JT4Y;", "#", "#");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, false);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback1 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback1, false);
      dataModel0.cancelTransaction();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(":/", (-2449));
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataModel.AddNodeTransaction dataModel_AddNodeTransaction0 = dataModel0.new AddNodeTransaction(dataGroupNode0, dataGroupNode0);
      // Undeclared exception!
      try { 
        dataModel0.addDataUpdate(dataModel_AddNodeTransaction0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      LinkedList<Action> linkedList0 = new LinkedList<Action>();
      LinkedList<Trigger> linkedList1 = new LinkedList<Trigger>();
      Stack<String> stack0 = new Stack<String>();
      dataModel0.addRule("p:=5E[nx8j&L{", "p:=5E[nx8j&L{", "p:=5E[nx8j&L{", (String) null, stack0, linkedList1, linkedList0);
      assertEquals(10, stack0.capacity());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("&U", "#", "5hC2GZ?X_UP2/", (String) null);
      dataModel0.addDataSubscriber("8If\"Gge~c'F/", ",QrbR^Uu(!.\"XW%b%", "6&Hf", rule0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Logger logger0 = new Logger("FN6xPSKC(=ICEr");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("FN6xPSKC(=ICEr", "FN6xPSKC(=ICEr", 3, metaItemNode_DataType0);
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "FN6xPSKC(=ICEr", "$", "$");
      dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, "model", "xJ>qe+", "U*pP%");
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("");
      Rule rule0 = new Rule("4cb|2Oy0hPI%]-6", "Remove meta data from path $", "", "DataProvider deactivation error");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("conds");
      DataPath dataPath0 = new DataPath("");
      dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, metaGroupNode0);
      assertEquals(1, metaGroupNode0.getCardinality());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr(".)z_LR6/", "#", (-2093064), metaItemNode_DataType0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0);
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("#");
      DataPath dataPath0 = new DataPath("STRING");
      dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, (MetaGroupNode) null);
      assertFalse(dataPath0.moreLeft());
      assertEquals("", dataPath0.getRemainingString());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode(":/");
      DataPath dataPath0 = new DataPath(":/");
      Rule rule0 = new Rule(":/", "[/", ":/", "[/");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      dataModel_GroupSubscriberNode0.addSubscriber(dataPath0, dataModel_SubscriberFields0, metaGroupNode0);
      assertEquals("", dataPath0.getRemainingString());
      assertFalse(dataPath0.moreLeft());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Logger logger0 = new Logger("Attempt to modify read-only DataNode");
      DataModel dataModel0 = new DataModel(logger0, 5);
      Rule rule0 = new Rule("<Yc 0", "/", "sZLQ8jUC9<y#a'n", "#");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      DataPath dataPath0 = new DataPath("");
      dataModel_DataSubscriberNode0.removeSubscriber(dataPath0, (DataHandle.DataUpdateSubscriber) rule0);
      assertFalse(dataPath0.moreLeft());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      ExprParser exprParser0 = new ExprParser(dataModel0);
      DataPath dataPath0 = new DataPath("T>");
      ParsedExpr parsedExpr0 = exprParser0.parseCondition("T>", "T>", "T>");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.removeSubscriber(dataPath0, (DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertEquals("", dataPath0.getRemainingString());
      assertFalse(dataPath0.moreLeft());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("qca&!^i{i", (String) null, (String) null, "9");
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("qca&!^i{i");
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0);
      dataModel_GroupSubscriberNode0.addSubscrImpl((String) null, dataModel_SubscriberFields0);
      dataModel_GroupSubscriberNode0.removeSubscriber((DataPath) null, (DataHandle.DataUpdateSubscriber) rule0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Logger logger0 = new Logger("Remove meta data from path $");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      DataPath dataPath0 = new DataPath("DataProvider deactivation error");
      Rule rule0 = new Rule((String) null, (String) null, "M$vZA&H0_<r_2by^ T", (String) null);
      dataModel_DataSubscriberNode0.removeSubscriber(dataPath0, (DataHandle.DataUpdateSubscriber) rule0);
      assertEquals("", dataPath0.getRemainingString());
      assertFalse(dataPath0.moreLeft());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Logger logger0 = new Logger("5]KZwo#X/h*U]@ ~`");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.new DataSubscriberNode("5]KZwo#X/h*U]@ ~`");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr((String) null, "5]KZwo#X/h*U]@ ~`", 1, metaItemNode_DataType0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0, "5]KZwo#X/h*U]@ ~`", "model");
      dataModel_DataSubscriberNode0.addSubscrImpl("A DataTransaction operation failed", dataModel_SubscriberFields0);
      dataModel_DataSubscriberNode0.removeSubscriber((DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertEquals((byte)2, ParsedExpr.PATH_ABSOLUTE);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      Rule rule0 = new Rule("", "", "", "");
      DataModel dataModel0 = new DataModel();
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) rule0, (DataNode) dataGroupNode0, "rules");
      assertEquals("", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      Rule rule0 = new Rule("", "", "", "");
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0, "#", (String) null);
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.addSubscrImpl("", dataModel_SubscriberFields0);
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, dataModel_SubscriberFields0.subscr, (DataNode) dataGroupNode0, "#");
      assertEquals(0, dataGroupNode0.childNodes());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("CWK", (String) null, "no.tellu.lib.data.MetaNumberNode", (String) null);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(rule0, "", "//");
      DataModel.DataSubscriberNode dataModel_DataSubscriberNode0 = dataModel0.subscribers;
      dataModel_DataSubscriberNode0.addSubscrImpl("DataTransaction commit", dataModel_SubscriberFields0);
      DataGroupNode dataGroupNode0 = new DataGroupNode("Error creating XML parser");
      dataModel_DataSubscriberNode0.notify((DataNode) dataGroupNode0, (DataHandle.DataUpdateSubscriber) null, (DataNode) dataGroupNode0, "F");
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DataModel dataModel0 = null;
      try {
        dataModel0 = new DataModel((Logger) null, (-1082438159));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0, 2147483645);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      Rule rule0 = new Rule("", "", "", "");
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.activateProvider(rule0, "", dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 1);
      Rule rule0 = new Rule("2Db3!y", "2Db3!y", " from source model", "WhI[vb/");
      // Undeclared exception!
      try { 
        dataModel0.addDataSubscriber("2Db3!y", " from source model", "TFixWD^!h38", rule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 3);
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      // Undeclared exception!
      try { 
        dataModel0.addMetaNode("#", metaGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((DataModel.DataProcessor) null, (String) null, "V\"gy57z2?N)8", "V\"gy57z2?N)8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Logger logger0 = new Logger("U:~S$p-/CPs#j");
      DataModel dataModel0 = new DataModel(logger0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      ParsedExpr parsedExpr0 = new ParsedExpr("#", "U:~S$p-/CPs#j", 1, metaItemNode_DataType0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.addLast("$");
      List<String> list0 = linkedList0.subList((byte)1, (byte)1);
      linkedList0.add("$");
      // Undeclared exception!
      try { 
        dataModel0.addProcessor((DataModel.DataProcessor) parsedExpr0, list0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.addTransaction((DataModel.ModelTransaction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 3);
      // Undeclared exception!
      try { 
        dataModel0.clearDataSubscribers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Logger logger0 = new Logger("DataHandle node is DataValueNode");
      DataModel dataModel0 = new DataModel(logger0);
      dataModel0.initFromModel(dataModel0, "$");
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "$");
      // Undeclared exception!
      try { 
        dataModel0.copyMetaData(dataModelHandle0, "$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't copyMetaData to initialized DataModel
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.executeNextTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", dataModel0);
      dataModel0.metaDataInsert("", metaNumberNode0);
      // Undeclared exception!
      try { 
        dataModel0.initEmpty();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.MetaNumberNode cannot be cast to no.tellu.lib.data.MetaGroupNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      // Undeclared exception!
      try { 
        dataModel0.initEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 100);
      // Undeclared exception!
      try { 
        dataModel0.initFromFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("MetaTransaction");
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.CopyTransaction dataModel_CopyTransaction0 = dataModel0.new CopyTransaction(dataGroupNode1, "MetaTransaction", (DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
      dataModel_CopyTransaction0.execute();
      // Undeclared exception!
      try { 
        dataModel0.initFromModel(dataModel0, "J-pMH1");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.DataValueNode cannot be cast to no.tellu.lib.data.DataGroupNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.initFromModel((DataModel) null, "+yrs#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "['#:}&r(k5s,fTgy$N");
      // Undeclared exception!
      try { 
        dataModel0.initFromModel(dataModelHandle0, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Already has child node with this name
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.mergeInstance((DataGroupNode) null, false, (DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Logger logger0 = new Logger((String) null);
      DataModel dataModel0 = new DataModel(logger0);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("#", 5, false, false);
      // Undeclared exception!
      try { 
        dataModel0.metaDataInsert((String) null, metaGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        dataModel0.metaDataRemove((String) null, "}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null, 1545);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.resetDefaults((DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      DataModel dataModel0 = new DataModel((Logger) null);
      Rule rule0 = new Rule("KV\"S'yU7z2?N)8", "KV\"S'yU7z2?N)8", "#", "#");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("$");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("$", "$");
      try { 
        dataModel0.writeToFile("", mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      MockFile mockFile0 = new MockFile("Y7SioA>QiQ,%");
      try { 
        dataModel0.writeToFile("", mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // No DataSerializer specified
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      // Undeclared exception!
      try { 
        dataModel0.writeToStream((DataGroupNode) null, pipedOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("");
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Logger logger0 = new Logger("");
      DataModel dataModel0 = new DataModel(logger0);
      dataModel0.initEmpty();
      DataModelHandle dataModelHandle0 = dataModel0.getRootHandle();
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(dataProvider0).getName();
      doReturn(false).when(dataProvider0).needsConfig();
      dataModel0.addDataProvider(dataProvider0, (String) null);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("T>FB[de_U1/");
      // Undeclared exception!
      try { 
        dataModel0.addRule("I-32u;D$dfh:BzXVw", "ZAHYUY-2.hl$k{V", "T", (String) null, linkedList0, (List<Trigger>) null, (List<Action>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      HashMap<String, DataProvider> hashMap0 = new HashMap<String, DataProvider>();
      dataModel0.providers = (Map<String, DataProvider>) hashMap0;
      DataProvider dataProvider0 = mock(DataProvider.class, new ViolatedAssumptionAnswer());
      hashMap0.put("G}w2<`Lfd", dataProvider0);
      dataModel0.clearDataProviders();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("j~>nMHJ", "j~>nMHJ", "j~>nMHJ", "j~>nMHJ");
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "rules");
      dataModel0.copyFromModel(dataModelHandle0, "int", rule0, (DataHandle.TransactionCommitCallback) null);
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("Object member name or value is missing in a Name:Value pair (this is possibly caused by missing array brackets in an array)");
      dataModel0.copyMetaData(dataModelHandle0, "");
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Logger logger0 = new Logger("b;vBe}|8KbBJQ");
      DataModel dataModel0 = new DataModel(logger0, 1);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("A string's closing quote was missing from the input data (end of input was reached before string was terminated)");
      dataModel0.initFromModel(dataModelHandle0, " ");
      assertFalse(dataModelHandle0.isValueNode());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      JsonSerializer jsonSerializer0 = new JsonSerializer();
      dataModel0.setInstanceSerializer("4#z\"SUC$!ZB", jsonSerializer0);
      DataGroupNode dataGroupNode0 = new DataGroupNode("4#z\"SUC$!ZB");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0);
      dataModel0.writeToStream(dataGroupNode0, mockPrintStream0);
      assertEquals("4#z\"SUC$!ZB", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = dataModel0.data;
      DataGroupNode dataGroupNode1 = new DataGroupNode("#");
      DataModel.AddNodeTransaction dataModel_AddNodeTransaction0 = dataModel0.new AddNodeTransaction(dataGroupNode0, dataGroupNode1);
      boolean boolean0 = dataModel_AddNodeTransaction0.execute();
      assertTrue(boolean0);
      assertEquals("model", dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaGroupNode metaGroupNode0 = dataModel0.metaData;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("XRU4FqcuXMJ", metaGroupNode0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("XRU4FqcuXMJ", "no.tellu.lib.data.DataPath", 2, metaItemNode_DataType0);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.ResetTransaction dataModel_ResetTransaction0 = dataModel0.new ResetTransaction(parsedExpr0, dataHandle_TransactionCommitCallback0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataModel_ResetTransaction0);
      DataValueNode dataValueNode1 = new DataValueNode("", dataValueNode0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.addNodeRaw(dataValueNode1);
      assertEquals("model", metaGroupNode0.getName());
      
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback1 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.CopyTransaction dataModel_CopyTransaction0 = dataModel0.new CopyTransaction(dataGroupNode0, "", (DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback1);
      boolean boolean0 = dataModel_CopyTransaction0.execute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Logger logger0 = new Logger("V\"S'yU7z2?N)8");
      DataModel dataModel0 = new DataModel(logger0);
      Rule rule0 = new Rule("V\"S'yU7z2?N)8", "V\"S'yU7z2?N)8", "#", "#");
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "Objec)Member");
      dataGroupNode0.addNodeRaw((DataNode) null);
      rule0.initiate(dataModelHandle0);
      assertEquals("", dataModelHandle0.getName());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("}a?#lr7\"y", "#", 6, metaItemNode_DataType0);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("2", (byte)1, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.mergeInstance(dataGroupNode0, false, parsedExpr0, dataHandle_TransactionCommitCallback0);
      assertEquals("", parsedExpr0.getId());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode(" ");
      LogEvent logEvent0 = new LogEvent("no.tellu.lib.data.model.ParsedExpr$ObjectRef");
      DataModel.ValueNodeTransaction dataModel_ValueNodeTransaction0 = dataModel0.new ValueNodeTransaction(dataValueNode0, logEvent0);
      boolean boolean0 = dataModel_ValueNodeTransaction0.execute();
      assertTrue(dataValueNode0.isModified());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      ParsedExpr parsedExpr0 = new ParsedExpr("ResetTransaction", (String) null, 0, metaItemNode_DataType0);
      String string0 = parsedExpr0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("conds", "$", 1, metaItemNode_DataType0);
      DataModel.SubscriberFields dataModel_SubscriberFields0 = dataModel0.new SubscriberFields(parsedExpr0, "conds", "#");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.DataTransaction dataModel_DataTransaction0 = dataModel0.new DataTransaction(dataModel_SubscriberFields0.subscr, dataHandle_TransactionCommitCallback0, true);
      boolean boolean0 = dataModel_DataTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Logger logger0 = new Logger("^>EQb");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.GroupSubscriberNode dataModel_GroupSubscriberNode0 = dataModel0.new GroupSubscriberNode("|l0_$sLJT98bFN");
      // Undeclared exception!
      try { 
        dataModel_GroupSubscriberNode0.removeSubscrImpl((-2744));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Logger logger0 = new Logger("kFM");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("kFM", (MetaNode) null);
      assertEquals("MetaTransaction", dataModel_MetaTransaction0.toString());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Logger logger0 = new Logger("kFM");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("kFM", "Reset data values to defaults");
      boolean boolean0 = dataModel_MetaTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Logger logger0 = new Logger("#/");
      DataModel dataModel0 = new DataModel(logger0);
      DataModel.MetaTransaction dataModel_MetaTransaction0 = dataModel0.new MetaTransaction("#//", "#");
      boolean boolean0 = dataModel_MetaTransaction0.execute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("H.j0UP=d2QX>JT4Y;", "H.j0UP=d2QX>JT4Y;", "#", "#");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, false);
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback1 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      DataModel.DataTransaction dataModel_DataTransaction0 = dataModel0.new DataTransaction(rule0, dataHandle_TransactionCommitCallback1, false);
      dataModel0.addDataUpdate(dataModel_DataTransaction0);
      assertEquals("DataTransaction", dataModel_DataTransaction0.toString());
  }
}
