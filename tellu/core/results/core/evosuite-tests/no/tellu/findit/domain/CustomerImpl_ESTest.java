/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 25 11:09:08 GMT 2019
 */

package no.tellu.findit.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.time.ZoneId;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import no.tellu.findit.cfg.Environment;
import no.tellu.findit.domain.CustomerAddressLookupSetting;
import no.tellu.findit.domain.CustomerImpl;
import no.tellu.findit.domain.CustomerMapSetting;
import no.tellu.findit.domain.FinditUser;
import no.tellu.findit.domain.FinditUserImpl;
import no.tellu.findit.domain.Rule;
import no.tellu.findit.domain.RuleImpl;
import no.tellu.findit.domain.ServiceProvider;
import no.tellu.findit.domain.ServiceProviderImpl;
import no.tellu.findit.domain.ShareLevel;
import no.tellu.security.Address;
import no.tellu.security.jpa.BaseAccount;
import no.tellu.security.jpa.BaseAddress;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;

public class CustomerImpl_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDateDrools5Changed();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3429L));
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, "", mockDate0, mockDate0);
      customerImpl0.getDateDrools5Read();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Set<String> set0 = customerImpl0.getIdportenBehalfOfIds();
      customerImpl0.setIdportenBehalfOfIds(set0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getShareLevel();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setUsePublicResources((Boolean) null);
      customerImpl0.getUsePublicResources();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      customerImpl0.setReportComponents(map0);
      customerImpl0.getReportComponents();
      assertEquals("{CTT|Asia/Shanghai}{ART|Africa/Cairo}{CNT|America/St_Johns}{PRT|America/Puerto_Rico}{PNT|America/Phoenix}{PLT|Asia/Karachi}{AST|America/Anchorage}{BST|Asia/Dhaka}{CST|America/Chicago}{EST|-05:00}{HST|-10:00}{JST|Asia/Tokyo}{IST|Asia/Kolkata}{AGT|America/Argentina/Buenos_Aires}{NST|Pacific/Auckland}{MST|-07:00}{AET|Australia/Sydney}{BET|America/Sao_Paulo}{PST|America/Los_Angeles}{ACT|Australia/Darwin}{SST|Pacific/Guadalcanal}{VST|Asia/Ho_Chi_Minh}{CAT|Africa/Harare}{ECT|Europe/Paris}{EAT|Africa/Addis_Ababa}{IET|America/Indiana/Indianapolis}{MIT|Pacific/Apia}{NET|Asia/Yerevan}", customerImpl0.getReportComponentsString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getLanguage();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      customerImpl0.setMessageData(linkedList0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Date date0 = customerImpl0.getSmsResetDate();
      customerImpl0.setDateDrools5Changed(date0);
      Date date1 = customerImpl0.getDateDrools5Changed();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertNotNull(date1);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setDateCreated((Date) null);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, (Long) null, (Boolean) true, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, (Long) null, boolean0, "x+>");
      customerImpl0.getMaxOneUserNotificationSubscriptionPerDevice();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDomainCode();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = Long.valueOf((-794L));
      customerImpl0.setMaxSmsTotal(long0);
      customerImpl0.getMaxSmsTotal();
      assertEquals((-794L), (long)customerImpl0.getMaxSmsTotal());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getId();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getAccountOwner();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getServiceProviderId();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getBaseAccount();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      customerImpl0.setDomainCode("S");
      customerImpl0.getDomainCode();
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      customerImpl0.setAddressLookupSetting(customerAddressLookupSetting0);
      customerImpl0.getAddressLookup();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Long long0 = new Long((-1728L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.setMaxSmsPerDay(long0);
      customerImpl0.getMaxSmsPerDay();
      assertEquals((-1728L), (long)customerImpl0.getMaxSmsPerDay());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Map<String, String> map0 = customerImpl0.getAdditionalProperties();
      customerImpl0.setReportRecipients(map0);
      customerImpl0.getReportRecipients();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, (Long) null, (Boolean) true, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, (Long) null, boolean0, "x+>");
      customerImpl0.setMaxOneUserNotificationSubscriptionPerDevice(boolean0);
      customerImpl0.getMaxOneUserNotificationSubscriptionPerDevice();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getDeleted();
      customerImpl0.setDeleteDeviceFromCustomer(boolean0);
      Boolean boolean1 = customerImpl0.getDeleteDeviceFromCustomer();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(boolean1);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Long long0 = new Long((-267L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Long long0 = new Long(3600000L);
      CustomerImpl customerImpl0 = new CustomerImpl((Long) 3600000L, "z9 2PXa(p<1a");
      customerImpl0.setRuleCacheVersion(long0);
      customerImpl0.getRuleCacheVersion();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDateCounted();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDeleteDeviceFromCustomer();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      MockDate mockDate0 = new MockDate((-1218), (-1218), (-1066), (-1066), 0);
      customerImpl0.setDateLocked(mockDate0);
      customerImpl0.getDateLocked();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getCssReference();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAddress baseAddress0 = new BaseAddress();
      // Undeclared exception!
      try { 
        customerImpl0.setAddress(baseAddress0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getZoneOnlyCenterInside();
      customerImpl0.setMaxOneUserNotificationSubscriptionPerApp(boolean0);
      Boolean boolean1 = customerImpl0.getMaxOneUserNotificationSubscriptionPerApp();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Long long0 = new Long((-6139L));
      RuleImpl ruleImpl0 = new RuleImpl();
      Boolean boolean0 = ruleImpl0.getConfiguredOnce();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART_TOPO2;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      customerImpl0.setRuleCount((Long) 3600000L);
      customerImpl0.getRuleCount();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) 3600000L, "z9 2PXa(p<1a");
      customerImpl0.getRuleCacheVersion();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      RuleImpl ruleImpl0 = new RuleImpl();
      Boolean boolean0 = ruleImpl0.getConfiguredWhileActive();
      customerImpl0.setQqMapEnabled(boolean0);
      customerImpl0.getQqMapEnabled();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = Boolean.TRUE;
      customerImpl0.setOverrideActionsEnabled(boolean0);
      customerImpl0.getOverrideActionsEnabled();
      assertTrue(customerImpl0.getOverrideActionsEnabled());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Long long0 = new Long((-1728L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getPackagesString();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getSupportEmail();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setLibrary((Boolean) null);
      Boolean boolean0 = customerImpl0.isLibrary();
      assertFalse(boolean0);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getStrongPasswordRequired();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setCrmUrl("m&\"qsERqu6=6");
      customerImpl0.getCrmUrl();
      assertEquals("m&\"qsERqu6=6", customerImpl0.getCrmUrl());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Long long0 = new Long((-1208L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.setRules((List<Rule>) null);
      customerImpl0.getRules();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getGoogleEnabled();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      customerImpl0.getUsingProviderSupportEmail();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setDemoAccount((Boolean) null);
      customerImpl0.isDemoAccount();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Long long0 = new Long(3600L);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_HYBRID;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      customerImpl0.getAddressLookupSetting();
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDateCreated();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getStatKartEnabled();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getMaxOneUserNotificationSubscriptionPerApp();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Long long0 = Long.valueOf(1303L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      List<String> list0 = customerImpl0.getPackages();
      customerImpl0.setPackages(list0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      customerImpl0.setServiceProvider(serviceProviderImpl0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = new Boolean(false);
      customerImpl0.setLastRuleEngineLoadOK(boolean0);
      customerImpl0.isLastRuleEngineLoadOK();
      assertFalse(customerImpl0.isLastRuleEngineLoadOK());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getNotificationsEnabled();
      customerImpl0.setGoogleEnabled(boolean0);
      customerImpl0.getAddressLookup();
      assertEquals(CustomerAddressLookupSetting.GOOGLE, customerImpl0.getAddressLookup());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getRules();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = new Long(1101L);
      customerImpl0.setVersion(long0);
      customerImpl0.getVersion();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Map<String, String> map0 = customerImpl0.getReportRecipients();
      customerImpl0.setAdditionalProperties(map0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getVersion();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setSupportEmail("(G<j}tK;z#");
      customerImpl0.getSupportEmail();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART;
      customerImpl0.setMapSetting(customerMapSetting0);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      ShareLevel shareLevel0 = ShareLevel.PRIVATE;
      customerImpl0.setShareLevel(shareLevel0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setUsersRestrictedByDefault((Boolean) false);
      customerImpl0.getUsersRestrictedByDefault();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = Boolean.valueOf("q^B* ;)x5");
      customerImpl0.setDeviceOnly(boolean0);
      customerImpl0.isDeviceOnly();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setTimeZone("2");
      String string0 = customerImpl0.getTimeZone();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setDateChanged((Date) null);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getReportComponents();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Long long0 = new Long((-1165L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0, (String) null);
      customerImpl0.getLogicController();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Long long0 = new Long((-280L));
      Boolean boolean0 = Boolean.valueOf(false);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_TERRAIN;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, (String) null);
      customerImpl0.getMapSetting();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getServiceProvider();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDateChanged();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDeprecatedPackagesString();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setDeleted((Boolean) null);
      customerImpl0.getDeleted();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setLogicController("");
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getMessageData();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getGroupNameDeprecated();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setAlarmCenter((Boolean) null);
      Boolean boolean0 = customerImpl0.isAlarmCenter();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      MockDate mockDate0 = new MockDate((-1), 2608, (-1), (-2188), 2650);
      customerImpl0.setDateRead(mockDate0);
      customerImpl0.getDateRead();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setId((Long) null);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Long long0 = new Long(0L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      RuleImpl ruleImpl0 = new RuleImpl();
      Map<String, String> map0 = ruleImpl0.getCompileInformation();
      customerImpl0.setReportStatus(map0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setAutomaticallyAcceptAlarmCenter((Boolean) null);
      customerImpl0.getAutomaticallyAcceptAlarmCenter();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDateLocked();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getHistoryTimeToLive();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setZoneOnlyCenterInside((Boolean) null);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getDateRead();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Long long0 = new Long((-6139L));
      RuleImpl ruleImpl0 = new RuleImpl();
      Boolean boolean0 = ruleImpl0.getConfiguredOnce();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART_TOPO2;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      customerImpl0.getRuleCount();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getUsersRestrictedByDefault();
      customerImpl0.setStatKartEnabled(boolean0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Map<String, String> map0 = customerImpl0.getReportStatus();
      boolean boolean0 = customerImpl0.equals(map0);
      assertFalse(boolean0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      customerImpl0.setGroupNameDeprecated("");
      customerImpl0.getGroupNameDeprecated();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      // Undeclared exception!
      try { 
        customerImpl0.getAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3429L));
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, "", mockDate0, mockDate0);
      customerImpl0.setDateDrools5Read(mockDate0);
      customerImpl0.getDateDrools5Read();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Long long0 = Long.valueOf(1303L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.setResourceId("");
      String string0 = customerImpl0.getResourceId();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(string0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getResourceId();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Environment.Application environment_Application0 = Environment.Application.WEB;
      Environment.setApplicationType(environment_Application0);
      String string0 = customerImpl0.getResourceId();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertNotNull(string0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Integer integer0 = new Integer((-141));
      customerImpl0.setMinimumSecurityLevel(integer0);
      Integer integer1 = customerImpl0.getMinimumSecurityLevel();
      assertNotNull(integer1);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Integer integer0 = customerImpl0.getMinimumSecurityLevel();
      assertFalse(customerImpl0.isDemoAccount());
      assertNull(integer0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Environment.Application environment_Application0 = Environment.Application.WEB;
      Environment.setApplicationType(environment_Application0);
      Integer integer0 = customerImpl0.getMinimumSecurityLevel();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(integer0);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertEquals(1, (int)integer0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-3429L));
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, "", mockDate0, mockDate0);
      Boolean boolean0 = customerImpl0.getOverrideActionsEnabled();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setIncludeGuardsOfType("'=I*=/E),B");
      customerImpl0.getIncludeGuardsOfType();
      assertEquals("'=I*=/E),B", customerImpl0.getIncludeGuardsOfType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getIncludeGuardsOfType();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertNotNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setCrmIdentifier("activated");
      customerImpl0.getCrmIdentifier();
      assertEquals("activated", customerImpl0.getCrmIdentifier());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Long long0 = new Long((-267L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      String string0 = customerImpl0.getCrmIdentifier();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(string0);
      assertFalse(customerImpl0.isAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getCrmUrl();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertNotNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Boolean boolean0 = new Boolean(true);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, (Long) null, boolean0, boolean0, boolean0, (Boolean) null, customerAddressLookupSetting0, customerMapSetting0, (Boolean) null, (Long) null, boolean0, "");
      Boolean boolean1 = customerImpl0.getZoneOnlyCenterInside();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertTrue(boolean1);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isDeviceOnly());
      assertFalse(customerImpl0.getQqMapEnabled());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertTrue(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setContactInfo("activated");
      customerImpl0.getContactInfo();
      assertEquals("activated", customerImpl0.getContactInfo());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Long long0 = new Long((-267L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      String string0 = customerImpl0.getContactInfo();
      assertNotNull(string0);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getNote();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertNotNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setIncludeGuardsWithPropertyKey("activated");
      customerImpl0.getIncludeGuardsWithPropertyKey();
      assertEquals("activated", customerImpl0.getIncludeGuardsWithPropertyKey());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getIncludeGuardsWithPropertyKey();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setIncludeGuardsWithPropertyValue("k`%4B`^Q|*Uuc0 ");
      customerImpl0.getIncludeGuardsWithPropertyValue();
      assertEquals("k`%4B`^Q|*Uuc0 ", customerImpl0.getIncludeGuardsWithPropertyValue());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getIncludeGuardsWithPropertyValue();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getAutomaticallyAcceptAlarmCenter();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getManagedByServiceProvider();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setManagedByServiceProvider((Boolean) null);
      customerImpl0.getManagedByServiceProvider();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getQqMapEnabled();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Long long0 = new Long(1L);
      Boolean boolean0 = Boolean.valueOf(")`yF  G/G,<");
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART_TOPO2;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      CustomerAddressLookupSetting customerAddressLookupSetting1 = customerImpl0.getAddressLookup();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertEquals(CustomerAddressLookupSetting.OSM, customerAddressLookupSetting1);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getAddressLookup();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = Boolean.valueOf("aEctivated");
      customerImpl0.setGoogleEnabled(boolean0);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = customerImpl0.getAddressLookup();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertEquals(CustomerAddressLookupSetting.OSM, customerAddressLookupSetting0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Long long0 = new Long(469L);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_HYBRID;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, (Boolean) null, (Boolean) null, (Boolean) null, (Boolean) null, customerAddressLookupSetting0, customerMapSetting0);
      CustomerAddressLookupSetting customerAddressLookupSetting1 = customerImpl0.getAddressLookup();
      assertEquals(CustomerAddressLookupSetting.OSM, customerAddressLookupSetting1);
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Long long0 = new Long(0L);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      Boolean boolean1 = Boolean.TRUE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART_SEA;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean1, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      CustomerAddressLookupSetting customerAddressLookupSetting1 = customerImpl0.getAddressLookup();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getStatKartEnabled());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertEquals(CustomerAddressLookupSetting.GOOGLE, customerAddressLookupSetting1);
      assertFalse(customerImpl0.getQqMapEnabled());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Long long0 = new Long((-280L));
      Boolean boolean0 = Boolean.valueOf(false);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_TERRAIN;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, (String) null);
      boolean boolean1 = customerImpl0.isAddressLookupAutomatic();
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(boolean1);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      boolean boolean0 = customerImpl0.isAddressLookupAutomatic();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertTrue(boolean0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Long long0 = new Long(0L);
      Boolean boolean0 = new Boolean("19L&]!kRGX%O");
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART_TOPO2;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, (Long) 3076L, (Boolean) false, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, "web.resource_number");
      Long long1 = customerImpl0.getHistoryTimeToLiveInMillis();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertNotNull(long1);
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertEquals(0L, (long)long1);
      assertEquals(3076L, (long)customerImpl0.getServiceProviderId());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Long long0 = Long.valueOf(1303L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getHistoryTimeToLiveInMillis();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Long long0 = new Long((-267L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      Long long1 = customerImpl0.getMaxSmsPerDay();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertEquals(100L, (long)long1);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setMaxSmsPerMonth((Long) 0L);
      customerImpl0.getMaxSmsPerMonth();
      assertEquals(0L, (long)customerImpl0.getMaxSmsPerMonth());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = customerImpl0.getMaxSmsPerMonth();
      assertEquals(3100L, (long)long0);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = customerImpl0.getMaxSmsTotal();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertEquals(10000L, (long)long0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      MockDate mockDate0 = new MockDate();
      customerImpl0.setSmsResetDate(mockDate0);
      Date date0 = customerImpl0.getSmsResetDate();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertSame(date0, mockDate0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Long long0 = Long.valueOf(1303L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      Date date0 = customerImpl0.getSmsResetDate();
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date0.toString());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(date0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getTimeZone();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setTimeZone("");
      String string0 = customerImpl0.getTimeZone();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.getUsePublicResources();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getName();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.getName();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setName("GS<jZM");
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.setName("Xp:!Ih-vT?+q0gI8gh");
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      assertFalse(customerImpl0.getDeleted());
      
      customerImpl0.setDeleted((Boolean) true);
      customerImpl0.getDeleted();
      assertTrue(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setServiceProvider((ServiceProvider) null);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      RuleImpl ruleImpl0 = new RuleImpl();
      boolean boolean0 = customerImpl0.addRule(ruleImpl0);
      boolean boolean1 = customerImpl0.addRule(ruleImpl0);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(boolean1 == boolean0);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      RuleImpl ruleImpl0 = new RuleImpl();
      boolean boolean0 = customerImpl0.removeRule(ruleImpl0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      RuleImpl ruleImpl0 = new RuleImpl();
      customerImpl0.addRule(ruleImpl0);
      boolean boolean0 = customerImpl0.removeRule(ruleImpl0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      boolean boolean0 = customerImpl0.equals(customerImpl0);
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertTrue(boolean0);
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Long long0 = new Long((-141L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.equals(customerImpl0);
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      Boolean boolean0 = Boolean.TRUE;
      Long long0 = new Long((-1349L));
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_TERRAIN;
      CustomerImpl customerImpl1 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, (Long) 3076L);
      boolean boolean1 = customerImpl0.equals(customerImpl1);
      assertFalse(customerImpl1.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl1.isLibrary());
      assertFalse(customerImpl1.isAlarmCenter());
      assertFalse(customerImpl1.getDeleted());
      assertFalse(boolean1);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl1.getManagedByServiceProvider());
      assertEquals(265766400000L, (long)customerImpl1.getHistoryTimeToLiveInMillis());
      assertFalse(customerImpl1.isDemoAccount());
      assertEquals((-1349L), (long)customerImpl1.getServiceProviderId());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Long long0 = new Long((-1L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0, "");
      customerImpl0.hashCode();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      customerImpl0.hashCode();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.isDemoAccount();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.isAlarmCenter();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.isLibrary();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setAdditionalPropertiesString("U%zD");
      customerImpl0.getAdditionalProperties();
      assertEquals("U%zD", customerImpl0.getAdditionalPropertiesString());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      Boolean boolean0 = customerImpl0.isLastRuleEngineLoadOK();
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertTrue(boolean0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = customerImpl0.isDeviceOnly();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(boolean0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getIdportenBehalfOfIdsString();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setReportComponentsString(".Y8AqF");
      customerImpl0.getReportComponentsString();
      assertEquals(".Y8AqF", customerImpl0.getReportComponentsString());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Long long0 = Long.valueOf((-462L));
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getAllowedToBypassInvitations();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, (Boolean) null, (Boolean) null, (Boolean) true, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      customerImpl0.setMessageDataString("j)rY]?d<Nx%dz");
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getQqMapEnabled());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setIdportenBehalfOfIdsString("EMHr(flYu!Q.1@u6_");
      customerImpl0.getIdportenBehalfOfIdsString();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getMessageDataString();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setPackagesString("");
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = new Long(966L);
      customerImpl0.setServiceProviderId(long0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getAdditionalPropertiesString();
      assertNotNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Long long0 = new Long((-1728L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      String string0 = customerImpl0.getReportStatusString();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertNotNull(string0);
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Long long0 = new Long(0L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.setReportRecipientsString("M");
      customerImpl0.getReportRecipientsString();
      assertEquals("M", customerImpl0.getReportRecipientsString());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getReportRecipientsString();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(string0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      String string0 = customerImpl0.getReportComponentsString();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertNotNull(string0);
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      // Undeclared exception!
      try { 
        customerImpl0.addRule((RuleImpl) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setRules((List<Rule>) null);
      RuleImpl ruleImpl0 = new RuleImpl();
      // Undeclared exception!
      try { 
        customerImpl0.removeRule(ruleImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      // Undeclared exception!
      try { 
        customerImpl0.setIdportenBehalfOfIds((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      FinditUser finditUser0 = mock(FinditUser.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(finditUser0).toString();
      customerImpl0.setAccountOwner(finditUser0);
      customerImpl0.getAccountOwner();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setAdditionalPropertiesString("B");
      customerImpl0.getAdditionalPropertiesString();
      assertEquals("B", customerImpl0.getAdditionalPropertiesString());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAddress baseAddress0 = new BaseAddress();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn(baseAddress0).when(baseAccount0).getAddress();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.getAddress();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn((Address) null).when(baseAccount0).getAddress();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.getAddress();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getAddressLookupSetting();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(baseAccount0).toString();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.getBaseAccount();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setCssReference("zWN=We");
      customerImpl0.getCssReference();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Long long0 = new Long((-1657L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getUsePublicResourcesByDefault();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_HYBRID;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, (Long) (-1657L), boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0);
      customerImpl0.getDateChanged();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Date date0 = customerImpl0.getSmsResetDate();
      customerImpl0.setDateCounted(date0);
      Date date1 = customerImpl0.getDateCounted();
      assertNotNull(date1);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date1.toString());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      customerImpl0.getDateCreated();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setDeprecatedPackagesString("web/");
      customerImpl0.getDeprecatedPackagesString();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null);
      customerImpl0.getDeprecatedPackagesString();
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Long long0 = new Long(0L);
      Boolean boolean0 = Boolean.valueOf(")`yF  G/G,<");
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      customerImpl0.setExtendedActivityLoggingEnabled(boolean0);
      customerImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Long long0 = new Long(0L);
      Boolean boolean0 = Boolean.valueOf("b@FS0cFHu");
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, (Boolean) null, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      Boolean boolean1 = customerImpl0.getGoogleEnabled();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertNotNull(boolean1);
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Long long0 = new Long((-1L));
      Boolean boolean0 = Boolean.valueOf("");
      Boolean boolean1 = Boolean.TRUE;
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.QQ_MAP;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, boolean0, boolean1, (Boolean) null, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      Boolean boolean2 = customerImpl0.getGoogleEnabled();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getQqMapEnabled());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(boolean2);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertTrue(boolean2);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setGroupNameDeprecated("org.apache.oro.io.Perl5FilenameFilter");
      customerImpl0.getGroupNameDeprecated();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setHistoryTimeToLive((Long) (-1848L));
      customerImpl0.getHistoryTimeToLive();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Long long0 = Long.valueOf((-462L));
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getMobileVerified();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_TERRAIN;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, (Boolean) false, customerAddressLookupSetting0, customerMapSetting0, boolean0, (Long) 450L);
      Long long1 = customerImpl0.getHistoryTimeToLive();
      assertEquals((-462L), (long)customerImpl0.getServiceProviderId());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isLibrary());
      assertEquals(450L, (long)long1);
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Long long0 = new Long(0L);
      Boolean boolean0 = new Boolean(true);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_SATELLITE;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) 3600000L, long0, (Boolean) true, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, (String) null);
      Long long1 = customerImpl0.getHistoryTimeToLive();
      assertEquals(0L, (long)long1);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertEquals(0L, (long)customerImpl0.getServiceProviderId());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Long long0 = new Long((-899L));
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) (-899L), long0, (Boolean) null, (Boolean) true, (Boolean) null, (Boolean) null, customerAddressLookupSetting0, customerMapSetting0, (Boolean) null, long0);
      Long long1 = customerImpl0.getHistoryTimeToLiveInMillis();
      assertFalse(customerImpl0.isDeviceOnly());
      assertFalse(customerImpl0.getQqMapEnabled());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertEquals((-77673600000L), (long)long1);
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Long long0 = new Long(0L);
      Boolean boolean0 = Boolean.valueOf("no.tellu.findit.domain.CustomerImpl");
      Long long1 = new Long(1063L);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long1);
      Long long2 = customerImpl0.getHistoryTimeToLiveInMillis();
      assertEquals(0L, (long)customerImpl0.getServiceProviderId());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertEquals(91843200000L, (long)long2);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Long long0 = new Long((-1848L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getHideTelluBranding();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) (-1848L), long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, (Boolean) null, "|7");
      customerImpl0.getId();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Long long0 = new Long(3600L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getId();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Long long0 = new Long(0L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getId();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      customerImpl0.setIdportenBehalfOfIds(set0);
      customerImpl0.getIdportenBehalfOfIds();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Set<String> set0 = finditUserImpl0.getApprovedIp();
      customerImpl0.setIdportenBehalfOfIds(set0);
      customerImpl0.getIdportenBehalfOfIdsString();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Long long0 = new Long((-267L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.setLanguage("fHPXF");
      customerImpl0.getLanguage();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Long long0 = new Long((-1L));
      CustomerImpl customerImpl0 = new CustomerImpl(long0, "");
      customerImpl0.getLogicController();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getLogicController();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Long long0 = new Long(0L);
      Boolean boolean0 = Boolean.valueOf("b@FS0cFHu");
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, (Boolean) null, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0);
      customerImpl0.getMapSetting();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getMapSetting();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getMobileVerified();
      customerImpl0.setMaxOneUserNotificationSubscriptionPerDevice(boolean0);
      customerImpl0.getMaxOneUserNotificationSubscriptionPerDevice();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = new Long(0L);
      customerImpl0.setMaxSmsPerDay(long0);
      customerImpl0.getMaxSmsPerDay();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = Long.valueOf((-794L));
      customerImpl0.setMaxSmsPerMonth(long0);
      customerImpl0.getMaxSmsPerMonth();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getHideTelluBranding();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_TERRAIN;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) null, (Long) null, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, (Long) null);
      customerImpl0.getMessageDataString();
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Integer integer0 = new Integer(0);
      customerImpl0.setMinimumSecurityLevel(integer0);
      Integer integer1 = customerImpl0.getMinimumSecurityLevel();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertNotNull(integer1);
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn("").when(baseAccount0).getName();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.getName();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn("2M~-eGIr[Q)ZoFiEk").when(baseAccount0).getName();
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.getName();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setNote("`8jBc)D@p");
      customerImpl0.getNote();
      assertEquals("`8jBc)D@p", customerImpl0.getNote());
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getPackagesString();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Long long0 = new Long((-1L));
      Boolean boolean0 = Boolean.FALSE;
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, (Boolean) null, (Boolean) true, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0);
      Boolean boolean1 = customerImpl0.getQqMapEnabled();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertTrue(boolean1);
      assertFalse(customerImpl0.isDeviceOnly());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getGoogleEnabled());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.setReportStatusString("no.tellu.findit.domain.CustomerImpl");
      customerImpl0.getReportStatusString();
      assertEquals("no.tellu.findit.domain.CustomerImpl", customerImpl0.getReportStatusString());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      RuleImpl ruleImpl0 = new RuleImpl();
      boolean boolean0 = customerImpl0.addRule(ruleImpl0);
      assertTrue(boolean0);
      
      customerImpl0.getRules();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Long long0 = new Long((-1848L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getHideTelluBranding();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl((Long) (-1848L), long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, (Boolean) null, "|7");
      customerImpl0.getServiceProviderId();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Long long0 = new Long(0L);
      Long long1 = Long.valueOf(1521L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) (-899L), long0, long1, "");
      Boolean boolean0 = serviceProviderImpl0.getUsePublicResourcesByDefault();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.GOOGLE;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long1, boolean0, (Boolean) null, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, (Boolean) null, long1);
      Long long2 = customerImpl0.getServiceProviderId();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertEquals(131414400000L, (long)customerImpl0.getHistoryTimeToLiveInMillis());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertEquals(1521L, (long)long2);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Long long0 = new Long(469L);
      Boolean boolean0 = Boolean.valueOf(true);
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_HYBRID;
      Long long1 = new Long(0L);
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long1, (Boolean) null, boolean0, (Boolean) true, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, (String) null);
      Long long2 = customerImpl0.getServiceProviderId();
      assertTrue(customerImpl0.isDeviceOnly());
      assertTrue(customerImpl0.getQqMapEnabled());
      assertFalse(customerImpl0.getUsePublicResources());
      assertEquals(0L, (long)long2);
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertEquals(469L, (long)customerImpl0.getHistoryTimeToLive());
      assertTrue(customerImpl0.getZoneOnlyCenterInside());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Long long0 = new Long(0L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getShareLevel();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Long long0 = new Long(100L);
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getMobileVerified();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.STATKART_SEA;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, "");
      customerImpl0.getStatKartEnabled();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Long long0 = Long.valueOf(24L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getDeleted();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean1 = finditUserImpl0.getNotificationsEnabled();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.OSM;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_STREETS;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean1, (Boolean) false, customerAddressLookupSetting0, customerMapSetting0, boolean0, long0, boolean0, "activated");
      Boolean boolean2 = customerImpl0.getStatKartEnabled();
      assertFalse(customerImpl0.isDeviceOnly());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getZoneOnlyCenterInside());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getGoogleEnabled());
      assertFalse(customerImpl0.getQqMapEnabled());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Boolean boolean0 = Boolean.valueOf("|fCTub6T%A9>L&");
      customerImpl0.setStrongPasswordRequired(boolean0);
      customerImpl0.getStrongPasswordRequired();
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Long long0 = new Long(0L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0);
      customerImpl0.getSupportEmail();
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      assertFalse(customerImpl0.getUsePublicResources());
      
      Boolean boolean0 = new Boolean(true);
      customerImpl0.setUsePublicResources(boolean0);
      customerImpl0.getUsePublicResources();
      assertFalse(customerImpl0.getManagedByServiceProvider());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Long long0 = new Long(8L);
      CustomerImpl customerImpl0 = new CustomerImpl(long0, "%  GB85,,hR0");
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getStatKartEnabled();
      customerImpl0.setUsingProviderSupportEmail(boolean0);
      customerImpl0.getUsingProviderSupportEmail();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      customerImpl0.getUsingProviderSupportEmail();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = new Long(0L);
      customerImpl0.setVersion(long0);
      customerImpl0.getVersion();
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getNotificationsEnabled();
      customerImpl0.setAlarmCenter(boolean0);
      customerImpl0.isAlarmCenter();
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      assertFalse(customerImpl0.isDemoAccount());
      
      customerImpl0.setDemoAccount((Boolean) true);
      customerImpl0.isDemoAccount();
      assertFalse(customerImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Long long0 = Long.valueOf(24L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getHideTelluBranding();
      CustomerAddressLookupSetting customerAddressLookupSetting0 = CustomerAddressLookupSetting.DISABLED;
      CustomerMapSetting customerMapSetting0 = CustomerMapSetting.GOOGLE_SATELLITE;
      CustomerImpl customerImpl0 = new CustomerImpl(long0, long0, boolean0, boolean0, boolean0, boolean0, customerAddressLookupSetting0, customerMapSetting0, (Boolean) true, (Long) null);
      Boolean boolean1 = customerImpl0.isDeviceOnly();
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isAlarmCenter());
      assertTrue(boolean1);
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.isLibrary());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      BaseAddress baseAddress0 = new BaseAddress();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      customerImpl0.setBaseAccount(baseAccount0);
      customerImpl0.setAddress(baseAddress0);
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl0.isDemoAccount());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CustomerImpl customerImpl0 = new CustomerImpl();
      Long long0 = new Long((-141L));
      CustomerImpl customerImpl1 = new CustomerImpl(long0);
      boolean boolean0 = customerImpl1.equals(customerImpl0);
      assertFalse(customerImpl1.getManagedByServiceProvider());
      assertFalse(customerImpl1.isLibrary());
      assertFalse(customerImpl0.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl1.getUsePublicResources());
      assertFalse(customerImpl0.getUsePublicResources());
      assertFalse(customerImpl0.getManagedByServiceProvider());
      assertFalse(customerImpl1.isAlarmCenter());
      assertFalse(customerImpl1.getAutomaticallyAcceptAlarmCenter());
      assertFalse(customerImpl1.getDeleted());
      assertFalse(customerImpl0.getDeleted());
      assertFalse(customerImpl0.isDemoAccount());
      assertFalse(boolean0);
      assertFalse(customerImpl1.isDemoAccount());
  }
}
