<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.mockito.internal.MockitoCore.name(java.lang.String)" proba="0.5"/><transition target="s5" action="org.mockito.internal.MockitoCore.mock(java.lang.Class&lt;T>,org.mockito.MockSettings)" proba="0.5"/></state><state id="s4"><transition target="s3" action="org.mockito.internal.MockitoCore.defaultAnswer(org.mockito.stubbing.Answer)" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s1" action="org.mockito.internal.MockitoCore.fromString(java.lang.String)" proba="0.6"/><transition target="s2" action="org.mockito.internal.MockitoCore.&lt;init>()" proba="0.4"/></state><state id="s1"><transition target="s2" action="org.mockito.internal.MockitoCore.&lt;init>()" proba="1.0"/></state><state id="s2"><transition target="s3" action="org.mockito.internal.MockitoCore.defaultAnswer(org.mockito.stubbing.Answer)" proba="0.8"/><transition target="sX" action="epsilon" proba="0.2"/></state></states></ts>