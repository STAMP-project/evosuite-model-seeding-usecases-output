/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:44:34 GMT 2019
 */

package org.ow2.proactive.catalog.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDateTime;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.ow2.proactive.catalog.util.LinkUtil;
import org.springframework.hateoas.Link;

public class LinkUtil_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalDateTime localDateTime0 = LocalDateTime.now();
      Link link0 = LinkUtil.createRelativeLink("+", "SH", localDateTime0);
      assertNotNull(link0);
      assertEquals("buckets/+/resources/SH/revisions/1563288273804", link0.getHref());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Link link0 = LinkUtil.createRelativeLink("%20", "%20");
      assertEquals("buckets/%20/resources/%2520", link0.getHref());
      assertNotNull(link0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      // Undeclared exception!
      try { 
        LinkUtil.createLink("+", "+", localDateTime0);
        fail("Expecting exception: IncompatibleClassChangeError");
      
      } catch(IncompatibleClassChangeError e) {
         //
         // Expected non-static field org.springframework.cglib.proxy.Enhancer.serialVersionUID
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createLink("self", "-ih}Y;c8q,Ps.");
        fail("Expecting exception: IncompatibleClassChangeError");
      
      } catch(IncompatibleClassChangeError e) {
         //
         // Expected non-static field org.springframework.cglib.proxy.Enhancer.serialVersionUID
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkUtil linkUtil0 = new LinkUtil();
      // Undeclared exception!
      try { 
        LinkUtil.linkTo(linkUtil0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object of class [org.ow2.proactive.catalog.util.LinkUtil] must be an instance of interface org.springframework.hateoas.core.DummyInvocationUtils$LastInvocationAware
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createLink("c}~}m1Mbx&C x", "http://www.w3.org/2005/Atom", (LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createRelativeLink("+", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createRelativeLink("content", "content", (LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
