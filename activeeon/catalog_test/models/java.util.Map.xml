<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="java.util.Map.containsValue(java.lang.Object)" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state><state id="s4"><transition target="s3" action="java.util.Map.containsValue(java.lang.Object)" proba="1.0"/></state><state id="s5"><transition target="s6" action="java.util.Map.iterator()" proba="0.3333333333333333"/><transition target="s7" action="java.util.Map.stream()" proba="0.6666666666666666"/></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s7"><transition target="s8" action="java.util.Map.forEach(java.util.function.Consumer)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s4" action="java.util.Map.containsKey(java.lang.Object)" proba="0.14285714285714285"/><transition target="s5" action="java.util.Map.entrySet()" proba="0.42857142857142855"/><transition target="s1" action="java.util.Map.get(java.lang.Object)" proba="0.2857142857142857"/><transition target="s2" action="java.util.Map.size()" proba="0.14285714285714285"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.5"/><transition target="s1" action="java.util.Map.get(java.lang.Object)" proba="0.5"/></state><state id="s2"><transition target="s3" action="java.util.Map.containsValue(java.lang.Object)" proba="1.0"/></state></states></ts>