/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:25:45 GMT 2019
 */

package org.ow2.proactive.catalog.report;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import be.quodlibet.boxable.Cell;
import be.quodlibet.boxable.HorizontalAlignment;
import be.quodlibet.boxable.Row;
import org.apache.pdfbox.pdmodel.PDPage;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.ow2.proactive.catalog.report.CellFactory;

public class CellFactory_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn((Cell) null).when(row0).createCell(anyFloat() , anyString());
      // Undeclared exception!
      try { 
        cellFactory0.addSecondaryHeaderCell(row0, "Range invalid");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn((Cell) null).when(row0).createCell(anyFloat() , anyString());
      // Undeclared exception!
      try { 
        cellFactory0.createDataHeaderCell(row0, (-776.45F), "org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.createDataCell(row0, 0.0F, "#EE7939");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn((Cell) null).when(row0).createCell(anyFloat() , anyString());
      // Undeclared exception!
      try { 
        cellFactory0.createIconCell(row0, 2449.043F, "#ffffff");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn((Cell) null).when(row0).createCell(anyFloat() , anyString());
      // Undeclared exception!
      try { 
        cellFactory0.createKeyValueContentDataCell(row0, 2806.2432F, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      // Undeclared exception!
      try { 
        cellFactory0.createDataCellBucketName((Row<PDPage>) null, (-1250.0034F), "m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      // Undeclared exception!
      try { 
        cellFactory0.addMainTitleCell((Row<PDPage>) null, "rg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.createDataCell(row0, (-2459.1F), "", (-367));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn((Cell) null).when(row0).createCell(anyFloat() , anyString());
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.LEFT;
      // Undeclared exception!
      try { 
        cellFactory0.createDataCell(row0, 0.0F, "V~jF-c}", horizontalAlignment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      // Undeclared exception!
      try { 
        cellFactory0.createDataCell((Row<PDPage>) null, 1752.7318F, "org.ow2.proactive.catalog.report.CellFactory");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn((Cell) null).when(row0).createCell(anyFloat() , anyString());
      // Undeclared exception!
      try { 
        cellFactory0.createDataCell(row0, 100.0F, "hiD?rT;yfsMTiQ<V-=", (-1309));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.addMainTitleCell(row0, ";)chF]");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.addSecondaryHeaderCell(row0, "/H>r/exqy%");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.createDataCellBucketName(row0, (-2082.28F), "#F3F3F4");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.createDataHeaderCell(row0, (-596.556F), "");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.createIconCell(row0, 0.0F, "");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      cellFactory0.createKeyValueContentDataCell(row0, (-489.4778F), "");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CellFactory cellFactory0 = new CellFactory();
      Cell<PDPage> cell0 = (Cell<PDPage>) mock(Cell.class, new ViolatedAssumptionAnswer());
      Row<PDPage> row0 = (Row<PDPage>) mock(Row.class, new ViolatedAssumptionAnswer());
      doReturn(cell0).when(row0).createCell(anyFloat() , anyString());
      HorizontalAlignment horizontalAlignment0 = HorizontalAlignment.RIGHT;
      cellFactory0.createDataCell(row0, 0.0F, "", horizontalAlignment0);
  }
}
