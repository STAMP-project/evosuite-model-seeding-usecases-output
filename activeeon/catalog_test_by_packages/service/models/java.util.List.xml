<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.util.List.stream()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state><state id="s4"><transition target="s5" action="java.util.List.map(java.util.function.Function)" proba="0.6666666666666666"/><transition target="s6" action="java.util.List.filter(java.util.function.Predicate)" proba="0.26666666666666666"/><transition target="sX" action="epsilon" proba="0.06666666666666667"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s6"><transition target="s7" action="java.util.List.findFirst()" proba="0.25"/><transition target="sX" action="epsilon" proba="0.75"/></state><state id="s7"><transition target="s8" action="java.util.List.orElse(java.lang.Object)" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s9"><transition target="s11" action="java.util.List.toString()" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s12"><transition target="s12" action="java.util.List.get(int)" proba="0.6666666666666666"/><transition target="sX" action="epsilon" proba="0.3333333333333333"/></state><state id="s0"><transition target="s3" action="java.util.List.isEmpty()" proba="0.09375"/><transition target="s4" action="java.util.List.stream()" proba="0.375"/><transition target="s10" action="java.util.List.add(java.lang.Object)" proba="0.0625"/><transition target="s12" action="java.util.List.get(int)" proba="0.03125"/><transition target="s9" action="java.util.List.iterator()" proba="0.0625"/><transition target="s1" action="java.util.List.forEach(java.util.function.Consumer)" proba="0.1875"/><transition target="s2" action="java.util.List.size()" proba="0.1875"/></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s2"><transition target="s4" action="java.util.List.stream()" proba="0.3333333333333333"/><transition target="sX" action="epsilon" proba="0.6666666666666666"/></state></states></ts>