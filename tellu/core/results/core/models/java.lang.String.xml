<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="java.lang.String.toLowerCase()" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="java.lang.String.split(java.lang.String)" proba="0.25"></transition></state><state id="s4"><transition target="s4" action="java.lang.String.toLowerCase()" proba="0.16666666666666666"></transition><transition target="s13" action="java.lang.String.split(java.lang.String,int)" proba="0.16666666666666666"></transition><transition target="s2" action="java.lang.String.trim()" proba="0.6666666666666666"></transition></state><state id="s5"><transition target="s5" action="java.lang.String.valueOf(java.lang.Object)" proba="0.9294871794871795"></transition><transition target="sX" action="epsilon" proba="0.07051282051282051"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s4" action="java.lang.String.toLowerCase()" proba="0.017391304347826087"></transition><transition target="s7" action="java.lang.String.equals(java.lang.Object)" proba="0.9478260869565217"></transition><transition target="sX" action="epsilon" proba="0.034782608695652174"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s8" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="0.34615384615384615"></transition><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s9" action="java.lang.String.split(java.lang.String)" proba="0.07692307692307693"></transition><transition target="s2" action="java.lang.String.trim()" proba="0.07692307692307693"></transition></state><state id="s9"><transition target="s11" action="java.lang.String.startsWith(java.lang.String)" proba="0.08333333333333333"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.08333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s17" action="java.lang.String.replaceAll(java.lang.String,java.lang.String)" proba="0.08333333333333333"></transition><transition target="s2" action="java.lang.String.trim()" proba="0.08333333333333333"></transition></state><state id="s11"><transition target="s12" action="java.lang.String.substring(int)" proba="1.0"></transition></state><state id="s10"><transition target="s4" action="java.lang.String.toLowerCase()" proba="0.07692307692307693"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.38461538461538464"></transition><transition target="s13" action="java.lang.String.split(java.lang.String,int)" proba="0.07692307692307693"></transition><transition target="s8" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="0.15384615384615385"></transition><transition target="s9" action="java.lang.String.split(java.lang.String)" proba="0.3076923076923077"></transition></state><state id="s13"><transition target="s11" action="java.lang.String.startsWith(java.lang.String)" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s12"><transition target="s11" action="java.lang.String.startsWith(java.lang.String)" proba="0.2"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.2"></transition><transition target="s2" action="java.lang.String.trim()" proba="0.6"></transition></state><state id="s15"><transition target="s1" action="java.lang.String.length()" proba="1.0"></transition></state><state id="s14"><transition target="s8" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="1.0"></transition></state><state id="s17"><transition target="s8" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="1.0"></transition></state><state id="s16"><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="1.0"></transition></state><state id="s18"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.String.isEmpty()" proba="0.03278688524590164"></transition><transition target="s5" action="java.lang.String.valueOf(java.lang.Object)" proba="0.18032786885245902"></transition><transition target="s6" action="java.lang.String.valueOf(char)" proba="0.03278688524590164"></transition><transition target="s7" action="java.lang.String.equals(java.lang.Object)" proba="0.06557377049180328"></transition><transition target="s8" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="0.16393442622950818"></transition><transition target="s9" action="java.lang.String.split(java.lang.String)" proba="0.04918032786885246"></transition><transition target="s11" action="java.lang.String.startsWith(java.lang.String)" proba="0.01639344262295082"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.06557377049180328"></transition><transition target="s15" action="java.lang.String.endsWith(java.lang.String)" proba="0.01639344262295082"></transition><transition target="s14" action="java.lang.String.&lt;init&gt;(char[])" proba="0.03278688524590164"></transition><transition target="s18" action="java.lang.String.toCharArray()" proba="0.01639344262295082"></transition><transition target="s1" action="java.lang.String.length()" proba="0.19672131147540983"></transition><transition target="s2" action="java.lang.String.trim()" proba="0.13114754098360656"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9230769230769231"></transition><transition target="s16" action="java.lang.String.substring(int,int)" proba="0.07692307692307693"></transition></state><state id="s2"><transition target="s3" action="java.lang.String.isEmpty()" proba="0.08695652173913043"></transition><transition target="s4" action="java.lang.String.toLowerCase()" proba="0.043478260869565216"></transition><transition target="s11" action="java.lang.String.startsWith(java.lang.String)" proba="0.043478260869565216"></transition><transition target="s10" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.043478260869565216"></transition><transition target="s7" action="java.lang.String.equals(java.lang.Object)" proba="0.08695652173913043"></transition><transition target="s13" action="java.lang.String.split(java.lang.String,int)" proba="0.043478260869565216"></transition><transition target="sX" action="epsilon" proba="0.2608695652173913"></transition><transition target="s8" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="0.08695652173913043"></transition><transition target="s9" action="java.lang.String.split(java.lang.String)" proba="0.08695652173913043"></transition><transition target="s2" action="java.lang.String.trim()" proba="0.21739130434782608"></transition></state></states></ts>