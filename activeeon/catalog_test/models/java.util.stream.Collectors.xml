<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.stream.Collectors.joining(java.lang.CharSequence)" proba="0.0625"/><transition target="s4" action="java.util.stream.Collectors.toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" proba="0.03125"/><transition target="s1" action="java.util.stream.Collectors.toList()" proba="0.875"/><transition target="s2" action="java.util.stream.Collectors.groupingBy(java.util.function.Function)" proba="0.03125"/></state><state id="s1"><transition target="s5" action="java.util.stream.Collectors.groupingBy(java.util.function.Function,java.util.stream.Collector)" proba="0.03333333333333333"/><transition target="sX" action="epsilon" proba="0.9"/><transition target="s1" action="java.util.stream.Collectors.toList()" proba="0.06666666666666667"/></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"/></state></states></ts>