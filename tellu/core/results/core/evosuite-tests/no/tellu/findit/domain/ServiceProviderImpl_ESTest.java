/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 25 11:14:37 GMT 2019
 */

package no.tellu.findit.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import no.tellu.findit.cfg.Environment;
import no.tellu.findit.domain.FinditUser;
import no.tellu.findit.domain.FinditUserImpl;
import no.tellu.findit.domain.ServiceProviderImpl;
import no.tellu.security.Address;
import no.tellu.security.jpa.BaseAccount;
import no.tellu.security.jpa.BaseRole;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;

public class ServiceProviderImpl_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Long long0 = new Long((-1351L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "*M");
      serviceProviderImpl0.getSupportPhoneNumber();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      // Undeclared exception!
      try { 
        serviceProviderImpl0.setAddress((Address) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDeleteDeviceFromCustomer();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getReportHeaderHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getSupportEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getTimeZone();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setPackagesString((String) null);
      serviceProviderImpl0.getPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long((-1L));
      serviceProviderImpl0.setHistoryTimeToLiveMaximum(long0);
      serviceProviderImpl0.getHistoryTimeToLiveMaximum();
      assertEquals((-1L), (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setTimeZone((String) null);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getActionHeaderHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getBaseUrl();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setHistoryTimeToLiveDefault((Long) null);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionFooterHtml("");
      serviceProviderImpl0.getActionFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Long long0 = new Long(345L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) 345L, long0, long0, "W?lBi>XZPGZ6|_@l'");
      serviceProviderImpl0.getNoreplyEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDateCounted();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      List<String> list0 = serviceProviderImpl0.getApprovedAlarmCenters();
      serviceProviderImpl0.setPackages(list0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setMessageLinkToAsset("");
      serviceProviderImpl0.getMessageLinkToAsset();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDomainCode();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setAdministrator((FinditUser) null);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getMessageLinkToAsset();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getUrlContextPath();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      // Undeclared exception!
      try { 
        serviceProviderImpl0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setVersion((Long) 0L);
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDomainCode("");
      serviceProviderImpl0.getDomainCode();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getGoogleEnabled();
      assertFalse(boolean0);
      
      serviceProviderImpl0.setDeleteDeviceFromCustomer(boolean0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getCssReference();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getDeleted();
      serviceProviderImpl0.setQqMapEnabled(boolean0);
      Boolean boolean1 = serviceProviderImpl0.getQqMapEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.TRUE;
      serviceProviderImpl0.setExtendedActivityLoggingEnabled(boolean0);
      serviceProviderImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDateCreated();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getQqMapEnabled();
      assertFalse(boolean0);
      
      serviceProviderImpl0.setGoogleEnabled(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getActionFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getLanguage();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getServiceOwnerLimitation();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDeprecatedPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      // Undeclared exception!
      try { 
        serviceProviderImpl0.setName("mDU F}\"i*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getStatKartEnabled();
      assertFalse(boolean0);
      
      serviceProviderImpl0.setHideTelluBranding(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getReportFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getServiceIdentifier();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getZoneOnlyCenterInsideDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      // Undeclared exception!
      try { 
        serviceProviderImpl0.getAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getBaseAccount();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Long long0 = new Long((-1351L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "*M");
      serviceProviderImpl0.setSupportPhoneNumber((String) null);
      serviceProviderImpl0.getSupportPhoneNumber();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getAdministrator();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      List<String> list0 = serviceProviderImpl0.getApprovedDevices();
      serviceProviderImpl0.setApprovedDevices(list0);
      serviceProviderImpl0.getApprovedDevicesString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Long long0 = new Long(0);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "zO");
      serviceProviderImpl0.setStatKartEnabled((Boolean) true);
      serviceProviderImpl0.getStatKartEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Long long0 = new Long((-1351L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "*M");
      List<String> list0 = serviceProviderImpl0.getPackages();
      serviceProviderImpl0.setApprovedAlarmCenters(list0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getNotificationsEnabled();
      serviceProviderImpl0.setZoneOnlyCenterInsideDefault(boolean0);
      serviceProviderImpl0.getZoneOnlyCenterInsideDefault();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getServicePassword();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      String string0 = serviceProviderImpl0.getResourceId();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertNull(string0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Environment.Application environment_Application0 = Environment.Application.WEB;
      Environment.setApplicationType(environment_Application0);
      String string0 = serviceProviderImpl0.getResourceId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setHideTelluBranding((Boolean) true);
      serviceProviderImpl0.getHideTelluBranding();
      assertTrue(serviceProviderImpl0.getHideTelluBranding());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getHideTelluBranding();
      serviceProviderImpl0.setStatKartEnabled(boolean0);
      Boolean boolean1 = serviceProviderImpl0.getStatKartEnabled();
      assertFalse(boolean1);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setUsePublicResourcesByDefault((Boolean) null);
      serviceProviderImpl0.getUsePublicResourcesByDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = serviceProviderImpl0.getHistoryTimeToLiveMaximum();
      assertEquals(90L, (long)long0);
      
      ServiceProviderImpl serviceProviderImpl1 = new ServiceProviderImpl(long0, long0, long0, "lMb");
      assertFalse(serviceProviderImpl1.equals((Object)serviceProviderImpl0));
      
      boolean boolean0 = serviceProviderImpl0.equals(serviceProviderImpl1);
      assertFalse(serviceProviderImpl1.getDeleted());
      assertFalse(boolean0);
      assertFalse(serviceProviderImpl1.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = serviceProviderImpl0.getHistoryTimeToLiveDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(90L, (long)long0);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.valueOf((String) null);
      serviceProviderImpl0.setGoogleEnabled(boolean0);
      serviceProviderImpl0.getGoogleEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      serviceProviderImpl0.setAdministrator(finditUserImpl0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      boolean boolean0 = serviceProviderImpl0.equals("");
      assertFalse(boolean0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      boolean boolean0 = serviceProviderImpl0.equals(serviceProviderImpl0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertTrue(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Long long0 = new Long((-2029L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, (Long) null, long0, "");
      serviceProviderImpl0.hashCode();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals((-2029L), (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.hashCode();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getApprovedDevicesString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setApprovedDevicesString("GOOGLE_HYBRID");
      serviceProviderImpl0.getApprovedDevicesString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getApprovedAlarmCentersString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionFooterHtml("<6u zY");
      serviceProviderImpl0.getActionFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionHeaderHtml("");
      serviceProviderImpl0.getActionHeaderHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionHeaderHtml("statistics_counter");
      serviceProviderImpl0.getActionHeaderHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      Address address0 = mock(Address.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(address0).toString();
      baseAccount0.setAddress(address0);
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getAddress();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getAddress();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUser finditUser0 = mock(FinditUser.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(finditUser0).toString();
      serviceProviderImpl0.setAdministrator(finditUser0);
      serviceProviderImpl0.getAdministrator();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setApprovedAlarmCenters((List<String>) null);
      serviceProviderImpl0.getApprovedAlarmCentersString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setApprovedAlarmCentersString("no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.getApprovedAlarmCentersString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseRole baseRole0 = new BaseRole();
      Set<String> set0 = baseRole0.getPermissionList();
      LinkedList<String> linkedList0 = new LinkedList<String>(set0);
      linkedList0.addLast("10");
      serviceProviderImpl0.setApprovedDevices(linkedList0);
      serviceProviderImpl0.getApprovedDevices();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getBaseAccount();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setBaseUrl("");
      serviceProviderImpl0.getBaseUrl();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setBaseUrl("cassandra.cql_keyspace");
      serviceProviderImpl0.getBaseUrl();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setCssReference("");
      serviceProviderImpl0.getCssReference();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setCssReference("RnE6|*+%L=h");
      serviceProviderImpl0.getCssReference();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      MockDate mockDate0 = new MockDate((-2023L));
      serviceProviderImpl0.setDateCounted(mockDate0);
      serviceProviderImpl0.getDateCounted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDateCreated((Date) null);
      serviceProviderImpl0.getDateCreated();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = new Boolean(false);
      serviceProviderImpl0.setDeleteDeviceFromCustomer(boolean0);
      serviceProviderImpl0.getDeleteDeviceFromCustomer();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDeleteDeviceFromCustomer((Boolean) true);
      serviceProviderImpl0.getDeleteDeviceFromCustomer();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      assertFalse(serviceProviderImpl0.getDeleted());
      
      serviceProviderImpl0.setDeleted((Boolean) null);
      serviceProviderImpl0.getDeleted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      assertFalse(serviceProviderImpl0.getDeleted());
      
      serviceProviderImpl0.setDeleted((Boolean) true);
      serviceProviderImpl0.getDeleted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDeprecatedPackagesString("-*5$0FG$:`E;#EqG!*a");
      serviceProviderImpl0.getDeprecatedPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDeprecatedPackagesString((String) null);
      serviceProviderImpl0.getDeprecatedPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDomainCode("J'Q");
      serviceProviderImpl0.getDomainCode();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getDemoUser();
      serviceProviderImpl0.setExtendedActivityLoggingEnabled(boolean0);
      serviceProviderImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.TRUE;
      serviceProviderImpl0.setGoogleEnabled(boolean0);
      serviceProviderImpl0.getGoogleEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Long long0 = new Long((-1354L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, (Long) null, "cT;D>7lK4QPj");
      Long long1 = serviceProviderImpl0.getHistoryTimeToLiveDefault();
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals((-1354L), (long)long1);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Long long0 = Long.valueOf(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.getHistoryTimeToLiveDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.getHistoryTimeToLiveMaximum();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setId((Long) (-2086L));
      serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Long long0 = new Long(1717L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "87xz\u0004!}H,8J9h");
      serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setLanguage("");
      serviceProviderImpl0.getLanguage();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setLanguage("CTfG");
      serviceProviderImpl0.getLanguage();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setMessageLinkToAsset("N<mY@g'Hp$15z");
      serviceProviderImpl0.getMessageLinkToAsset();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Long long0 = new Long(70L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, long0, "CPlQ;IS2?q@.sN");
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn("").when(baseAccount0).getName();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getName();
      assertEquals(70L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Long long0 = new Long(70L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, long0, "CPlQ;IS2?q@.sN");
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn("CPlQ;IS2?q@.sN").when(baseAccount0).getName();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getName();
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(70L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Long long0 = new Long(70L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, long0, "CPlQ;IS2?q@.sN");
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(baseAccount0).getName();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getName();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(70L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setNoreplyEmail("");
      serviceProviderImpl0.getNoreplyEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Long long0 = new Long(345L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) 345L, long0, long0, "W?lBi>XZPGZ6|_@l'");
      serviceProviderImpl0.setNoreplyEmail("W?lBi>XZPGZ6|_@l'");
      serviceProviderImpl0.getNoreplyEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setPackagesString(" j'%;.");
      serviceProviderImpl0.getPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.valueOf(true);
      serviceProviderImpl0.setQqMapEnabled(boolean0);
      serviceProviderImpl0.getQqMapEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportFooterHtml("");
      serviceProviderImpl0.getReportFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportFooterHtml("E");
      serviceProviderImpl0.getReportFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportHeaderHtml("");
      serviceProviderImpl0.getReportHeaderHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportHeaderHtml("$+q;");
      serviceProviderImpl0.getReportHeaderHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setResourceId("");
      String string0 = serviceProviderImpl0.getResourceId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertNotNull(string0);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServiceIdentifier("");
      serviceProviderImpl0.getServiceIdentifier();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServiceIdentifier("nCK+T");
      serviceProviderImpl0.getServiceIdentifier();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServiceOwnerLimitation("SGB");
      serviceProviderImpl0.getServiceOwnerLimitation();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServiceOwnerLimitation((String) null);
      serviceProviderImpl0.getServiceOwnerLimitation();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServicePassword("");
      serviceProviderImpl0.getServicePassword();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServicePassword("Ko!p6&'Zj_k165tUG2q");
      serviceProviderImpl0.getServicePassword();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setSupportEmail("no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.getSupportEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setSupportEmail((String) null);
      serviceProviderImpl0.getSupportEmail();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setSupportPhoneNumber("cassandra_cql_subscription_message_ttl");
      serviceProviderImpl0.getSupportPhoneNumber();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.getTimeZone();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Long long0 = new Long(70L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, long0, "CPlQ;IS2?q@.sN");
      serviceProviderImpl0.getTimeZone();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals(70L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setUrlContextPath("");
      serviceProviderImpl0.getUrlContextPath();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setUrlContextPath("42");
      serviceProviderImpl0.getUrlContextPath();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      
      serviceProviderImpl0.setUsePublicResourcesByDefault((Boolean) true);
      serviceProviderImpl0.getUsePublicResourcesByDefault();
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long((-1998L));
      serviceProviderImpl0.setVersion(long0);
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = Long.valueOf(1637L);
      serviceProviderImpl0.setVersion(long0);
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.valueOf((String) null);
      serviceProviderImpl0.setZoneOnlyCenterInsideDefault(boolean0);
      serviceProviderImpl0.getZoneOnlyCenterInsideDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setAddress((Address) null);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = mock(BaseAccount.class, new ViolatedAssumptionAnswer());
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setName("mDU F}\"i*");
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long((-1490L));
      serviceProviderImpl0.setId(long0);
      ServiceProviderImpl serviceProviderImpl1 = new ServiceProviderImpl(long0, long0, long0, "B*7");
      serviceProviderImpl0.equals(serviceProviderImpl1);
      assertFalse(serviceProviderImpl1.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl1.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }
}
