/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 18 14:33:39 GMT 2019
 */

package no.tellu.findit.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import no.tellu.findit.cfg.Environment;
import no.tellu.findit.domain.FinditUser;
import no.tellu.findit.domain.FinditUserImpl;
import no.tellu.findit.domain.ServiceProviderImpl;
import no.tellu.security.Address;
import no.tellu.security.jpa.BaseAccount;
import no.tellu.security.jpa.BaseAddress;
import org.evosuite.runtime.mock.java.util.MockDate;

public class ServiceProviderImpl_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getSupportPhoneNumber();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getPackages();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setUsePublicResourcesByDefault((Boolean) null);
      serviceProviderImpl0.getUsePublicResourcesByDefault();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setNoreplyEmail("");
      serviceProviderImpl0.getNoreplyEmail();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAddress baseAddress0 = new BaseAddress();
      // Undeclared exception!
      try { 
        serviceProviderImpl0.setAddress(baseAddress0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportFooterHtml("no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.getReportFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDeleteDeviceFromCustomer();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getReportHeaderHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      serviceProviderImpl0.getSupportEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      serviceProviderImpl0.getTimeZone();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDeprecatedPackagesString((String) null);
      serviceProviderImpl0.getDeprecatedPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setHistoryTimeToLiveMaximum((Long) null);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Long long0 = new Long(376L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, (Long) null, long0, "fUmrS4ra#");
      serviceProviderImpl0.setServiceIdentifier("");
      serviceProviderImpl0.getServiceIdentifier();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertEquals(376L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setLanguage("N+&mgzbqC/iEC0'x.$");
      serviceProviderImpl0.getLanguage();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      serviceProviderImpl0.setResourceId("");
      String string0 = serviceProviderImpl0.getResourceId();
      assertNotNull(string0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      Boolean boolean0 = serviceProviderImpl0.getDeleted();
      assertFalse(boolean0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getActionHeaderHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      serviceProviderImpl0.getBaseUrl();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long(243L);
      serviceProviderImpl0.setHistoryTimeToLiveDefault(long0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getNoreplyEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDateCounted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Date date0 = serviceProviderImpl0.getDateCreated();
      serviceProviderImpl0.setDateCounted(date0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setMessageLinkToAsset("no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.getMessageLinkToAsset();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDomainCode();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setAdministrator((FinditUser) null);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getMessageLinkToAsset();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getUrlContextPath();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getQqMapEnabled();
      serviceProviderImpl0.setDeleted(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Long long0 = new Long((-2692L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      // Undeclared exception!
      try { 
        serviceProviderImpl0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long(0L);
      serviceProviderImpl0.setVersion(long0);
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDomainCode("");
      serviceProviderImpl0.getDomainCode();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.TRUE;
      serviceProviderImpl0.setDeleteDeviceFromCustomer(boolean0);
      serviceProviderImpl0.getDeleteDeviceFromCustomer();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getApprovedAlarmCenters();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getCssReference();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getLimitedServiceOwner();
      serviceProviderImpl0.setQqMapEnabled(boolean0);
      serviceProviderImpl0.getQqMapEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = new Boolean("");
      serviceProviderImpl0.setExtendedActivityLoggingEnabled(boolean0);
      serviceProviderImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getActionFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getLanguage();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getServiceOwnerLimitation();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getDeprecatedPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      // Undeclared exception!
      try { 
        serviceProviderImpl0.setName("4MATsEQ&=/{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getReportFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Long long0 = new Long(376L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, (Long) null, long0, "fUmrS4ra#");
      serviceProviderImpl0.getServiceIdentifier();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertEquals(376L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Long long0 = new Long(376L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, (Long) null, long0, "fUmrS4ra#");
      serviceProviderImpl0.getZoneOnlyCenterInsideDefault();
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals(376L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      // Undeclared exception!
      try { 
        serviceProviderImpl0.getAddress();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      boolean boolean0 = serviceProviderImpl0.equals(serviceProviderImpl0);
      assertTrue(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getBaseAccount();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setSupportPhoneNumber((String) null);
      serviceProviderImpl0.getSupportPhoneNumber();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getAdministrator();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      List<String> list0 = serviceProviderImpl0.getApprovedDevices();
      serviceProviderImpl0.setApprovedDevices(list0);
      serviceProviderImpl0.getApprovedDevicesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getUsePublicResourcesByDefault();
      assertFalse(boolean0);
      
      serviceProviderImpl0.setStatKartEnabled(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDateCreated((Date) null);
      serviceProviderImpl0.getDateCreated();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getServicePassword();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      String string0 = serviceProviderImpl0.getResourceId();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Environment.Application environment_Application0 = Environment.Application.WEB;
      Environment.setApplicationType(environment_Application0);
      String string0 = serviceProviderImpl0.getResourceId();
      assertNotNull(string0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      Boolean boolean0 = serviceProviderImpl0.getHideTelluBranding();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "K;AFS^q]=#w`7_G");
      Long long1 = serviceProviderImpl0.getHistoryTimeToLiveMaximum();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = serviceProviderImpl0.getHistoryTimeToLiveMaximum();
      assertEquals(90L, (long)long0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "K;AFS^q]=#w`7_G");
      Long long1 = serviceProviderImpl0.getHistoryTimeToLiveDefault();
      assertEquals(0L, (long)long1);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = serviceProviderImpl0.getHistoryTimeToLiveDefault();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals(90L, (long)long0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = serviceProviderImpl0.getStatKartEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(boolean0);
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Long long0 = new Long(2078L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "FZ;Yjx6W%9UPRq");
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      serviceProviderImpl0.setAdministrator(finditUserImpl0);
      serviceProviderImpl0.getAdministrator();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setAdministrator(finditUserImpl0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      boolean boolean0 = serviceProviderImpl0.equals((Object) null);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(boolean0);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long((-2754L));
      serviceProviderImpl0.setId(long0);
      serviceProviderImpl0.equals(serviceProviderImpl0);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long((-1L));
      ServiceProviderImpl serviceProviderImpl1 = new ServiceProviderImpl(long0, long0, long0, (String) null);
      boolean boolean0 = serviceProviderImpl0.equals(serviceProviderImpl1);
      assertFalse(serviceProviderImpl1.getDeleted());
      assertFalse(serviceProviderImpl1.getUsePublicResourcesByDefault());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Long long0 = new Long(1000L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.hashCode();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.hashCode();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getApprovedDevicesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getPackagesString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setPackagesString("findit.ajax.refresh.rate.alarms");
      serviceProviderImpl0.getPackagesString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.getApprovedAlarmCentersString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionFooterHtml("");
      serviceProviderImpl0.getActionFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionFooterHtml("storage.statistic.ttl");
      serviceProviderImpl0.getActionFooterHtml();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionHeaderHtml("");
      serviceProviderImpl0.getActionHeaderHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setActionHeaderHtml("jyCN&`{(2M");
      serviceProviderImpl0.getActionHeaderHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      BaseAccount baseAccount0 = new BaseAccount();
      BaseAddress baseAddress0 = new BaseAddress();
      baseAccount0.setAddress(baseAddress0);
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getAddress();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getAddress();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("\"[% _\"`G1mxuWXmv,");
      serviceProviderImpl0.setApprovedAlarmCenters(linkedList0);
      serviceProviderImpl0.getApprovedAlarmCenters();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setApprovedAlarmCentersString("");
      serviceProviderImpl0.getApprovedAlarmCentersString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setApprovedAlarmCentersString("jKKCk4+ZgPUE2");
      serviceProviderImpl0.getApprovedAlarmCentersString();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "K;AFS^q]=#w`7_G");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("ypD{rD(O#pK4BGb&-");
      serviceProviderImpl0.setApprovedDevices(linkedList0);
      serviceProviderImpl0.getApprovedDevices();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "dy~vvpK2l5k");
      serviceProviderImpl0.setApprovedDevicesString("18446744073709550164");
      serviceProviderImpl0.getApprovedDevicesString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getBaseAccount();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Long long0 = new Long(90L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.setBaseUrl("");
      serviceProviderImpl0.getBaseUrl();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Long long0 = new Long(24L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.setBaseUrl(">~9gLE!.e>mT0&u4X");
      serviceProviderImpl0.getBaseUrl();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setCssReference("");
      serviceProviderImpl0.getCssReference();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setCssReference("i4}hG28L9D");
      serviceProviderImpl0.getCssReference();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      MockDate mockDate0 = new MockDate(2880L);
      serviceProviderImpl0.setDateCounted(mockDate0);
      serviceProviderImpl0.getDateCounted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getSuperUser();
      serviceProviderImpl0.setDeleteDeviceFromCustomer(boolean0);
      serviceProviderImpl0.getDeleteDeviceFromCustomer();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      assertFalse(serviceProviderImpl0.getDeleted());
      
      serviceProviderImpl0.setDeleted((Boolean) null);
      serviceProviderImpl0.getDeleted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      assertFalse(serviceProviderImpl0.getDeleted());
      
      Boolean boolean0 = Boolean.TRUE;
      serviceProviderImpl0.setDeleted(boolean0);
      serviceProviderImpl0.getDeleted();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, (Long) null, long0, "1=*5tJsM");
      serviceProviderImpl0.setDeprecatedPackagesString("no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.getDeprecatedPackagesString();
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertEquals(0L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setDomainCode("@nvd");
      serviceProviderImpl0.getDomainCode();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = new Boolean(true);
      serviceProviderImpl0.setExtendedActivityLoggingEnabled(boolean0);
      serviceProviderImpl0.getExtendedActivityLoggingEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = new Boolean(true);
      serviceProviderImpl0.setGoogleEnabled(boolean0);
      serviceProviderImpl0.getGoogleEnabled();
      assertTrue(serviceProviderImpl0.getGoogleEnabled());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      Boolean boolean0 = Boolean.TRUE;
      serviceProviderImpl0.setHideTelluBranding(boolean0);
      serviceProviderImpl0.getHideTelluBranding();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Long long0 = new Long((-1393L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.getHistoryTimeToLiveDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Long long0 = new Long((-1163L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, long0, "~Xhq-(=k4Ej]c");
      Long long1 = serviceProviderImpl0.getHistoryTimeToLiveMaximum();
      assertEquals((-1163L), (long)long1);
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Long long0 = new Long((-1L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, (Long) null, (String) null);
      Long long1 = serviceProviderImpl0.getId();
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals((-1L), (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertNotNull(long1);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Long long0 = new Long(100L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, (Long) null, "");
      Long long1 = serviceProviderImpl0.getId();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
      assertNotNull(long1);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertEquals(0L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Long long0 = new Long(2034L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.setLanguage("");
      serviceProviderImpl0.getLanguage();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setMessageLinkToAsset("");
      serviceProviderImpl0.getMessageLinkToAsset();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Long long0 = new Long((-2692L));
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      BaseAccount baseAccount0 = new BaseAccount();
      baseAccount0.setName("");
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getName();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      baseAccount0.setName("{=T:^Gj~o[)Z");
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getName();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Long long0 = new Long(24L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.getName();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setNoreplyEmail("YdOjMoor.");
      serviceProviderImpl0.getNoreplyEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("|$5K>_@b");
      serviceProviderImpl0.setPackages(linkedList0);
      serviceProviderImpl0.getPackages();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      serviceProviderImpl0.setPackagesString((String) null);
      serviceProviderImpl0.getPackagesString();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Boolean boolean0 = Boolean.valueOf(true);
      serviceProviderImpl0.setQqMapEnabled(boolean0);
      serviceProviderImpl0.getQqMapEnabled();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportFooterHtml("");
      serviceProviderImpl0.getReportFooterHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportHeaderHtml("");
      serviceProviderImpl0.getReportHeaderHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setReportHeaderHtml("w>6Ung_z/hxzMfxHg");
      serviceProviderImpl0.getReportHeaderHtml();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServiceIdentifier("Configuration reload: ");
      serviceProviderImpl0.getServiceIdentifier();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, (Long) null, long0, "1=*5tJsM");
      serviceProviderImpl0.setServiceOwnerLimitation("1=*5tJsM");
      serviceProviderImpl0.getServiceOwnerLimitation();
      assertEquals(90L, (long)serviceProviderImpl0.getHistoryTimeToLiveDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertEquals(0L, (long)serviceProviderImpl0.getHistoryTimeToLiveMaximum());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServiceOwnerLimitation((String) null);
      serviceProviderImpl0.getServiceOwnerLimitation();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Long long0 = new Long(0L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "no.tellu.findit.domain.ServiceProviderImpl");
      serviceProviderImpl0.setServicePassword("");
      serviceProviderImpl0.getServicePassword();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setServicePassword("findit.lable.rule.not_configured");
      serviceProviderImpl0.getServicePassword();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      Boolean boolean0 = Boolean.TRUE;
      serviceProviderImpl0.setStatKartEnabled(boolean0);
      serviceProviderImpl0.getStatKartEnabled();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setSupportEmail("fO#c)I6uTU2*6ieV.");
      serviceProviderImpl0.getSupportEmail();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      serviceProviderImpl0.setSupportEmail((String) null);
      serviceProviderImpl0.getSupportEmail();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setSupportPhoneNumber("findit.hibernate.cfg");
      serviceProviderImpl0.getSupportPhoneNumber();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Long long0 = new Long(2034L);
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl(long0, long0, long0, "");
      serviceProviderImpl0.getTimeZone();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setTimeZone("Cr@zTt;V@x&T?Qb|P(c");
      serviceProviderImpl0.getTimeZone();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setUrlContextPath("");
      serviceProviderImpl0.getUrlContextPath();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      serviceProviderImpl0.setUrlContextPath("qSSX");
      serviceProviderImpl0.getUrlContextPath();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      
      Boolean boolean0 = new Boolean(true);
      serviceProviderImpl0.setUsePublicResourcesByDefault(boolean0);
      serviceProviderImpl0.getUsePublicResourcesByDefault();
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = Long.valueOf((-1490L));
      serviceProviderImpl0.setVersion(long0);
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      Long long0 = new Long(14L);
      serviceProviderImpl0.setVersion(long0);
      serviceProviderImpl0.getVersion();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl((Long) null, (Long) null, (Long) null, (String) null);
      Boolean boolean0 = serviceProviderImpl0.getGoogleEnabled();
      serviceProviderImpl0.setZoneOnlyCenterInsideDefault(boolean0);
      Boolean boolean1 = serviceProviderImpl0.getZoneOnlyCenterInsideDefault();
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      FinditUserImpl finditUserImpl0 = new FinditUserImpl();
      Boolean boolean0 = finditUserImpl0.getNotificationsEnabled();
      serviceProviderImpl0.setZoneOnlyCenterInsideDefault(boolean0);
      serviceProviderImpl0.getZoneOnlyCenterInsideDefault();
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setAddress((Address) null);
      assertFalse(serviceProviderImpl0.getDeleted());
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      BaseAccount baseAccount0 = new BaseAccount();
      serviceProviderImpl0.setBaseAccount(baseAccount0);
      serviceProviderImpl0.setName((String) null);
      assertFalse(serviceProviderImpl0.getUsePublicResourcesByDefault());
      assertFalse(serviceProviderImpl0.getDeleted());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ServiceProviderImpl serviceProviderImpl0 = new ServiceProviderImpl();
      ServiceProviderImpl serviceProviderImpl1 = new ServiceProviderImpl();
      Long long0 = new Long((-2754L));
      serviceProviderImpl1.setId(long0);
      boolean boolean0 = serviceProviderImpl1.equals(serviceProviderImpl0);
      assertFalse(serviceProviderImpl1.equals((Object)serviceProviderImpl0));
      assertFalse(boolean0);
  }
}
