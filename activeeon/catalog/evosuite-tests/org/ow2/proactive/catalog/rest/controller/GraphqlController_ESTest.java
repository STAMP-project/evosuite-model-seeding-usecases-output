/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 13:05:19 GMT 2019
 */

package org.ow2.proactive.catalog.rest.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Map;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.ow2.proactive.catalog.rest.controller.GraphqlController;
import org.ow2.proactive.catalog.service.GraphqlService;

public class GraphqlController_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GraphqlController graphqlController0 = new GraphqlController();
      String string0 = graphqlController0.graphiql();
      assertEquals("/index.html", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GraphqlController graphqlController0 = new GraphqlController();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("variables", graphqlController0);
      // Undeclared exception!
      try { 
        graphqlController0.executeOperation("query={}, operationName={}, variables={}", hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.ow2.proactive.catalog.rest.controller.GraphqlController cannot be cast to java.util.Map
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GraphqlController graphqlController0 = new GraphqlController();
      GraphqlService graphqlService0 = mock(GraphqlService.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(graphqlService0).executeQuery(anyString() , anyString() , any() , anyMap());
      Injector.inject(graphqlController0, (Class<?>) GraphqlController.class, "graphqlService", (Object) graphqlService0);
      Injector.validateBean(graphqlController0, (Class<?>) GraphqlController.class);
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      Map<String, Object> map0 = graphqlController0.executeOperation("i-7HDP O[(9*+S", hashtable0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GraphqlController graphqlController0 = new GraphqlController();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("query", "query");
      // Undeclared exception!
      try { 
        graphqlController0.executeOperation("ISDIRECTORY", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
