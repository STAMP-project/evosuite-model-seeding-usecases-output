/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 18 12:45:45 GMT 2019
 */

package no.tellu.lib.data;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import no.tellu.lib.data.BooleanOp;
import no.tellu.lib.data.DataGroupNode;
import no.tellu.lib.data.DataNode;
import no.tellu.lib.data.DataPath;
import no.tellu.lib.data.DataPredicate;
import no.tellu.lib.data.DataValueNode;
import no.tellu.lib.data.MetaGroupNode;
import no.tellu.lib.data.MetaItemNode;
import no.tellu.lib.data.MetaNode;
import no.tellu.lib.data.MetaNumberNode;
import no.tellu.lib.data.SetDefaultTrav;
import org.evosuite.runtime.ViolatedAssumptionAnswer;

public class DataGroupNode_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaNumberNode0.validator = metaItemNode_DataValidator0;
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath2 = dataPath1.clonePath();
      dataPath2.getFrontPredicate();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath2);
      dataGroupNode1.removeNodes("G%8188>RH40%%*j)", (DataPredicate) null);
      dataGroupNode0.getChildNode(0);
      assertTrue(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNodl");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      dataGroupNode0.childNodes("dVd?F[");
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      DataPredicate dataPredicate2 = dataPredicate1.clonePredicate();
      dataGroupNode0.getChildNodes((String) null, dataPredicate2);
      dataGroupNode0.childNodes();
      dataGroupNode0.removeNodes((String) null, dataPredicate1, false);
      assertFalse(dataPredicate1.equals((Object)dataPredicate2));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("8");
      Object object0 = new Object();
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, object0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      boolean boolean0 = false;
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("8");
      dataPath0.clonePath();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath0);
      // Undeclared exception!
      try { 
        dataGroupNode0.cloneNode((String) null, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      boolean boolean0 = dataGroupNode0.contains(dataPredicate0);
      assertFalse(boolean0);
      
      int int0 = dataGroupNode0.childNodes("");
      assertEquals(0, int0);
      
      List<DataNode> list0 = dataGroupNode0.getNodes("");
      assertTrue(list0.isEmpty());
      
      dataGroupNode0.setModified(false);
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, "Attempt to modify read-only DataNodl");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.getNodes((String) null);
      DataNode dataNode0 = dataGroupNode0.cloneNode("Only nodes named by meta-data are allowed", true, true);
      assertEquals("Only nodes named by meta-data are allowed", dataNode0.getName());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.isValid();
      DataPredicate dataPredicate2 = new DataPredicate();
      DataPredicate dataPredicate3 = dataPredicate2.clonePredicate();
      DataValueNode dataValueNode0 = new DataValueNode("Attempt to set value in group node", dataPredicate2);
      dataPredicate1.evaluate(dataValueNode0);
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate3);
      dataGroupNode1.removeNodes("m", (DataPredicate) null);
      // Undeclared exception!
      try { 
        dataGroupNode1.addNode((DataNode) dataGroupNode0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      assertNotNull(dataGroupNode1);
      
      dataGroupNode1.setMetaNode(metaGroupNode0);
      dataGroupNode1.isValid();
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("sgb&@IP-oU9~D:e", 3, true, false);
      MetaGroupNode metaGroupNode2 = new MetaGroupNode(",6m>3", 2);
      metaGroupNode2.putNode(metaGroupNode0);
      DataGroupNode dataGroupNode2 = metaGroupNode0.createData(false);
      List<DataNode> list0 = dataGroupNode2.getNodes("XS=x");
      DataPath dataPath0 = new DataPath("");
      dataPath0.clonePath();
      DataPath dataPath1 = new DataPath("sgb&@IP-oU9~D:e");
      dataPath1.clonePath();
      dataGroupNode2.getNodes(list0, dataPath0);
      dataGroupNode1.setModified(true);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      dataGroupNode1.removeNodes("XS=x", dataPredicate0);
      assertTrue(dataGroupNode1.isModified());
      
      DataGroupNode dataGroupNode3 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode3.setMetaImpl(metaGroupNode2);
      assertTrue(dataGroupNode3.isModified());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      // Undeclared exception!
      try { 
        dataGroupNode1.updateModified();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      List<DataNode> list0 = dataGroupNode1.getNodes("qU9(=`T");
      DataPath dataPath0 = new DataPath("no.tellu.lib.data.TransactionException");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.clonePath();
      dataGroupNode0.getNodes(list0, dataPath1);
      assertTrue(list0.isEmpty());
      
      DataPredicate dataPredicate0 = new DataPredicate("qU9(=`T");
      dataGroupNode0.removeNodes((String) null, dataPredicate0, false);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      assertNotNull(dataGroupNode1);
      
      boolean boolean0 = dataGroupNode1.isValid();
      assertTrue(boolean0);
      
      DataGroupNode dataGroupNode2 = dataGroupNode0.getGroupNode((String) null);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Less", dataGroupNode2, (-329.61), 0.0);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, metaNumberNode0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      dataValueNode0.cloneNode("sgb&@IP-oU9~D:e", false, true);
      assertNotSame(dataGroupNode0, dataGroupNode1);
      
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      boolean boolean1 = dataGroupNode2.process(setDefaultTrav0);
      DataGroupNode dataGroupNode3 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      DataPredicate dataPredicate2 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate3 = new DataPredicate();
      boolean boolean2 = dataGroupNode3.contains(dataPredicate3);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.removeNodes("", dataPredicate0);
      assertEquals((-1), dataPredicate0.getIndex());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(true);
      dataGroupNode0.toString();
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = new DataPredicate();
      dataGroupNode1.isValid();
      List<DataNode> list0 = dataGroupNode0.getNodes("sgb&@IP-oU9~D:e[0]");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataPredicate1.reset();
      dataPredicate0.getFrontPathName();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("xC;uJ^%RL#");
      MetaItemNode metaItemNode0 = new MetaItemNode("xC;uJ^%RL#", ",6m>3");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      List<DataNode> list0 = dataGroupNode0.getNodes("xC;uJ^%RL#");
      assertEquals(1, list0.size());
      
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode1);
      DataGroupNode dataGroupNode2 = new DataGroupNode("xC;uJ^%RL#");
      dataGroupNode2.setModified(false);
      assertFalse(dataGroupNode2.isModified());
      
      boolean boolean0 = dataGroupNode0.contains(dataPredicate0);
      assertFalse(boolean0);
      
      dataGroupNode1.removeNodes("xC;uJ^%RL#", dataPredicate1);
      dataGroupNode0.getChildNode((-1955268608));
      dataGroupNode0.getValueNode(")@B,FE#g]o.m:?-_M");
      assertEquals(1, dataGroupNode0.childNodes());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaNumberNode0.validator = metaItemNode_DataValidator0;
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataPredicate1.evaluate(dataValueNode0);
      dataGroupNode1.removeNodes("no.tellu.lib.data.MetaNumberNode", dataPredicate1);
      dataGroupNode1.removeNodes("", dataPredicate1);
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaNumberNode0.validator = metaItemNode_DataValidator0;
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath2 = dataPath1.clonePath();
      dataPath2.getFrontPredicate();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath2);
      // Undeclared exception!
      try { 
        dataGroupNode1.cloneNode("", false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Only nodes named by meta-data are allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataValueNode dataValueNode0 = new DataValueNode("/");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      metaGroupNode0.getNode("G%8188>RH40%%*j)");
      dataGroupNode1.setMetaNode((MetaNode) null);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = new DataPredicate();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("[T|U)a");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      boolean boolean0 = dataGroupNode0.process(setDefaultTrav0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.updateModified();
      DataPredicate dataPredicate0 = new DataPredicate();
      DataValueNode dataValueNode0 = new DataValueNode("}8$S:[", "}8$S:[");
      dataPredicate0.evaluate(dataValueNode0);
      dataGroupNode0.removeNodes("}8$S:[", dataPredicate0);
      int int0 = dataGroupNode0.childNodes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      DataPath dataPath1 = dataPath0.clonePath();
      DataPath dataPath2 = dataPath0.clonePath();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath1);
      DataPredicate dataPredicate0 = new DataPredicate("B(NBX");
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath2);
      assertEquals(0, linkedList0.size());
      
      DataPredicate dataPredicate1 = new DataPredicate("Attempt to modify read-only DataNode");
      dataGroupNode0.removeNodes("%TrC#+", dataPredicate1, false);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
      
      List<DataNode> list0 = dataGroupNode0.getChildNodes((String) null, dataPredicate0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.setMetaNode(metaGroupNode0);
      dataGroupNode1.isValid();
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      DataValueNode dataValueNode0 = new DataValueNode("sgb&@IP-oU9~D:e", dataPredicate0);
      DataPath dataPath0 = new DataPath(",6m");
      dataPath0.getFrontPredicate();
      List<DataNode> list0 = dataGroupNode0.getChildNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      dataGroupNode0.getNodes(list0, dataPath0);
      dataGroupNode0.cloneNode("sgb&@IP-oU9~D:e", true, true);
      dataGroupNode0.getMetaNode();
      dataGroupNode0.addNode((DataNode) dataValueNode0);
      dataGroupNode1.childNodes();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("YIxwYbl,$JxV");
      MetaItemNode metaItemNode0 = new MetaItemNode("YIxwYbl,$JxV", metaGroupNode0);
      MetaGroupNode metaGroupNode2 = new MetaGroupNode("YIxwYbl,$JxV", (-1997067777));
      metaGroupNode2.putNode(metaGroupNode1);
      DataGroupNode dataGroupNode0 = metaGroupNode2.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      Integer.getInteger("HA5)avXE");
      DataValueNode dataValueNode0 = new DataValueNode((String) null, "Attempt to modify read-only DataNode");
      DataPath dataPath0 = new DataPath("YIxwYbl,$JxV");
      DataPredicate dataPredicate2 = new DataPredicate();
      dataGroupNode0.removeNodes("HA5)avXE/9x", dataPredicate1, false);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.childNodes("");
      dataGroupNode2.removeNodes("", dataPredicate0);
      assertEquals("", dataGroupNode2.getName());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.getParentPath();
      // Undeclared exception!
      try { 
        dataGroupNode0.getNodes((List<DataNode>) linkedList0, (DataPath) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Attempt to modify read-only DataNode");
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.clonePredicate();
      Integer.getInteger("Attempt to modify read-only DataNode");
      DataValueNode dataValueNode0 = new DataValueNode("Attempt to modify read-only DataNode", (Object) null);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
      
      dataGroupNode0.setModified(true);
      DataGroupNode dataGroupNode1 = (DataGroupNode)dataGroupNode0.cloneNode((String) null, true, true);
      dataGroupNode0.childNodes("true");
      List<DataNode> list0 = dataGroupNode1.getNodes("true");
      assertEquals("Attempt to modify read-only DataNode", dataGroupNode1.getName());
      assertEquals(1, dataGroupNode1.childNodes());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "qU9(=`T");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.reset();
      boolean boolean0 = dataGroupNode0.isValid();
      assertFalse(boolean0);
      
      List<DataNode> list0 = dataGroupNode0.getNodes((String) null);
      assertEquals(0, list0.size());
      
      dataGroupNode1.getChildNodes((String) null, (DataPredicate) null);
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("/", metaGroupNode0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      metaGroupNode0.createData(dataGroupNode0, true);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaItemNode0.setValidator(metaItemNode_DataValidator0);
      dataGroupNode0.cloneNode("5[b[ VhfJG", true, false);
      // Undeclared exception!
      try { 
        dataGroupNode0.isValid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataGroupNode dataGroupNode2 = new DataGroupNode("");
      DataGroupNode dataGroupNode3 = dataGroupNode1.addNodeRaw(dataGroupNode2);
      assertSame(dataGroupNode3, dataGroupNode1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.setMetaNode(metaGroupNode0);
      dataGroupNode1.isValid();
      DataPredicate dataPredicate0 = new DataPredicate();
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.updateModified();
      DataPredicate dataPredicate1 = new DataPredicate("sgb&@IP-oU9~D:e");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("sgb&@IP-oU9~D:e", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode("Greater", metaNumberNode0);
      DataValueNode dataValueNode1 = new DataValueNode("sgb&@IP-oU9~D:e", dataGroupNode1);
      dataPredicate0.evaluate(dataValueNode1);
      dataPredicate0.clonePredicate();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode2, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      DataValueNode dataValueNode0 = new DataValueNode("/");
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      DataPredicate dataPredicate0 = new DataPredicate("qU9(=`T");
      dataGroupNode1.getChildNodes("/", dataPredicate0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      DataPredicate dataPredicate1 = new DataPredicate();
      dataGroupNode1.removeNodes("/", dataPredicate0, true);
      dataGroupNode0.isValid();
      dataGroupNode0.getChildNodes("qU9(=`T", dataPredicate0);
      dataGroupNode1.addNodeRaw(dataValueNode0);
      int int0 = dataGroupNode1.childNodes((String) null);
      assertEquals(2, dataGroupNode1.childNodes());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = new DataPredicate();
      MetaItemNode metaItemNode0 = new MetaItemNode("A)'bZbst~|2uaWpo7", "A)'bZbst~|2uaWpo7");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Can't set MetaNode on DataNode with different name", 2, false, false);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      metaGroupNode1.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPredicate dataPredicate2 = new DataPredicate("B(NBX");
      DataGroupNode dataGroupNode1 = new DataGroupNode("Can't set MetaNode on DataNode with different name");
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Only nodes named by meta-data are allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Data type is incompatible", (-1996169378), false, false);
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("}YC2XQ*#:t B+VurL`", (Object) null, 0.0, (-570.59166445511));
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, metaGroupNode0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      DataPath dataPath0 = new DataPath("DataHandle doesn't support Subscribers");
      dataPath0.clonePath();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.getFrontPredicate();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath1);
      DataNode dataNode0 = dataGroupNode1.cloneNode("DataHandle doesn't support Subscribers", false, false);
      dataGroupNode2.getMetaNode();
      DataGroupNode dataGroupNode3 = new DataGroupNode(metaGroupNode0);
      // Undeclared exception!
      try { 
        dataGroupNode3.addNode(dataNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Only nodes named by meta-data are allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3");
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode1.removeNodes("no.tellu.lib.data.MetaItemNode", dataPredicate0);
      metaGroupNode0.createData(dataGroupNode1, false);
      DataPredicate dataPredicate2 = new DataPredicate("no.tellu.lib.data.MetaItemNode");
      dataPredicate2.clonePredicate();
      dataGroupNode1.setModified(false);
      dataGroupNode1.contains(dataPredicate1);
      dataGroupNode1.removeNodes("d\"-PfNKj", (DataPredicate) null);
      DataNode dataNode0 = dataGroupNode0.getChildNode(1);
      assertNull(dataNode0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataPredicate1.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("xC;uJ^%RL#");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataValueNode dataValueNode0 = new DataValueNode("xC;uJ^%RL#", metaGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode1.process(setDefaultTrav0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode1.childNodes("mJ_");
      List<DataNode> list0 = dataGroupNode2.childNodes;
      dataGroupNode1.process(setDefaultTrav0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.childNodes((String) null);
      List<DataNode> list0 = new LinkedList<DataNode>();
      dataGroupNode0.getValueNode((String) null);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      assertEquals("", dataGroupNode1.getName());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.childNodes("");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("", 929);
      dataGroupNode0.modified = false;
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(true);
      dataGroupNode1.getNodes("");
      DataPath dataPath0 = new DataPath(",6m>3");
      dataPath0.clonePath();
      DataPredicate dataPredicate1 = new DataPredicate();
      DataPredicate dataPredicate2 = dataPredicate1.clonePredicate();
      dataGroupNode1.getValueNode("}`T8t<gwC");
      dataPredicate2.evaluate((DataValueNode) null);
      dataGroupNode0.removeNodes("x9B55:,N~", dataPredicate1);
      DataPredicate dataPredicate3 = dataPredicate2.clonePredicate();
      dataGroupNode1.removeNodes("", dataPredicate3);
      dataGroupNode1.addNode((DataNode) dataGroupNode0, true);
      assertTrue(dataGroupNode0.isModified());
      assertTrue(dataGroupNode1.isModified());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      boolean boolean0 = dataGroupNode1.process(setDefaultTrav0);
      assertTrue(boolean0);
      
      DataValueNode dataValueNode0 = new DataValueNode("");
      setDefaultTrav0.processItem(dataValueNode0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      int int0 = dataGroupNode2.childNodes("");
      assertEquals(1, int0);
      
      List<DataNode> list0 = dataGroupNode2.getNodes("");
      assertEquals(0, list0.size());
      
      dataGroupNode0.process(setDefaultTrav0);
      DataGroupNode dataGroupNode3 = (DataGroupNode)dataGroupNode0.cloneNode("", true, false);
      assertEquals(0, dataGroupNode3.childNodes());
      assertEquals("", dataGroupNode3.getName());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.clonePredicate();
      Integer.getInteger((String) null);
      DataValueNode dataValueNode0 = new DataValueNode((String) null, (Object) null);
      dataGroupNode0.isValid();
      dataGroupNode0.setModified(true);
      dataGroupNode0.cloneNode((String) null, true, false);
      int int0 = dataGroupNode0.childNodes("true");
      assertTrue(dataGroupNode0.isModified());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("/", metaGroupNode0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      metaGroupNode0.createData(dataGroupNode0, true);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaItemNode0.setValidator(metaItemNode_DataValidator0);
      metaGroupNode0.createData(dataGroupNode0, false);
      dataGroupNode0.cloneNode("5[b[ VhfJG", true, false);
      // Undeclared exception!
      try { 
        dataGroupNode0.isValid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("G%8188>RH40%%*j)", 0, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", (Object) null, 2, 2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode1.childNodes("");
      dataGroupNode0.getNodes("AM;8vO2 t#560$i");
      // Undeclared exception!
      try { 
        dataGroupNode0.isValid();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.DataGroupNode cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate("");
      DataGroupNode dataGroupNode2 = new DataGroupNode("");
      dataGroupNode2.getGroupNode("");
      dataGroupNode1.isValid();
      List<DataNode> list0 = dataGroupNode0.getNodes("");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaNumberNode0.validator = metaItemNode_DataValidator0;
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath2 = dataPath1.clonePath();
      DataPath dataPath3 = new DataPath("G%8188>RH40%%*j)");
      LinkedList<DataNode> linkedList1 = new LinkedList<DataNode>();
      dataGroupNode0.getNodes((List<DataNode>) linkedList1, dataPath2);
      dataGroupNode0.cloneNode("0c2", true, true);
      dataGroupNode0.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.removeNodes((String) null, dataPredicate0, false);
      assertNull(dataGroupNode0.getName());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = null;
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      boolean boolean0 = false;
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      dataPath0.clonePath();
      dataPath0.clonePath();
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      // Undeclared exception!
      try { 
        dataGroupNode1.addNode((DataNode) dataGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      metaGroupNode0.putNode(metaItemNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("sMS.aZ");
      DataPath dataPath1 = new DataPath("sMS.aZ");
      dataPath1.clonePath();
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath0);
      boolean boolean0 = false;
      DataNode dataNode0 = dataGroupNode0.cloneNode("qU9(=`T", false, false);
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode0);
      DataGroupNode dataGroupNode2 = new DataGroupNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode(dataNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to set value in group node
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      boolean boolean0 = true;
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = new DataPredicate();
      dataPredicate1.reset();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataValueNode dataValueNode0 = new DataValueNode("&Fx<cy4.j");
      dataValueNode0.getGroupNode("wa!");
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.getFrontPathName();
      dataGroupNode0.removeNodes("G%8188>RH40%%*j)", dataPredicate0);
      dataGroupNode0.getChildNode((-770));
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("HW;RyKIoV");
      assertNull(dataGroupNode1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("no.tellu.lib.data.DataPath", (-1810567905), true, true);
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode0);
      dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode1.updateModified();
      DataPredicate dataPredicate0 = new DataPredicate("");
      DataValueNode dataValueNode0 = new DataValueNode("rFjH@", (Object) null);
      dataPredicate0.evaluate(dataValueNode0);
      dataPredicate0.clonePredicate();
      DataGroupNode dataGroupNode2 = new DataGroupNode(metaGroupNode0);
      dataGroupNode2.addNode((DataNode) dataGroupNode0, true);
      assertTrue(dataGroupNode2.isModified());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      dataGroupNode0.clearModified();
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      boolean boolean0 = dataGroupNode1.isValid();
      assertTrue(boolean0);
      
      DataGroupNode dataGroupNode2 = dataGroupNode0.getGroupNode((String) null);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Less", dataGroupNode2, (-329.61), 0.0);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, metaNumberNode0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      dataValueNode0.cloneNode("sgb&@IP-oU9~D:e", false, true);
      DataPredicate dataPredicate2 = dataPredicate0.clonePredicate();
      Integer integer0 = new Integer((-3235));
      MetaGroupNode metaGroupNode1 = new MetaGroupNode((String) null, 1978);
      DataValueNode dataValueNode1 = new DataValueNode("Less", metaGroupNode1);
      dataGroupNode1.removeNodes("sgb&@IP-oU9~D:e", dataPredicate2);
      dataGroupNode2.addNodeRaw(dataGroupNode1);
      DataNode dataNode0 = dataGroupNode2.getChildNode(1);
      assertFalse(dataGroupNode2.isModified());
      assertNotNull(dataNode0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.reset();
      dataPredicate0.clonePredicate();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaGroupNode metaGroupNode1 = new MetaGroupNode((String) null, 6, true, false);
      MetaItemNode metaItemNode0 = new MetaItemNode("Gh", metaItemNode_DataType0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaItemNode0.setValidator(metaItemNode_DataValidator0);
      metaGroupNode1.putNode(metaGroupNode0);
      MetaGroupNode metaGroupNode2 = metaGroupNode0.putNode(metaGroupNode1);
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode2);
      dataGroupNode0.removeNodes("Gh", dataPredicate0, true);
      dataGroupNode0.isValid();
      dataGroupNode0.updateModified();
      List<DataNode> list0 = dataGroupNode1.getChildNodes("}YC2XQ*#:t B+VurL`", dataPredicate0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("G%8188>RH40%%*j)", 0, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", (Object) null, 2, 2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      metaGroupNode1.createData(false);
      dataGroupNode0.childNodes("G%8188>RH40%%*j)");
      metaGroupNode1.createData(false);
      // Undeclared exception!
      try { 
        dataGroupNode1.setMetaNode(metaGroupNode1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Only nodes named by meta-data are allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("}-", 1, false, false);
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataValueNode dataValueNode0 = dataGroupNode0.getValueNode("}-");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("[");
      DataNode dataNode0 = dataGroupNode0.getChildNode(0);
      assertNull(dataNode0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      dataGroupNode1.getNodes("qU9(=`T");
      DataPath dataPath0 = new DataPath("no.tellu.lib.data.TransactionException");
      dataPath0.clonePath();
      DataValueNode dataValueNode0 = new DataValueNode("Nd53\u0005TlN");
      dataValueNode0.cloneNode("w<\"[38[P.*5l|g", true, false);
      DataGroupNode dataGroupNode2 = new DataGroupNode((String) null);
      DataGroupNode dataGroupNode3 = dataGroupNode2.addNodeRaw(dataGroupNode0);
      dataGroupNode3.getNodes("w<\"[38[P.*5l|g");
      DataGroupNode dataGroupNode4 = new DataGroupNode("");
      dataGroupNode4.childNodes("w<\"[38[P.*5l|g");
      dataGroupNode2.getNodes("Attempt to set value in group node");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode4.process(setDefaultTrav0);
      // Undeclared exception!
      try { 
        dataGroupNode3.setMetaImpl(metaGroupNode1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3");
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      String string0 = "no.tellu.lib.data.MetaItemNode";
      dataPredicate0.reset();
      dataGroupNode0.removeNodes("no.tellu.lib.data.MetaItemNode", dataPredicate0);
      metaGroupNode0.createData(dataGroupNode0, false);
      dataGroupNode0.getGroupNode("`vs7^fGH<p");
      dataGroupNode0.isValid();
      dataGroupNode0.getGroupNode((String) null);
      dataGroupNode0.getMetaNode();
      DataPredicate dataPredicate2 = new DataPredicate();
      dataGroupNode0.removeNodes(",6m>3", dataPredicate1, true);
      dataGroupNode0.getHandle();
      dataGroupNode0.setMetaNode(metaGroupNode0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaItemNode metaItemNode0 = new MetaItemNode(",6m>3", metaItemNode_DataType0);
      MetaNumberNode metaNumberNode0 = null;
      try {
        metaNumberNode0 = new MetaNumberNode("x9B55:,N~", "7w&u", Double.NaN, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MetaNumberNode must have numeric DataType
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("DataHandle node is DataGroupNode");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataPredicate0.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("");
      MetaItemNode metaItemNode0 = new MetaItemNode("G%8188>RH40%%*j)", (Object) null);
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("s&]x}ZQGY[rx", (-1982925801), false, false);
      MetaGroupNode metaGroupNode2 = metaGroupNode1.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode2.createData(false);
      List<DataNode> list0 = dataGroupNode0.getNodes("s&]x}ZQGY[rx");
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      metaGroupNode2.findNode(dataPath1);
      DataPath dataPath2 = new DataPath("s&]x}ZQGY[rx");
      dataPath2.clonePath();
      dataPath2.clonePath();
      dataGroupNode0.getNodes(list0, dataPath2);
      DataValueNode dataValueNode0 = new DataValueNode("no.tellu.lib.data.MetaItemNode$DataType", (Object) null);
      DataValueNode dataValueNode1 = new DataValueNode("", "");
      dataPredicate1.evaluate(dataValueNode0);
      dataPredicate1.clonePredicate();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataValueNode1, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Only nodes named by meta-data are allowed
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 347, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.clonePredicate();
      DataValueNode dataValueNode0 = new DataValueNode("G%8188>RH40%%*j)", "\"8@{q^Ob'r3G~");
      dataPredicate0.evaluate(dataValueNode0);
      dataPredicate0.clonePredicate();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataValueNode0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("?top)#A%p(]s}5C", metaGroupNode0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      dataGroupNode0.getNodes("V\"{p-^B7");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode0.process(setDefaultTrav0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      DataNode dataNode0 = dataValueNode0.cloneNode("Attempt to modify read-only DataNode", true, false);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataNode0);
      dataGroupNode0.childNodes("DataHandle doesn't support Subscribers");
      dataGroupNode1.getNodes("Attempt to modify read-only DataNode");
      assertEquals(2, dataGroupNode0.childNodes());
      
      dataGroupNode0.process(setDefaultTrav0);
      dataGroupNode1.updateModified();
      dataGroupNode1.getValueNode("?top)#A%p(]s}5C");
      assertEquals(1, dataGroupNode0.childNodes());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataPredicate1.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("xC;uJ^%RL#");
      MetaItemNode metaItemNode0 = new MetaItemNode("mJ_", ",6m>3");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      List<DataNode> list0 = dataGroupNode0.getNodes("mJ_");
      DataPath dataPath0 = new DataPath("xC;uJ^%RL#");
      DataPath dataPath1 = new DataPath("xC;uJ^%RL#");
      dataPath1.clonePath();
      dataGroupNode0.getNodes(list0, dataPath0);
      assertFalse(list0.isEmpty());
      
      dataGroupNode0.setModified(true);
      dataGroupNode0.contains(dataPredicate1);
      dataGroupNode0.removeNodes("x9B55:,N~", dataPredicate1, false);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
      
      dataGroupNode0.getValueNode((String) null);
      assertEquals(1, dataGroupNode0.childNodes());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate("#>w'Ompq=Ek");
      dataPredicate0.reset();
      DataValueNode dataValueNode0 = new DataValueNode("/");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode0.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode1.addNodeRaw(dataGroupNode0);
      dataGroupNode1.childNodes("/");
      List<DataNode> list0 = dataGroupNode2.getNodes("G%8188>RH40%%*j)");
      assertEquals(2, dataGroupNode1.childNodes());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(",}6m>3");
      dataPredicate0.reset();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("no.tellu.lib.data.MetaItemNode", (-392), false, true);
      MetaItemNode metaItemNode0 = new MetaItemNode("Attempt to set value in group node", metaItemNode_DataType0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      MetaItemNode metaItemNode1 = metaItemNode0.setValidator(metaItemNode_DataValidator0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode1);
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode1);
      dataGroupNode0.cloneNode("", true, true);
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      dataGroupNode0.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode1.addNode((DataNode) dataGroupNode0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      int int0 = dataGroupNode0.childNodes("");
      assertEquals(0, int0);
      
      DataNode dataNode0 = dataGroupNode0.cloneNode("R", false, false);
      assertEquals("R", dataNode0.getName());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3");
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      dataPredicate0.clonePredicate();
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      boolean boolean0 = dataGroupNode1.process(setDefaultTrav0);
      assertTrue(boolean0);
      
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      DataPath dataPath0 = new DataPath("g");
      DataPath dataPath1 = dataPath0.clonePath();
      List<DataNode> list0 = dataGroupNode1.childNodes;
      dataGroupNode2.getNodes(list0, dataPath1);
      DataGroupNode dataGroupNode3 = (DataGroupNode)dataGroupNode2.cloneNode(",6m>3", true, false);
      assertEquals(",6m>3", dataGroupNode3.getName());
      assertEquals(0, dataGroupNode3.childNodes());
      
      dataGroupNode2.getMetaNode();
      assertEquals(0, dataGroupNode1.childNodes());
      
      dataGroupNode0.childNodes();
      String string0 = dataGroupNode0.toString();
      assertEquals(",6m>3[1]", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("G%8188>RH40%%*j)", 347, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("\"8@{q^Ob'r3G~", metaGroupNode0, (-1.0), 1.0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, metaGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      DataValueNode dataValueNode1 = new DataValueNode("G%8188>RH40%%*j)", "\"8@{q^Ob'r3G~");
      dataPredicate0.evaluate(dataValueNode1);
      // Undeclared exception!
      try { 
        dataGroupNode1.removeNodes("}YC2XQ*#:t B+VurL`", dataPredicate1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode1.getNodes("!+al=pyV4{?)T.ul[");
      boolean boolean0 = dataGroupNode1.process(setDefaultTrav0);
      assertTrue(boolean0);
      
      boolean boolean1 = dataGroupNode0.isValid();
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3");
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode1.removeNodes("no.tellu.lib.data.MetaItemNode", dataPredicate0);
      metaGroupNode0.createData(dataGroupNode1, false);
      dataGroupNode0.getGroupNode("`vs7^fGH<p");
      dataGroupNode0.isValid();
      dataGroupNode1.getGroupNode((String) null);
      dataGroupNode0.getMetaNode();
      DataPredicate dataPredicate2 = new DataPredicate();
      dataGroupNode1.removeNodes(",6m>3", dataPredicate1, true);
      dataGroupNode0.getHandle();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaItemNode metaItemNode0 = new MetaItemNode(",6m>3", metaItemNode_DataType0);
      MetaNumberNode metaNumberNode0 = null;
      try {
        metaNumberNode0 = new MetaNumberNode("x9B55:,N~", "7w&u", Double.NaN, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MetaNumberNode must have numeric DataType
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("dVd?F[");
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      DataValueNode dataValueNode0 = new DataValueNode("Already has child node with this name", dataGroupNode1);
      dataValueNode0.getValueNode("dVd?F[");
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw((DataNode) null);
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "qU9(=`T");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath(".8}(y4xA!GG^p84`H");
      dataPath0.clonePath();
      dataGroupNode0.getNodes("v0%mNQJD ");
      DataGroupNode dataGroupNode2 = new DataGroupNode((String) null);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode1.process(setDefaultTrav0);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(dataGroupNode0.isModified());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.childNodes = null;
      // Undeclared exception!
      try { 
        dataGroupNode0.addNodeRaw(dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      boolean boolean0 = dataGroupNode1.contains(dataPredicate0);
      assertFalse(boolean0);
      
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      int int0 = dataGroupNode2.childNodes("");
      assertEquals(1, int0);
      
      DataGroupNode dataGroupNode3 = new DataGroupNode("");
      dataGroupNode3.getNodes("/");
      dataGroupNode0.setModified(false);
      assertFalse(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("YIxwYbl,$JxV");
      MetaItemNode metaItemNode0 = new MetaItemNode("YIxwYbl,$JxV", metaGroupNode0);
      MetaGroupNode metaGroupNode2 = new MetaGroupNode("YIxwYbl,$JxV", 1);
      metaGroupNode2.putNode(metaGroupNode1);
      DataGroupNode dataGroupNode0 = metaGroupNode2.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate("YIxwYbl,$JxV");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      Integer.getInteger("HA5)avXE");
      DataValueNode dataValueNode0 = new DataValueNode((String) null, "Attempt to modify read-only DataNode");
      DataPath dataPath0 = new DataPath("YIxwYbl,$JxV");
      DataPredicate dataPredicate2 = new DataPredicate();
      dataGroupNode0.removeNodes("YIxwYbl,$JxV", dataPredicate1, false);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("G%8188>RH40%%*j)", 0, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", (Object) null, 2, 2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      metaGroupNode1.createData(false);
      dataGroupNode0.childNodes("G%8188>RH40%%*j)");
      metaGroupNode1.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = new DataPredicate("G%8188>RH40%%*j)");
      // Undeclared exception!
      try { 
        dataGroupNode1.removeNodes("aYroft#`THzUjN", dataPredicate1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.getChildNodes("Attempt to set value in group node", (DataPredicate) null);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.getFrontPathName();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to set value in group node", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, (Object) null);
      dataValueNode0.getValueNode("1lImaP");
      dataPredicate0.evaluate((DataValueNode) null);
      dataPredicate0.getFrontPathName();
      dataGroupNode0.removeNodes("", dataPredicate0);
      dataGroupNode0.getChildNode(0);
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = null;
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      dataGroupNode0.cloneNode((String) null, false, false);
      dataGroupNode0.getGroupNode("");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      DataPredicate dataPredicate0 = new DataPredicate("mo<1hz#o4|gE@fz");
      // Undeclared exception!
      try { 
        dataGroupNode1.isValid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("3hbzlU5MSjciB/", (-2071534605));
      metaGroupNode0.iterator();
      LinkedList<MetaNode> linkedList0 = new LinkedList<MetaNode>();
      metaGroupNode0.childNodes = (List<MetaNode>) linkedList0;
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.isValid();
      linkedList0.add((MetaNode) metaGroupNode0);
      dataGroupNode0.isValid();
      dataGroupNode0.setModified(true);
      dataGroupNode0.cloneNode("3hbzlU5MSjciB/", false, false);
      int int0 = dataGroupNode0.childNodes("N+~-vd@<Zj*uW");
      assertTrue(dataGroupNode0.isModified());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode1.childNodes = null;
      // Undeclared exception!
      try { 
        dataGroupNode1.process(setDefaultTrav0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      metaGroupNode0.createData(dataGroupNode0, false);
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      dataGroupNode1.setMetaNode(metaGroupNode0);
      dataGroupNode1.isValid();
      dataGroupNode0.toString();
      DataPredicate dataPredicate0 = new DataPredicate();
      DataGroupNode dataGroupNode2 = new DataGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode0.addNode((DataNode) dataGroupNode2, false);
      assertTrue(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      DataPredicate dataPredicate0 = new DataPredicate("Bn");
      DataValueNode dataValueNode0 = new DataValueNode("Equals", "Bn");
      dataPredicate0.evaluate(dataValueNode0);
      // Undeclared exception!
      try { 
        dataGroupNode1.removeNodes("R';!e5vem]4l}!D^", (DataPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("/", metaGroupNode0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(metaItemNode_DataValidator0).isValid(any());
      metaItemNode0.setValidator(metaItemNode_DataValidator0);
      dataGroupNode0.cloneNode("5[b[ VhfJG", true, false);
      dataGroupNode0.isValid();
      dataGroupNode0.setModified(true);
      assertTrue(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      boolean boolean0 = dataGroupNode1.contains(dataPredicate0);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      boolean boolean1 = dataGroupNode1.process(setDefaultTrav0);
      assertFalse(boolean1 == boolean0);
      
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      int int0 = dataGroupNode2.childNodes("");
      assertEquals(1, int0);
      
      List<DataNode> list0 = dataGroupNode2.getNodes("");
      assertEquals(0, list0.size());
      
      boolean boolean2 = dataGroupNode0.process(setDefaultTrav0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataGroupNode dataGroupNode0 = null;
      try {
        dataGroupNode0 = new DataGroupNode((MetaGroupNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("4>y(Z0^TLrFYpcJ$", 0, false, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.childNodes();
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("");
      dataGroupNode0.meta = metaGroupNode1;
      DataPredicate dataPredicate0 = new DataPredicate();
      DataValueNode dataValueNode0 = new DataValueNode("4>y(Z0^TLrFYpcJ$");
      dataPredicate0.evaluate(dataValueNode0);
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.getMetaNode();
      dataGroupNode0.getChildNode(3);
      dataGroupNode0.removeNodes("4>y(Z0^TLrFYpcJ$", dataPredicate0);
      DataNode dataNode0 = dataGroupNode0.getChildNode(1362);
      assertNull(dataNode0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaNumberNode0.validator = metaItemNode_DataValidator0;
      DataPath dataPath0 = new DataPath("G%8188>RH40%%*j)");
      DataPath dataPath1 = new DataPath("G%8188>RH40%%*j)");
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath2 = dataPath1.clonePath();
      dataPath2.getFrontPredicate();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath2);
      dataGroupNode1.cloneNode("G%8188>RH40%%*j)", false, false);
      dataGroupNode1.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataValueNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.isValid();
      DataGroupNode dataGroupNode2 = dataGroupNode0.getGroupNode((String) null);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Less", dataGroupNode2, (-329.61), 0.0);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, metaNumberNode0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      DataNode dataNode0 = dataValueNode0.cloneNode("sgb&@IP-oU9~D:e", false, true);
      DataGroupNode dataGroupNode3 = dataGroupNode1.addNodeRaw(dataNode0);
      dataGroupNode3.getNodes((String) null);
      dataNode0.getHandle();
      dataGroupNode2.getValueNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.childNodes("-Xa1i+GFN+0!.kMj#a~");
      dataGroupNode0.getNodes("Only nodes named by meta-data are allowed");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode3.process(setDefaultTrav0);
      // Undeclared exception!
      try { 
        dataGroupNode1.setMetaImpl(metaItemNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to set value in group node
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      List<DataNode> list0 = dataGroupNode0.getNodes("Mz;!s|NhsvB<-JLCM");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("=");
      dataPredicate0.reset();
      DataValueNode dataValueNode0 = new DataValueNode("G%8188>RH40%%*j)");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode0.updateModified();
      int int0 = new Integer(0);
      // Undeclared exception!
      try { 
        dataGroupNode1.getChildNodes("G%8188>RH40%%*j)", dataPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.childNodes("");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("", 929);
      dataGroupNode0.modified = false;
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(true);
      List<DataNode> list0 = dataGroupNode1.getNodes("");
      DataPath dataPath0 = new DataPath(",6m>3");
      DataPath dataPath1 = dataPath0.clonePath();
      DataPath dataPath2 = new DataPath(",6m>3");
      dataGroupNode0.getNodes(list0, dataPath1);
      dataGroupNode0.cloneNode("", false, true);
      dataGroupNode1.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Can't add DataNode which has meta-data");
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, dataGroupNode1);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "Can't add DataNode which has meta-data");
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataValueNode0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      List<DataNode> list0 = dataGroupNode0.childNodes;
      List<DataNode> list1 = dataGroupNode0.getNodes("qU9(=`T");
      assertNotSame(list1, list0);
      assertFalse(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Attempt to modify read-only DataNode");
      MetaItemNode metaItemNode0 = new MetaItemNode("q$\"(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPredicate dataPredicate0 = new DataPredicate("(NBX");
      DataGroupNode dataGroupNode1 = new DataGroupNode("q$\"(=`T");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Already has child node with this name
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "qU9(=`T");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath(".8}(y4xA!GG^p84`H");
      dataPath0.clonePath();
      List<DataNode> list0 = dataGroupNode0.getNodes("v0%mN/CoQJDl1 ");
      dataGroupNode0.getNodes(list0, dataPath0);
      DataGroupNode dataGroupNode2 = new DataGroupNode((String) null);
      dataGroupNode2.cloneNode((String) null, false, true);
      MetaGroupNode metaGroupNode2 = new MetaGroupNode("no.tellu.lib.data.MetaItemNode$DataType", 4, true, true);
      DataGroupNode dataGroupNode3 = new DataGroupNode(metaGroupNode2);
      DataPredicate dataPredicate0 = new DataPredicate("qU9(=`T");
      dataGroupNode1.removeNodes((String) null, dataPredicate0, true);
      assertEquals(2, dataGroupNode0.childNodes());
      
      DataGroupNode dataGroupNode4 = metaGroupNode0.createData(true);
      DataGroupNode dataGroupNode5 = dataGroupNode4.addNodeRaw(dataValueNode0);
      boolean boolean0 = dataGroupNode5.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate();
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      dataGroupNode1.getValueNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw((DataNode) null);
      // Undeclared exception!
      try { 
        dataGroupNode2.setModified(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      boolean boolean0 = dataGroupNode0.updateModified();
      assertFalse(boolean0);
      
      int int0 = dataGroupNode2.childNodes("");
      assertEquals(1, int0);
      
      List<DataNode> list0 = dataGroupNode2.getChildNodes("", dataPredicate0);
      assertEquals(0, list0.size());
      
      int int1 = dataGroupNode1.childNodes();
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      List<DataNode> list0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath0.clonePath();
      dataGroupNode0.getNodes(list0, dataPath1);
      DataPredicate dataPredicate0 = new DataPredicate("B(NBX");
      dataGroupNode0.getGroupNode("~1+k$F{4v3z");
      DataGroupNode dataGroupNode1 = new DataGroupNode("qU9(=`T");
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Already has child node with this name
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode((String) null);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      // Undeclared exception!
      try { 
        dataGroupNode2.childNodes("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = new DataPredicate("\"`(5Y9$L,[s#4m4");
      dataPredicate1.clonePredicate();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Attempt to modify read-only DataNode");
      MetaItemNode metaItemNode0 = new MetaItemNode("no.tellu.lib.data.MetaGroupNode", (Object) null);
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      List<DataNode> list0 = dataGroupNode0.getNodes("\"`(5Y9$L,[s#4m4");
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.clonePath();
      dataGroupNode0.getNodes(list0, dataPath1);
      DataNode dataNode0 = dataGroupNode0.cloneNode(")F't(E,MeC2bls/St", false, true);
      dataGroupNode0.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode(dataNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.clonePredicate();
      dataPredicate0.getFrontPathName();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to set value in group node", metaItemNode_DataType0);
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      dataPath1.clonePath();
      dataPath0.getFrontPredicate();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath1);
      DataNode dataNode0 = dataGroupNode0.cloneNode("Attempt to set value in group node", false, false);
      dataGroupNode0.getMetaNode();
      dataGroupNode0.addNode(dataNode0);
      dataGroupNode0.childNodes();
      dataGroupNode0.addNode(dataNode0);
      dataGroupNode0.setMetaImpl((MetaNode) null);
      assertTrue(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataValueNode dataValueNode0 = new DataValueNode("[");
      dataValueNode0.getGroupNode((String) null);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      // Undeclared exception!
      try { 
        dataGroupNode1.getGroupNode("Attempt to set group in value node");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("<O7UER'&$30N(");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("~^M", metaItemNode_DataType0, metaItemNode_DataType0, 0, 2817, true);
      MetaNumberNode metaNumberNode1 = new MetaNumberNode((String) null, metaNumberNode0, (-4798));
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode1, metaNumberNode1);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      assertEquals("<O7UER'&$30N(", dataGroupNode1.getName());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.getChildNodes("Attempt to set value in group node", (DataPredicate) null);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.getFrontPathName();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to set value in group node", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, (Object) null);
      DataPredicate dataPredicate1 = new DataPredicate();
      DataPredicate dataPredicate2 = dataPredicate1.clonePredicate();
      DataPredicate dataPredicate3 = new DataPredicate("Attempt to set value in group node");
      dataPredicate3.evaluate(dataValueNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode1.removeNodes("", dataPredicate0);
      DataPredicate dataPredicate4 = dataPredicate2.clonePredicate();
      dataGroupNode1.removeNodes("", dataPredicate4);
      DataGroupNode dataGroupNode2 = dataGroupNode1.getGroupNode((String) null);
      DataValueNode dataValueNode1 = new DataValueNode("Only nodes named by meta-data are allowed", dataGroupNode2);
      dataGroupNode0.addNode((DataNode) dataValueNode1, false);
      assertTrue(dataGroupNode2.isModified());
      assertTrue(dataValueNode1.isModified());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      boolean boolean0 = dataGroupNode1.contains(dataPredicate0);
      assertFalse(boolean0);
      
      dataGroupNode0.addNodeRaw(dataGroupNode1);
      int int0 = dataGroupNode1.childNodes("");
      assertEquals(0, int0);
      
      List<DataNode> list0 = dataGroupNode0.getNodes("Only nodes named by meta-data are allowed");
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      metaGroupNode0.putNode(metaItemNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("sMS.aZ");
      DataPath dataPath1 = new DataPath("sMS.aZ");
      dataPath1.clonePath();
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath0);
      DataNode dataNode0 = dataGroupNode0.cloneNode("qU9(=`T", false, false);
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode0);
      DataGroupNode dataGroupNode2 = new DataGroupNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode(dataNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to set value in group node
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("");
      String string0 = "g?&6C?+tYsS+A!V";
      metaGroupNode0.removeNode("g?&6C?+tYsS+A!V");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", dataGroupNode0, (-3953));
      dataGroupNode0.meta = metaGroupNode0;
      boolean boolean0 = true;
      dataGroupNode0.modified = true;
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      MetaItemNode metaItemNode0 = metaNumberNode0.setValidator(metaItemNode_DataValidator0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      boolean boolean1 = false;
      MetaItemNode.DataValidator metaItemNode_DataValidator1 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaItemNode0.validator = metaItemNode_DataValidator1;
      metaGroupNode0.iterator();
      MetaNumberNode metaNumberNode1 = null;
      try {
        metaNumberNode1 = new MetaNumberNode("", metaItemNode_DataType0, "g?&6C?+tYsS+A!V", 0, 1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MetaNumberNode must have numeric DataType
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3", 347, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      dataGroupNode0.meta = metaGroupNode0;
      DataPredicate dataPredicate0 = new DataPredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      Integer integer0 = new Integer(1);
      DataValueNode dataValueNode0 = new DataValueNode(",6m>3", integer0);
      // Undeclared exception!
      try { 
        dataGroupNode0.removeNodes("", dataPredicate1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("no.tellu.lib.data.DataPath", 1718, true, true);
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      // Undeclared exception!
      try { 
        dataGroupNode1.updateModified();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.childNodes();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      DataNode dataNode0 = dataValueNode0.cloneNode("", true, false);
      dataGroupNode0.addNode(dataNode0);
      assertTrue(dataGroupNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("<");
      MetaItemNode metaItemNode0 = new MetaItemNode("<", "<");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      dataGroupNode0.getNodes("<");
      metaGroupNode1.findNode("no.tellu.lib.data.TransactionException");
      dataGroupNode0.setModified(false);
      dataGroupNode0.getValueNode("<");
      boolean boolean0 = dataGroupNode0.contains(dataPredicate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", dataGroupNode0, 1, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      metaNumberNode0.validator = metaItemNode_DataValidator0;
      DataPath dataPath0 = new DataPath("");
      DataPath dataPath1 = dataPath0.clonePath();
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      dataPath1.clonePath();
      DataGroupNode dataGroupNode2 = new DataGroupNode("0c2");
      DataValueNode dataValueNode1 = new DataValueNode("G%8188>RH40%%*j)", dataGroupNode2);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.getValueNode("Ra}zq12t=KF,>$$e");
      dataPredicate0.evaluate((DataValueNode) null);
      dataGroupNode1.removeNodes("G%8188>RH40%%*j)", dataPredicate0);
      DataGroupNode dataGroupNode3 = dataGroupNode2.addNodeRaw((DataNode) null);
      int int0 = dataGroupNode3.childNodes();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.isValid();
      DataGroupNode dataGroupNode2 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode2.getMetaNode();
      DataPredicate dataPredicate2 = new DataPredicate();
      dataGroupNode2.removeNodes("7w&u", dataPredicate2, true);
      dataGroupNode2.getHandle();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaItemNode metaItemNode0 = new MetaItemNode("vx\"0*dBkL)I;?QJWw@O", metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataGroupNode2.setMetaImpl(metaItemNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to set value in group node
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      dataPredicate0.reset();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("no.tellu.lib.data.MetaItemNode", (-385), true, false);
      MetaItemNode metaItemNode0 = new MetaItemNode("Attempt to set value in group node", metaItemNode_DataType0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      MetaItemNode metaItemNode1 = metaItemNode0.setValidator(metaItemNode_DataValidator0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode1);
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode1);
      dataGroupNode0.removeNodes("x9B55:,N~", dataPredicate1, true);
      boolean boolean0 = dataGroupNode0.isValid();
      assertTrue(boolean0);
      
      boolean boolean1 = dataGroupNode0.updateModified();
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("");
      metaGroupNode0.findNode("Sv<3}N");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      metaGroupNode0.forEach(consumer0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      dataGroupNode0.getNodes("Less");
      metaGroupNode0.findNode("Less");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.reset();
      dataGroupNode0.removeNodes("", dataPredicate0);
      dataGroupNode0.getValueNode((String) null);
      metaGroupNode0.getNode("");
      dataGroupNode0.cloneNode((String) null, false, false);
      dataGroupNode0.toString();
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode((String) null);
      dataGroupNode1.removeNodes("Attempt to modify read-only DataNode", dataPredicate0);
      assertEquals((-1), dataPredicate0.getIndex());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      dataPredicate0.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("xC;uJ^%RL#");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataValueNode dataValueNode0 = new DataValueNode("xC;uJ^%RL#", metaGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode1.process(setDefaultTrav0);
      setDefaultTrav0.processItem(dataValueNode0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode1.childNodes("mJ<_");
      List<DataNode> list0 = dataGroupNode2.childNodes;
      dataGroupNode1.process(setDefaultTrav0);
      String string0 = "NzA6>Ss!.k";
      dataGroupNode2.getNodes(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      dataPredicate0.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("<");
      MetaItemNode metaItemNode0 = new MetaItemNode("<", "<");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      dataGroupNode0.getNodes("<");
      dataGroupNode0.contains(dataPredicate0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3", 347, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.meta = metaGroupNode0;
      DataPredicate dataPredicate0 = new DataPredicate();
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode0);
      dataGroupNode0.setModified(true);
      dataGroupNode1.contains(dataPredicate0);
      DataPredicate dataPredicate1 = new DataPredicate();
      // Undeclared exception!
      try { 
        dataGroupNode0.removeNodes(",6m>3", dataPredicate1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      // Undeclared exception!
      try { 
        dataGroupNode0.setMetaImpl(metaItemNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to set value in group node
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      dataPredicate0.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("<");
      MetaItemNode metaItemNode0 = new MetaItemNode("<", "<");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      dataGroupNode0.getNodes("<");
      dataGroupNode0.setModified(false);
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.removeNodes("<", dataPredicate0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      List<DataNode> list0 = dataGroupNode0.getNodes("d\"-PfNKj");
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.clonePath();
      dataGroupNode0.getNodes(list0, dataPath1);
      DataPredicate dataPredicate0 = new DataPredicate("B(NBX");
      dataGroupNode0.removeNodes("qU9(=`T", dataPredicate0, false);
      dataGroupNode0.isValid();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      DataValueNode dataValueNode0 = new DataValueNode("/");
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      DataPredicate dataPredicate0 = new DataPredicate("qU9(=`T");
      dataGroupNode1.getChildNodes("/", dataPredicate0);
      dataPredicate0.reset();
      dataGroupNode0.addNodeRaw(dataGroupNode1);
      // Undeclared exception!
      try { 
        dataGroupNode0.removeNodes("8XL5* 1P+Xy2V6G", dataPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.getChildNodes("K+X=>*nS?_\"-_@J]JD", (DataPredicate) null);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.isValid();
      List<DataNode> list0 = dataGroupNode0.getNodes("sgb&@IP-oU9~D:e");
      DataPath dataPath0 = new DataPath("sgb&@IP-oU9~D:e");
      dataGroupNode1.getNodes(list0, dataPath0);
      DataNode dataNode0 = dataGroupNode0.cloneNode("sgb&@IP-oU9~D:e", true, true);
      dataGroupNode0.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode1.addNode(dataNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNodl");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      dataGroupNode0.getNodes("A.zNgL&");
      dataGroupNode0.cloneNode("p>", true, true);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = null;
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, (Object) null);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      boolean boolean0 = false;
      metaGroupNode1.createData(false);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.getNodes("[");
      DataPath dataPath0 = null;
      try {
        dataPath0 = new DataPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("G%8188>RH40%%*j)", 0, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", (Object) null, 2, 2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      DataValueNode dataValueNode1 = new DataValueNode("G%8188>RH40%%*j)", (Object) null);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.removeNodes("`!:/", dataPredicate0, true);
      // Undeclared exception!
      try { 
        dataGroupNode1.isValid();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.DataGroupNode cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("Already has child node with this name");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Already has child node with this name", 0, true, true);
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(true);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataGroupNode1.process(setDefaultTrav0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      DataPredicate dataPredicate0 = new DataPredicate("]");
      dataGroupNode2.contains(dataPredicate0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataValueNode dataValueNode0 = new DataValueNode("UU4(t`T");
      dataValueNode0.cloneNode("%MX Av9bQ9'^6B", false, false);
      BooleanOp booleanOp0 = BooleanOp.Equals;
      dataValueNode0.cloneNode("/", false, true);
      dataValueNode0.evaluate(booleanOp0, (Object) null);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      dataGroupNode1.setModified(true);
      dataGroupNode1.cloneNode();
      dataGroupNode1.updateModified();
      dataGroupNode0.getChildNode((-2147483645));
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("=");
      dataPredicate0.clonePredicate();
      dataPredicate0.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("<");
      MetaItemNode metaItemNode0 = new MetaItemNode("<", "<");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.getNodes("<");
      dataGroupNode0.setModified(false);
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.cloneNode("=", false, false);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, "Attempt to modify read-only DataNodl");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode0);
      dataGroupNode1.getNodes((String) null);
      dataGroupNode1.cloneNode("U9Z(=T", true, true);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("jXf=}b,S]uf9|Z*", 1718, true, false);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataGroupNode dataGroupNode1 = new DataGroupNode(metaGroupNode0);
      dataGroupNode0.setMetaNode(metaGroupNode0);
      dataGroupNode1.toString();
      dataGroupNode0.childNodes();
      dataGroupNode0.cloneNode("", true, true);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 347, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.clonePredicate();
      DataValueNode dataValueNode0 = new DataValueNode("G%8188>RH40%%*j)", "\"8@{q^Ob'r3G~");
      dataPredicate0.evaluate(dataValueNode0);
      dataPredicate0.clonePredicate();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataValueNode0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.childNodes("");
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      dataGroupNode1.addNode((DataNode) dataGroupNode0, false);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "G%8188>RH40%%*j)";
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)", 0, false, false);
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("G%8188>RH40%%*j)", 347, true, true);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      dataGroupNode0.getGroupNode("G%8188>RH40%%*j)");
      dataGroupNode0.getMetaNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      // Undeclared exception!
      try { 
        dataGroupNode0.removeNodes("G%8188>RH40%%*j)", dataPredicate0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("Attempt to modify read-only DataNode");
      dataPath0.clonePath();
      DataPath dataPath1 = dataPath0.clonePath();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath1);
      DataPredicate dataPredicate0 = new DataPredicate();
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(metaItemNode_DataValidator0).isValid(any());
      metaItemNode0.validator = metaItemNode_DataValidator0;
      dataGroupNode0.removeNodes("%TrC#+", dataPredicate0, false);
      dataGroupNode0.isValid();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("qJhVU~vPBL", (-1619));
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataPredicate dataPredicate0 = new DataPredicate();
      boolean boolean0 = false;
      dataGroupNode0.removeNodes(")Uf tHI\"rF:pTPvy2", dataPredicate0, false);
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      dataGroupNode0.meta = metaGroupNode0;
      // Undeclared exception!
      try { 
        dataGroupNode1.getNodes("qJhVU~vPBL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("v7&p-#OWv", (-712));
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.setMetaImpl(metaGroupNode0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("fDvq");
      dataGroupNode0.toString();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.childNodes("");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("", 929);
      dataGroupNode0.modified = false;
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(true);
      List<DataNode> list0 = dataGroupNode1.getNodes("");
      DataPath dataPath0 = new DataPath(",6m>3");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.clonePath();
      dataGroupNode0.getNodes(list0, dataPath1);
      dataGroupNode0.cloneNode("", false, false);
      dataGroupNode1.getMetaNode();
      // Undeclared exception!
      try { 
        dataGroupNode0.addNode((DataNode) dataGroupNode1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add DataNode which has meta-data
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.clonePredicate();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("+'NnfYkgsnR]ksr50/6");
      MetaItemNode metaItemNode0 = new MetaItemNode("no.tellu.lib.data.MetaGroupNode", dataGroupNode0);
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode1 = metaGroupNode1.createData(false);
      List<DataNode> list0 = dataGroupNode0.getNodes("+'NnfYkgsnR]ksr50/6");
      DataPath dataPath0 = new DataPath("no.tellu.lib.data.MetaGroupNode");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.clonePath();
      dataGroupNode0.getNodes(list0, dataPath1);
      DataNode dataNode0 = dataGroupNode1.cloneNode("no.tellu.lib.data.DataRestrictionException", false, false);
      dataGroupNode0.getMetaNode();
      dataGroupNode1.addNode((DataNode) dataGroupNode0);
      dataGroupNode0.childNodes();
      dataGroupNode1.addNode(dataNode0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("sgb&@IP-oU9~D:e", dataPredicate1);
      metaGroupNode0.createData(dataGroupNode0, true);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode("sgb&@IP-oU9~D:e");
      dataGroupNode1.isValid();
      dataGroupNode0.getNodes("sgb&@IP-oU9~D:e");
      DataPath dataPath0 = new DataPath("sgb&@IP-oU9~D:e");
      DataValueNode dataValueNode0 = new DataValueNode((String) null, dataPath0);
      DataPredicate dataPredicate2 = new DataPredicate("Can't add DataNode which has meta-data");
      dataPredicate2.evaluate(dataValueNode0);
      DataGroupNode dataGroupNode2 = new DataGroupNode();
      dataGroupNode2.removeNodes("Can't add DataNode which has meta-data", dataPredicate1);
      dataGroupNode0.childNodes();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(".26~p=>4");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      MetaItemNode metaItemNode0 = new MetaItemNode("Data type is incompatible", metaItemNode_DataType0);
      MetaItemNode.DataValidator metaItemNode_DataValidator0 = mock(MetaItemNode.DataValidator.class, new ViolatedAssumptionAnswer());
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      dataGroupNode0.isValid();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.childNodes("<|\"h(0u}6ug,H+*m)");
      dataGroupNode0.getNodes("}g\"//7u}h6e#jou");
      dataGroupNode0.getNodes("3?i$GUS{pgIH&a]Oo");
      DataPredicate dataPredicate0 = new DataPredicate();
      Object object0 = new Object();
      dataPredicate0.reset();
      dataGroupNode0.removeNodes("?", dataPredicate0, true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("]", object0, (-1));
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      dataPredicate0.evaluate(dataValueNode0);
      dataPredicate0.clonePredicate();
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataPredicate1.getFrontPathName();
      dataGroupNode0.contains(dataPredicate1);
      dataGroupNode0.getMetaNode();
      dataGroupNode0.childNodes("]");
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.getHandle();
      dataGroupNode2.childNodes("");
      DataGroupNode dataGroupNode3 = dataGroupNode2.addNodeRaw(dataGroupNode0);
      // Undeclared exception!
      try { 
        dataGroupNode3.cloneNode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.getHandle();
      dataGroupNode2.getValueNode("DataHandle node is null");
      dataGroupNode0.updateModified();
      dataGroupNode2.childNodes("");
      dataGroupNode2.getChildNodes("", dataPredicate0);
      dataGroupNode0.removeNodes("", dataPredicate0, false);
      dataGroupNode1.childNodes();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "qU9(=`T");
      dataGroupNode0.addNodeRaw(dataValueNode0);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.reset();
      dataGroupNode0.isValid();
      // Undeclared exception!
      try { 
        dataGroupNode0.setMetaImpl(metaGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Has multiple nodes where meta only allows one
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("uc-4XolGwyn/");
      DataPredicate dataPredicate0 = new DataPredicate("~71u(0");
      dataPredicate0.clonePredicate();
      dataGroupNode0.getGroupNode("uc-4XolGwyn/");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      String string0 = "Attemp to set value i group node";
      dataGroupNode0.getChildNodes("Attemp to set value i group node", (DataPredicate) null);
      DataPredicate dataPredicate0 = new DataPredicate();
      dataPredicate0.getFrontPathName();
      dataGroupNode0.childNodes("Attempt to set value in group node");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("", 929);
      // Undeclared exception!
      try { 
        dataGroupNode0.contains((DataPredicate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("q$\"(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      MetaGroupNode metaGroupNode2 = new MetaGroupNode("q$\"(=`T", 4, true, true);
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode2);
      DataGroupNode dataGroupNode1 = dataGroupNode0.getGroupNode((String) null);
      dataGroupNode1.addNodeRaw(dataGroupNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("dVd?F[");
      dataPath0.clonePath();
      dataGroupNode1.getNodes((List<DataNode>) linkedList0, dataPath0);
      dataGroupNode1.cloneNode((String) null, true, true);
      DataGroupNode dataGroupNode2 = new DataGroupNode(metaGroupNode1);
      DataPredicate dataPredicate0 = new DataPredicate("7f:7");
      dataGroupNode2.removeNodes("", dataPredicate0, true);
      dataGroupNode2.isValid();
      dataGroupNode0.getGroupNode("^Dm");
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("3hbzlU5MSjciB/");
      metaGroupNode0.iterator();
      LinkedList<MetaNode> linkedList0 = new LinkedList<MetaNode>();
      metaGroupNode0.childNodes = (List<MetaNode>) linkedList0;
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.isValid();
      linkedList0.add((MetaNode) metaGroupNode0);
      dataGroupNode0.isValid();
      dataGroupNode0.setModified(false);
      DataPath dataPath0 = new DataPath("3hbzlU5MSjciB/");
      DataPath dataPath1 = dataPath0.clonePath();
      dataPath1.getFrontPredicate();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.getNodes("]");
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      dataGroupNode0.getNodes((String) null);
      dataGroupNode0.isValid();
      dataGroupNode0.getGroupNode("D`xuleRc$7K8m");
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.childNodes("");
      DataGroupNode dataGroupNode3 = dataGroupNode2.addNodeRaw(dataGroupNode0);
      dataGroupNode3.removeNodes("3!=0ce|=|>@Gc=O)", dataPredicate0, false);
      dataGroupNode1.isValid();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "qU9(=`T");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw(dataValueNode0);
      // Undeclared exception!
      try { 
        dataGroupNode1.cloneNode((String) null, false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Has multiple nodes where meta only allows one
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.childNodes("");
      dataGroupNode0.cloneNode((String) null, true, true);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      dataGroupNode0.getGroupNode("");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      DataPredicate dataPredicate0 = new DataPredicate("mo<1hz#o4|gE@fz");
      // Undeclared exception!
      try { 
        dataGroupNode1.removeNodes((String) null, dataPredicate0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode((String) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("qU9(=`T", "Attempt to modify read-only DataNode");
      MetaGroupNode metaGroupNode1 = metaGroupNode0.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode1.createData(false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "qU9(=`T");
      dataGroupNode0.addNodeRaw(dataValueNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath(".8}(y4xA!GG^p84`H");
      dataPath0.clonePath();
      List<DataNode> list0 = dataGroupNode0.getNodes("v0%mN/CoQJDl1 ");
      dataGroupNode0.getNodes(list0, dataPath0);
      DataGroupNode dataGroupNode1 = new DataGroupNode((String) null);
      dataGroupNode0.cloneNode("qU9(=`T", true, true);
      DataGroupNode dataGroupNode2 = new DataGroupNode(metaGroupNode0);
      DataPredicate dataPredicate0 = null;
      try {
        dataPredicate0 = new DataPredicate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode0.childNodes("");
      dataGroupNode0.addNodeRaw(dataGroupNode1);
      DataPredicate dataPredicate1 = new DataPredicate();
      dataGroupNode0.getGroupNode("");
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataGroupNode dataGroupNode1 = new DataGroupNode("");
      DataPredicate dataPredicate0 = new DataPredicate();
      dataGroupNode1.contains(dataPredicate0);
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.childNodes("");
      dataGroupNode2.getNodes("");
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(true);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("G%8188>RH40%%*j)", (Object) null, 2, 2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, dataGroupNode0);
      dataGroupNode0.addNodeRaw(dataValueNode0);
      LinkedList<DataNode> linkedList0 = new LinkedList<DataNode>();
      DataPath dataPath0 = new DataPath("G%8188>RH40%%*j)");
      dataPath0.clonePath();
      dataGroupNode0.getNodes((List<DataNode>) linkedList0, dataPath0);
      dataGroupNode0.cloneNode("G%8188>RH40%%*j)", false, true);
      DataPredicate dataPredicate0 = new DataPredicate("G%8188>RH40%%*j)");
      dataGroupNode0.setModified(true);
      dataGroupNode0.contains(dataPredicate0);
      // Undeclared exception!
      try { 
        dataGroupNode0.removeNodes("G%8188>RH40%%*j)", dataPredicate0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DateItem G%8188>RH40%%*j)doesn't support operation Greater on Strings
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode("uc-4XolGwyn/");
      dataGroupNode0.cloneNode("", true, true);
      dataGroupNode0.setModified(false);
      DataPredicate dataPredicate0 = new DataPredicate("~71u(0");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      dataGroupNode0.removeNodes("uc-4XolGwyn/", dataPredicate1, false);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      dataGroupNode0.childNodes = null;
      dataGroupNode0.getNodes((String) null);
      // Undeclared exception!
      try { 
        dataGroupNode0.getValueNode("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      DataGroupNode dataGroupNode0 = null;
      try {
        dataGroupNode0 = new DataGroupNode((MetaGroupNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("G%8188>RH40%%*j)");
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      DataPredicate dataPredicate0 = new DataPredicate();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode(",6m>3");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode(",6m>3");
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      DataPredicate dataPredicate0 = new DataPredicate(",6m>3");
      DataPredicate dataPredicate1 = dataPredicate0.clonePredicate();
      String string0 = "no.tellu.lib.data.MetaItemNode";
      dataGroupNode1.removeNodes("no.tellu.lib.data.MetaItemNode", dataPredicate0);
      metaGroupNode0.createData(dataGroupNode1, false);
      dataGroupNode0.getGroupNode("`vs7^fGH<p");
      dataGroupNode0.isValid();
      DataGroupNode dataGroupNode2 = dataGroupNode1.getGroupNode((String) null);
      dataGroupNode0.getMetaNode();
      DataPredicate dataPredicate2 = new DataPredicate();
      dataGroupNode1.removeNodes(",6m>3", dataPredicate1, true);
      dataGroupNode0.getHandle();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaItemNode metaItemNode0 = new MetaItemNode(",6m>3", metaItemNode_DataType0);
      dataGroupNode2.childNodes("5WOx6%{#WIC[(=nB)");
      dataGroupNode2.getValueNode("x9B55:,N~");
      MetaNumberNode metaNumberNode0 = null;
      try {
        metaNumberNode0 = new MetaNumberNode("x9B55:,N~", "7w&u", Double.NaN, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MetaNumberNode must have numeric DataType
         //
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("DataHandle node is DataGroupNode");
      dataPredicate0.clonePredicate();
      dataPredicate0.reset();
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("");
      MetaItemNode metaItemNode0 = new MetaItemNode("G%8188>RH40%%*j)", (Object) null);
      MetaGroupNode metaGroupNode1 = new MetaGroupNode("s&]x}ZQGY[rx", (-1982925801), false, false);
      MetaGroupNode metaGroupNode2 = metaGroupNode1.putNode(metaItemNode0);
      DataGroupNode dataGroupNode0 = metaGroupNode2.createData(false);
      List<DataNode> list0 = dataGroupNode0.getNodes("s&]x}ZQGY[rx");
      DataPath dataPath0 = new DataPath("s&]x}ZQGY[rx");
      dataPath0.clonePath();
      dataPath0.clonePath();
      dataGroupNode0.getNodes(list0, dataPath0);
      dataGroupNode0.setModified(false);
      dataGroupNode0.contains(dataPredicate0);
      dataGroupNode0.removeNodes("s&]x}ZQGY[rx", dataPredicate0);
      dataGroupNode0.getGroupNode("Has multiple nodes where meta only allows one");
      dataGroupNode0.setMetaImpl(metaGroupNode2);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode((String) null);
      dataGroupNode0.getGroupNode("");
      DataGroupNode dataGroupNode1 = dataGroupNode0.addNodeRaw((DataNode) null);
      DataPredicate dataPredicate0 = new DataPredicate("mo<1hz#o4|gE@fz");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      // Undeclared exception!
      try { 
        dataGroupNode1.getValueNode("q$\"(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode0 = metaGroupNode0.createData(false);
      metaGroupNode0.createData(dataGroupNode0, false);
      DataGroupNode dataGroupNode1 = metaGroupNode0.createData(false);
      dataGroupNode1.setMetaNode(metaGroupNode0);
      dataGroupNode0.toString();
      DataPredicate dataPredicate0 = new DataPredicate("sgb&@IP-oU9~D:e");
      DataGroupNode dataGroupNode2 = dataGroupNode0.addNodeRaw(dataGroupNode1);
      dataGroupNode2.updateModified();
      dataGroupNode2.setMetaImpl(metaGroupNode0);
  }
}
