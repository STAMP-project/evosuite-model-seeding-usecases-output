/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 18 12:51:36 GMT 2019
 */

package no.tellu.lib.data;

import org.junit.Test;
import static org.junit.Assert.*;
import no.tellu.lib.data.BooleanOp;
import no.tellu.lib.data.DataGroupNode;
import no.tellu.lib.data.DataNode;
import no.tellu.lib.data.DataPredicate;
import no.tellu.lib.data.DataValueNode;
import no.tellu.lib.data.MetaGroupNode;
import no.tellu.lib.data.MetaItemNode;
import no.tellu.lib.data.MetaNode;
import no.tellu.lib.data.MetaNumberNode;
import no.tellu.lib.data.SetDefaultTrav;

public class DataValueNode_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object object0 = new Object();
      MetaItemNode metaItemNode0 = new MetaItemNode("V+yWWM0", object0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "V+yWWM0");
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      dataValueNode0.process(setDefaultTrav0);
      assertTrue(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      MetaNode metaNode0 = dataValueNode0.getMetaNode();
      assertNull(metaNode0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Float float0 = new Float((-461.05155590971));
      MetaItemNode metaItemNode0 = new MetaItemNode("T*@rCK0wht`f", float0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, float0);
      String string0 = dataValueNode0.toString();
      assertEquals("T*@rCK0wht`f=-461.05154", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      Object object0 = dataValueNode0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*", ">TJ\"QPW*");
      MetaItemNode metaItemNode0 = dataValueNode0.getMetaItem();
      assertNull(metaItemNode0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, (Object) null);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, (Object) null);
      assertFalse(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode(" on Strings", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = null;
      try {
        dataValueNode0 = new DataValueNode(metaItemNode0, " on Strings");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("Has multiple nodes here meta oly allows one", "Has multiple nodes here meta oly allows one");
      DataValueNode dataValueNode0 = null;
      try {
        dataValueNode0 = new DataValueNode(metaItemNode0, metaItemNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("$=5J't+bw", "$=5J't+bw");
      Double double0 = new Double(1);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, double0);
      assertFalse(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      boolean boolean0 = dataValueNode0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("|Kix:$AZlayQB");
      DataNode dataNode0 = dataValueNode0.cloneNode("|Kix:$AZlayQB", true, true);
      assertNotSame(dataNode0, dataValueNode0);
      assertEquals("|Kix:$AZlayQB", dataNode0.getName());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, (Object) null);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode((String) null, metaItemNode_DataType0, metaItemNode0, 2, 1, false);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.cloneNode((String) null, false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      DataNode dataNode0 = dataValueNode0.cloneNode();
      assertNotSame(dataNode0, dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*");
      DataPredicate dataPredicate0 = new DataPredicate();
      boolean boolean0 = dataValueNode0.contains(dataPredicate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      dataValueNode0.contains(dataPredicate0);
      // Undeclared exception!
      try { 
        dataValueNode0.contains(dataPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*");
      DataValueNode dataValueNode1 = dataValueNode0.getValueNode(">TJ\"QPW*");
      assertNull(dataValueNode1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      DataValueNode dataValueNode1 = dataValueNode0.getValueNode((String) null);
      assertNull(dataValueNode1.getName());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      BooleanOp booleanOp0 = BooleanOp.NotEquals;
      Boolean boolean0 = booleanOp0.eval("Attempt to set value in group node", (Object) null);
      MetaItemNode metaItemNode0 = new MetaItemNode("Attempt to set value in group node", boolean0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      boolean boolean1 = dataValueNode0.getBoolean();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("");
      try { 
        dataValueNode0.getBoolean();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Object object0 = new Object();
      MetaItemNode metaItemNode0 = new MetaItemNode("!=", object0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getBoolean();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode(">TJ\"Q`*", ">TJ\"Q`*");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getBoolean();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("Wk");
      DataValueNode dataValueNode0 = new DataValueNode("HQOy", boolean0);
      boolean boolean1 = dataValueNode0.getBoolean();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Object object0 = new Object();
      MetaItemNode metaItemNode0 = new MetaItemNode("V", object0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, object0);
      boolean boolean0 = dataValueNode0.getBoolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("BOOLEAN");
      DataValueNode dataValueNode0 = new DataValueNode("BOOLEAN", boolean0);
      boolean boolean1 = dataValueNode0.getBoolean(false);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, boolean0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      boolean boolean1 = dataValueNode0.getBoolean(true);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("Can't set MetaNode on DataNode with different name", (Object) null);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "Can't set MetaNode on DataNode with different name");
      try { 
        dataValueNode0.getInt();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      try { 
        dataValueNode0.getInt();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-48));
      DataValueNode dataValueNode0 = new DataValueNode("Attempt to modify read-only DataNode", byte0);
      int int0 = dataValueNode0.getInt();
      assertEquals((-48), int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaItemNode metaItemNode0 = new MetaItemNode("DateItem ", metaItemNode_DataType0, "DateItem ", (-1), (-1), false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.getInt();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode(">TJ\"Q`*", ">TJ\"Q`*");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getInt();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(" on String.s", " on String.s");
      // Undeclared exception!
      try { 
        dataValueNode0.getInt((-1431655763));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \" on String.s\"
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("gv", (Object) null, 0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("gv", metaItemNode_DataType0, metaItemNode0, (-19), 2, true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.getInt((-1));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.MetaItemNode cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("=", (-1208));
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      MetaItemNode metaItemNode0 = new MetaItemNode("=", dataGroupNode0, 1);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, metaItemNode0);
      int int0 = dataValueNode0.getInt(3685);
      assertEquals(3685, int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, metaItemNode_DataType0);
      dataValueNode0.setMetaImpl(metaItemNode0);
      Double double0 = new Double(2);
      dataValueNode0.setValue((Object) double0, true);
      int int0 = dataValueNode0.getInt(1);
      assertTrue(dataValueNode0.isModified());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      Double double0 = new Double(2);
      dataValueNode0.setValue((Object) double0, true);
      int int0 = dataValueNode0.getInt(0);
      assertTrue(dataValueNode0.isModified());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Float float0 = new Float((-461.05155590971));
      MetaItemNode metaItemNode0 = new MetaItemNode("T*@rCK0wht`f", float0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, float0);
      long long0 = dataValueNode0.getLong();
      assertEquals((-461L), long0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      try { 
        dataValueNode0.getLong();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("X<02", "X<02");
      DataValueNode dataValueNode0 = new DataValueNode("X<02", metaItemNode0.CARD_ONE);
      long long0 = dataValueNode0.getLong();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, (Object) null);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, metaItemNode0);
      try { 
        dataValueNode0.getLong();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("TJ\"`*", "TJ\"`*");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getLong();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("~(.Zv+':+p?u");
      Float float0 = new Float((double) 1);
      dataValueNode0.setValue(float0);
      long long0 = dataValueNode0.getLong((long) 3);
      assertTrue(dataValueNode0.isModified());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode("Attempt to modify read-only DataNode", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      long long0 = dataValueNode0.getLong(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("~(.Zv+':+p?u");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode("Attempt to modify read-only DataNode", metaItemNode_DataType0);
      dataValueNode0.setMetaImpl(metaItemNode0);
      Float float0 = new Float((double) 1);
      dataValueNode0.setValue(float0);
      long long0 = dataValueNode0.getLong((long) 3);
      assertTrue(dataValueNode0.isModified());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaItemNode metaItemNode0 = new MetaItemNode("Attempt to modify read-only DataNode", (Object) metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      long long0 = dataValueNode0.getLong(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("PO", "PO");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      long long0 = dataValueNode0.getLong(0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Object object0 = new Object();
      MetaItemNode metaItemNode0 = new MetaItemNode("m6>", object0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getFloat();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("\\J\"QPW*");
      try { 
        dataValueNode0.getFloat();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("Has multiple nodes here meAa ly allows ne", "Has multiple nodes here meAa ly allows ne");
      try { 
        dataValueNode0.getFloat();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("|ix:$AZlayQB<b", "|ix:$AZlayQB<b");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "|ix:$AZlayQB<b");
      try { 
        dataValueNode0.getFloat();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Long long0 = new Long(0L);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("DateItem ", long0, 3614.52, 1.0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      float float0 = dataValueNode0.getFloat();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Integer integer0 = new Integer(1);
      DataValueNode dataValueNode0 = new DataValueNode("Attempt to modify read-only DataNode", integer0);
      float float0 = dataValueNode0.getFloat();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("PO", "PO");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      float float0 = dataValueNode0.getFloat((-1200.7786F));
      assertEquals((-1200.7786F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Object object0 = new Object();
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("oQ8X_nz~.+<|", object0, 0.0, 0.0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, "l");
      float float0 = dataValueNode0.getFloat((-1.0F));
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, metaItemNode_DataType0);
      dataValueNode0.setMetaImpl(metaItemNode0);
      dataValueNode0.setValue((Object) 1, true);
      float float0 = dataValueNode0.getFloat(0.0F);
      assertTrue(dataValueNode0.isModified());
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Object object0 = new Object();
      DataValueNode dataValueNode0 = new DataValueNode("", object0);
      Byte byte0 = new Byte((byte) (-62));
      dataValueNode0.setValue((Object) byte0, false);
      float float0 = dataValueNode0.getFloat(552.38F);
      assertEquals((-62.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, (Object) null);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, metaItemNode0);
      try { 
        dataValueNode0.getDouble();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      try { 
        dataValueNode0.getDouble();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Short short0 = new Short((short) (-1331));
      DataValueNode dataValueNode0 = new DataValueNode("no.tellu.lib.data.DataValueNode", short0);
      double double0 = dataValueNode0.getDouble();
      assertEquals((-1331.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("T![Sn%_3v%jhs\"}%nt", "T![Sn%_3v%jhs\"}%nt");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getDouble();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to modify read-only DataNode", metaItemNode_DataType0, "Attempt to modify read-only DataNode", (-52), (-52), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.getDouble();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("!", "!");
      double double0 = dataValueNode0.getDouble(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("!", (Object) null);
      double double0 = dataValueNode0.getDouble(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Short short0 = new Short((short)31);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("$bO", short0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      double double0 = dataValueNode0.getDouble(0.0);
      assertEquals(31.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode("%:bjF", metaItemNode_DataType0, metaItemNode_DataType0, (-3276), (-3276), false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.getDouble((-1.0));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.MetaItemNode$DataType$2 cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("PO", "PO");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      double double0 = dataValueNode0.getDouble((double) 1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Object object0 = new Object();
      MetaItemNode metaItemNode0 = new MetaItemNode("V+yWWM0", object0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "V+yWWM0");
      String string0 = dataValueNode0.getString();
      assertEquals("V+yWWM0", string0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      String string0 = dataValueNode0.getString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*", ">TJ\"QPW*");
      String string0 = dataValueNode0.getString();
      assertEquals(">TJ\"QPW*", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Integer integer0 = new Integer((-1073741822));
      MetaItemNode metaItemNode0 = new MetaItemNode(" on Strings", integer0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      try { 
        dataValueNode0.getString();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Short short0 = new Short((short) (-30581));
      DataValueNode dataValueNode0 = new DataValueNode("DOUBLE", short0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      MetaItemNode metaItemNode0 = new MetaItemNode("}wZsWDBT]/~*", metaItemNode_DataType0, metaItemNode_DataType0, (short) (-30581), (short) (-30581), true);
      dataValueNode0.meta = metaItemNode0;
      // Undeclared exception!
      try { 
        dataValueNode0.getString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Short cannot be cast to java.lang.String
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      DataValueNode dataValueNode0 = new DataValueNode("!=", dataPredicate0);
      try { 
        dataValueNode0.getString();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("PO", "PO");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      String string0 = dataValueNode0.getString((String) null);
      assertEquals("PO", string0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      String string0 = dataValueNode0.getString("i7PTEY/%g9N");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Object object0 = new Object();
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("gS@waT}Ul c)", object0, 2);
      Long long0 = new Long(2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0, long0);
      String string0 = dataValueNode0.getString("gS@waT}Ul c)");
      assertEquals("gS@waT}Ul c)", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, metaItemNode_DataType0);
      dataValueNode0.setMetaImpl(metaItemNode0);
      Double double0 = new Double(2);
      dataValueNode0.setValue((Object) double0, true);
      dataValueNode0.getString("4vGdYhl");
      assertTrue(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("X<02", "X<02");
      DataValueNode dataValueNode0 = new DataValueNode("X<02", metaItemNode0.CARD_FLAG_MULTIPLE);
      boolean boolean0 = dataValueNode0.equalsValue(metaItemNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("Has multiple nodes where meta only allows one", "Has multiple nodes where meta only allows one");
      boolean boolean0 = dataValueNode0.equalsValue((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      boolean boolean0 = dataValueNode0.equalsValue((Object) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("");
      boolean boolean0 = dataValueNode0.equalsValue("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("Has multiple nodes where meta only allows one", "Has multiple nodes where meta only allows one");
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("Has multiple nodes where meta only allows one");
      // Undeclared exception!
      try { 
        dataValueNode0.setMetaImpl(metaGroupNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to set group in value node
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("HaJ multiple nodes here met+ oly allows ne", "HaJ multiple nodes here met+ oly allows ne");
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("HaJ multiple nodes here met+ oly allows ne", dataValueNode0);
      dataValueNode0.setMetaImpl(metaNumberNode0);
      assertEquals("HaJ multiple nodes here met+ oly allows ne", dataValueNode0.getName());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode(">TJ\"Q`*", ">TJ\"Q`*");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      dataValueNode0.setMetaImpl(metaItemNode0);
      assertEquals(0, metaItemNode0.getUnit());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      DataPredicate dataPredicate0 = new DataPredicate("$=5J't+bw");
      // Undeclared exception!
      try { 
        dataValueNode0.evaluate((BooleanOp) null, dataPredicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to modify read-only DataNode", (Object) null, (-1994091956));
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      BooleanOp booleanOp0 = BooleanOp.NotEquals;
      boolean boolean0 = dataValueNode0.evaluate(booleanOp0, metaNumberNode0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("DateItem ", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      BooleanOp booleanOp0 = BooleanOp.Equals;
      // Undeclared exception!
      try { 
        dataValueNode0.evaluate(booleanOp0, "DateItem ");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode(">TJ\"Q`*", ">TJ\"Q`*");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      BooleanOp booleanOp0 = BooleanOp.Equals;
      boolean boolean0 = dataValueNode0.evaluate(booleanOp0, booleanOp0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("/!=");
      Float float0 = new Float(1.0);
      dataValueNode0.setValue(float0);
      BooleanOp booleanOp0 = BooleanOp.Greater;
      // Undeclared exception!
      try { 
        dataValueNode0.evaluate(booleanOp0, "e#umrCL+");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DateItem /!=doesn't support operation Greater
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Byte byte0 = new Byte((byte)16);
      DataValueNode dataValueNode0 = new DataValueNode("~lU#Vpuny^", byte0);
      BooleanOp booleanOp0 = BooleanOp.Less;
      boolean boolean0 = dataValueNode0.evaluate(booleanOp0, byte0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode((String) null, (Object) null);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      BooleanOp booleanOp0 = BooleanOp.Equals;
      // Undeclared exception!
      try { 
        dataValueNode0.evaluate(booleanOp0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      DataValueNode dataValueNode0 = new DataValueNode("!=", dataPredicate0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("!=", metaItemNode_DataType0);
      dataValueNode0.meta = (MetaItemNode) metaNumberNode0;
      dataValueNode0.contains(dataPredicate0);
      // Undeclared exception!
      try { 
        dataValueNode0.contains(dataPredicate0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.DataPredicate cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      DataPredicate dataPredicate0 = new DataPredicate("!=");
      boolean boolean0 = dataValueNode0.contains(dataPredicate0);
      dataValueNode0.setValue((Object) "$=5J't+bw", false);
      assertTrue(dataValueNode0.isModified());
      
      boolean boolean1 = dataValueNode0.contains(dataPredicate0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaItemNode metaItemNode0 = new MetaItemNode("doesn't support operation ", metaItemNode_DataType0, "doesn't support operation ", (-1244), (-1244), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.setValue((Object) metaItemNode_DataType0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("|ix:$AZlaB-yQB", "|ix:$AZlaB-yQB");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.BOOLEAN;
      MetaItemNode metaItemNode0 = new MetaItemNode("|ix:$AZlaB-yQB", metaItemNode_DataType0);
      dataValueNode0.meta = metaItemNode0;
      // Undeclared exception!
      try { 
        dataValueNode0.setValue("|ix:$AZlaB-yQB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      dataValueNode0.setValue((Object) null, true);
      assertFalse(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Short short0 = new Short((short) (-1459));
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0, short0, (short) (-1459), (short) (-1459), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.setValue((Object) short0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to modify read-only DataNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("PO", "PO");
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      dataValueNode0.setValue((Object) null, true);
      assertTrue(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Short short0 = new Short((short)31);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("$=5J't+bw", short0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      Byte byte0 = Byte.valueOf((byte)6);
      dataValueNode0.setValue((Object) byte0, false);
      assertTrue(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to modify read-only DataNode", metaItemNode_DataType0, "Attempt to modify read-only DataNode", (-52), (-52), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.setValue((Object) "Attempt to modify read-only DataNode", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("A)(d.A/ZU0x1b", "A)(d.A/ZU0x1b");
      dataValueNode0.setValue((Object) "A)(d.A/ZU0x1b", true);
      assertFalse(dataValueNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DataValueNode dataValueNode0 = null;
      try {
        dataValueNode0 = new DataValueNode((MetaItemNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DataValueNode dataValueNode0 = null;
      try {
        dataValueNode0 = new DataValueNode((MetaItemNode) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DataPredicate dataPredicate0 = new DataPredicate(">TJ\"QPW*");
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*", dataPredicate0);
      // Undeclared exception!
      try { 
        dataValueNode0.contains(dataPredicate0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DateItem >TJ\"QPW*doesn't support operation Greater on Strings
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      BooleanOp booleanOp0 = BooleanOp.Greater;
      DataValueNode dataValueNode0 = new DataValueNode("L4", booleanOp0);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode("L4", metaItemNode_DataType0);
      dataValueNode0.meta = metaItemNode0;
      // Undeclared exception!
      try { 
        dataValueNode0.evaluate(booleanOp0, "L4");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no.tellu.lib.data.BooleanOp$3 cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to modify read-only DataNode", metaItemNode_DataType0, "Attempt to modify read-only DataNode", (-51), (-51), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.getFloat();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode(":tbk).Dqa&h/1WBYa|", metaItemNode_DataType0, ":tbk).Dqa&h/1WBYa|", (-730), (-730), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.getLong();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Object object0 = new Object();
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("1^*wn,!#$2`5Hb", object0, 2);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      // Undeclared exception!
      try { 
        dataValueNode0.isValid();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Number
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("");
      // Undeclared exception!
      try { 
        dataValueNode0.process((DataNode.Traverser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.STRING;
      MetaItemNode metaItemNode0 = new MetaItemNode("a^uM|9fp*@ {K&`l", metaItemNode_DataType0, metaItemNode_DataType0, (-1193), (-1193), false);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      SetDefaultTrav setDefaultTrav0 = new SetDefaultTrav();
      // Undeclared exception!
      try { 
        dataValueNode0.process(setDefaultTrav0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Data type is incompatible
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      MetaItemNode metaItemNode0 = new MetaItemNode("rV8+,", "rV8+,", (-10));
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, "rV8+,");
      BooleanOp booleanOp0 = BooleanOp.Equals;
      boolean boolean0 = dataValueNode0.evaluate(booleanOp0, "rV8+,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*", ">TJ\"QPW*");
      BooleanOp booleanOp0 = BooleanOp.NotEquals;
      boolean boolean0 = dataValueNode0.evaluate(booleanOp0, ">TJ\"QPW*");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("Attempt to modify read-only DataNode", metaItemNode_DataType0, "Attempt to modify read-only DataNode", (-19), (-19), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      boolean boolean0 = dataValueNode0.getBoolean(true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      Double double0 = new Double(2);
      dataValueNode0.setValue((Object) double0, true);
      double double1 = dataValueNode0.getDouble();
      assertEquals(2.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Float float0 = new Float(0.0F);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode((String) null, metaItemNode_DataType0, float0, (-460), (-52), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      double double0 = dataValueNode0.getDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Short short0 = new Short((short) (-1459));
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0, short0, (short) (-1459), (short) (-1459), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      double double0 = dataValueNode0.getDouble((double) 2);
      assertEquals((-1459.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Short short0 = new Short((short) (-1459));
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0, short0, (short) (-1459), (short) (-1459), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      float float0 = dataValueNode0.getFloat();
      assertEquals((-1459.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("");
      float float0 = dataValueNode0.getFloat(0.0F);
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      Byte byte0 = new Byte((byte)1);
      MetaItemNode metaItemNode0 = new MetaItemNode("Greater", metaItemNode_DataType0, byte0, 2226, 2226, true);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      int int0 = dataValueNode0.getInt();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("Can't set MetaNode on DataNode with different name");
      Byte byte0 = new Byte((byte)0);
      dataValueNode0.setValue((Object) byte0, true);
      int int0 = dataValueNode0.getInt();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("2A\u000B'XY>-nLQ>UE", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      int int0 = dataValueNode0.getInt((-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      int int0 = dataValueNode0.getInt(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("DateItem ", "|ix:$AZlayQB<b");
      Integer integer0 = new Integer(0);
      dataValueNode0.setValue(integer0);
      long long0 = dataValueNode0.getLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Object object0 = new Object();
      DataValueNode dataValueNode0 = new DataValueNode("Fq.36+_|TINs", object0);
      long long0 = dataValueNode0.getLong((-2398L));
      assertEquals((-2398L), long0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Short short0 = new Short((short) (-1459));
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0, short0, (short) (-1459), (short) (-1459), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      MetaItemNode metaItemNode0 = dataValueNode0.getMetaItem();
      assertSame(metaItemNode0, metaNumberNode0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(">TJ\"QPW*", ">TJ\"QPW*");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      MetaItemNode metaItemNode0 = new MetaItemNode("ja,!tR%7W'(~qP@n", metaItemNode_DataType0, metaItemNode_DataType0, 1814, (-1431655763), true);
      dataValueNode0.meta = metaItemNode0;
      MetaItemNode metaItemNode1 = dataValueNode0.getMetaItem();
      assertFalse(metaItemNode1.isRequired());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Short short0 = new Short((short)31);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("$bO", short0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      MetaItemNode metaItemNode0 = dataValueNode0.getMetaItem();
      assertEquals(3, MetaNode.CARD_ONE_OR_MORE);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      MetaGroupNode metaGroupNode0 = new MetaGroupNode("=", (-1208));
      DataGroupNode dataGroupNode0 = new DataGroupNode(metaGroupNode0);
      MetaItemNode metaItemNode0 = new MetaItemNode("=", dataGroupNode0, 1);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0, metaItemNode0);
      MetaItemNode metaItemNode1 = dataValueNode0.getMetaItem();
      assertEquals("=", metaItemNode1.getName());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Short short0 = new Short((short) (-1459));
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0, short0, (short) (-1459), (short) (-1459), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      MetaNode metaNode0 = dataValueNode0.getMetaNode();
      assertSame(metaNode0, metaNumberNode0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("$=5J't+bw");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.DOUBLE;
      Byte byte0 = new Byte((byte)87);
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("$=5J't+bw", metaItemNode_DataType0, byte0, (byte)87, (byte)87, false);
      dataValueNode0.meta = (MetaItemNode) metaNumberNode0;
      MetaNode metaNode0 = dataValueNode0.getMetaNode();
      assertEquals(1, MetaNode.CARD_ONE);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Byte byte0 = new Byte((byte)120);
      MetaItemNode metaItemNode0 = new MetaItemNode("", byte0, 0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      MetaNode metaNode0 = dataValueNode0.getMetaNode();
      assertEquals(2, MetaNode.CARD_FLAG_MULTIPLE);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("", "");
      String string0 = dataValueNode0.getString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("", "");
      String string0 = dataValueNode0.getString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(" on Strings", " on Strings");
      Object object0 = dataValueNode0.getValue();
      assertEquals(" on Strings", object0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      dataValueNode0.setModified(true);
      DataValueNode dataValueNode1 = dataValueNode0.getValueNode((String) null);
      assertSame(dataValueNode0, dataValueNode1);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      Short short0 = new Short((short) (-1459));
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0, short0, (short) (-1459), (short) (-1459), true);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      boolean boolean0 = dataValueNode0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaItemNode metaItemNode0 = new MetaItemNode("D", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaItemNode0);
      BooleanOp booleanOp0 = BooleanOp.Greater;
      // Undeclared exception!
      try { 
        dataValueNode0.evaluate(booleanOp0, "D");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DateItem Ddoesn't support operation Greater on Strings
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BooleanOp booleanOp0 = BooleanOp.Less;
      Long long0 = new Long(0L);
      DataValueNode dataValueNode0 = new DataValueNode((String) null, long0);
      boolean boolean0 = dataValueNode0.evaluate(booleanOp0, "1");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("2A\u000B'XY>-nLQ>UE", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      boolean boolean0 = dataValueNode0.getBoolean(true);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode(" on Strings", " on Strings");
      boolean boolean0 = dataValueNode0.getBoolean(true);
      assertTrue(boolean0);
  }
}
