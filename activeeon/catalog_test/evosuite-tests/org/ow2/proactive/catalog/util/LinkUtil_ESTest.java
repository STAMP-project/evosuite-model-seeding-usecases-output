/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 12 15:33:18 GMT 2019
 */

package org.ow2.proactive.catalog.util;

import org.junit.Test;
import static org.junit.Assert.*;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.ow2.proactive.catalog.util.LinkUtil;
import org.springframework.hateoas.Link;

public class LinkUtil_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createRelativeLink((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createLink("mS3B9", "mS3B9", (LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createLink("%20", "%20");
        fail("Expecting exception: IncompatibleClassChangeError");
      
      } catch(IncompatibleClassChangeError e) {
         //
         // Expected non-static field org.springframework.cglib.proxy.Enhancer.serialVersionUID
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkUtil linkUtil0 = new LinkUtil();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocalDateTime localDateTime0 = LocalDateTime.now();
      // Undeclared exception!
      try { 
        LinkUtil.linkTo(localDateTime0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object of class [java.time.LocalDateTime] must be an instance of interface org.springframework.hateoas.core.DummyInvocationUtils$LastInvocationAware
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        LinkUtil.createRelativeLink("%20", "%20", (LocalDateTime) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LocalDateTime localDateTime0 = LocalDateTime.now();
      // Undeclared exception!
      try { 
        LinkUtil.createLink("Non-ASCII character: %s", "Non-ASCII character: %s", localDateTime0);
        fail("Expecting exception: IncompatibleClassChangeError");
      
      } catch(IncompatibleClassChangeError e) {
         //
         // Expected non-static field org.springframework.cglib.proxy.Enhancer.serialVersionUID
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Instant instant0 = Instant.ofEpochMilli(717L);
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDateTime localDateTime0 = MockLocalDateTime.ofInstant(instant0, zoneId0);
      Link link0 = LinkUtil.createRelativeLink("Mc@MXAVuVEq", "gen_id( ", localDateTime0);
      assertNotNull(link0);
      assertEquals("buckets/Mc@MXAVuVEq/resources/gen_id%28%20/revisions/717", link0.getHref());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Link link0 = LinkUtil.createRelativeLink("U8cJn/>fSj.[h", "http://www.w3.org/2005/Atom");
      assertEquals("buckets/U8cJn/>fSj.[h/resources/http%3A%2F%2Fwww.w3.org%2F2005%2FAtom", link0.getHref());
      assertNotNull(link0);
  }
}
