/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 13:28:45 GMT 2019
 */

package org.ow2.proactive.catalog.graphql.bean.argument;

import org.junit.Test;
import static org.junit.Assert.*;
import org.ow2.proactive.catalog.graphql.bean.argument.WhereArgs;

public class WhereArgs_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>();
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>();
      whereArgs1.setLt(whereArgs0);
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", "");
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>("", whereArgs0, whereArgs0, whereArgs0, "", whereArgs0);
      whereArgs1.setNe("");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>();
      whereArgs0.setLte("");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WhereArgs<WhereArgs<Object>> whereArgs0 = new WhereArgs<WhereArgs<Object>>();
      String string0 = whereArgs0.toString();
      assertEquals("WhereArgs(eq=null, ne=null, gt=null, gte=null, lt=null, lte=null)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>();
      whereArgs0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-2325));
      Integer integer1 = new Integer((-120));
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>(integer0, integer0, integer0, integer1, integer0, integer1);
      WhereArgs<Integer> whereArgs1 = new WhereArgs<Integer>(integer1, integer0, integer1, integer0, integer1, integer1);
      boolean boolean0 = whereArgs0.equals(whereArgs1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>();
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      WhereArgs<WhereArgs<Object>> whereArgs1 = new WhereArgs<WhereArgs<Object>>(whereArgs0, whereArgs0, whereArgs0, whereArgs0, whereArgs0, whereArgs0);
      boolean boolean0 = whereArgs0.equals(whereArgs1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object object0 = new Object();
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      whereArgs0.ne = object0;
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>();
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(whereArgs0.equals((Object)whereArgs1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      whereArgs0.gt = (Object) "";
      WhereArgs<WhereArgs<Object>> whereArgs1 = new WhereArgs<WhereArgs<Object>>();
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>();
      whereArgs0.gte = "6";
      WhereArgs<String> whereArgs1 = new WhereArgs<String>();
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
      assertFalse(whereArgs0.equals((Object)whereArgs1));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-2325));
      Integer integer1 = new Integer((-120));
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>(integer0, integer0, integer0, integer1, integer1, integer1);
      WhereArgs<Integer> whereArgs1 = new WhereArgs<Integer>(integer0, integer0, integer0, integer0, integer0, integer0);
      boolean boolean0 = whereArgs0.equals(whereArgs1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      whereArgs0.setLt(object0);
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>();
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      WhereArgs<String> whereArgs1 = new WhereArgs<String>();
      whereArgs1.lte = "o8EOcK%xmf4";
      boolean boolean0 = whereArgs0.equals(whereArgs1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      WhereArgs<WhereArgs<Object>> whereArgs1 = new WhereArgs<WhereArgs<Object>>();
      whereArgs1.lte = whereArgs0;
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WhereArgs<WhereArgs<Object>> whereArgs0 = new WhereArgs<WhereArgs<Object>>();
      WhereArgs<Object> whereArgs1 = whereArgs0.getGte();
      assertNull(whereArgs1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>();
      Object object0 = whereArgs0.getGt();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      Object object0 = whereArgs0.getLt();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", "");
      String string0 = whereArgs0.getNe();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", "");
      String string0 = whereArgs0.getLte();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      WhereArgs<WhereArgs<String>> whereArgs0 = new WhereArgs<WhereArgs<String>>();
      Object object0 = whereArgs0.getEq();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      boolean boolean0 = whereArgs0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      WhereArgs<WhereArgs<Object>> whereArgs1 = new WhereArgs<WhereArgs<Object>>(whereArgs0, whereArgs0, whereArgs0, whereArgs0, whereArgs0, whereArgs0);
      whereArgs0.setEq(whereArgs1);
      // Undeclared exception!
      try { 
        whereArgs1.equals(whereArgs0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", ")");
      boolean boolean0 = whereArgs0.canEqual((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>(", lte=", "", "", ", lte=", "", ", lte=");
      WhereArgs<Integer> whereArgs1 = new WhereArgs<Integer>();
      boolean boolean0 = whereArgs0.canEqual(whereArgs1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", ")");
      WhereArgs<WhereArgs<String>> whereArgs1 = new WhereArgs<WhereArgs<String>>();
      whereArgs1.lt = whereArgs0;
      String string0 = whereArgs1.lt.getEq();
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("Sa*yDTmQEgTr", "Sa*yDTmQEgTr", "Mfg},]X>z_]\"gDgzQSt", "Sa*yDTmQEgTr", "", ", lt=");
      String string0 = whereArgs0.getGt();
      assertEquals("Mfg},]X>z_]\"gDgzQSt", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>();
      WhereArgs<WhereArgs<Integer>> whereArgs1 = new WhereArgs<WhereArgs<Integer>>(whereArgs0, whereArgs0, whereArgs0, whereArgs0, whereArgs0, whereArgs0);
      WhereArgs<Integer> whereArgs2 = whereArgs1.getGte();
      assertSame(whereArgs0, whereArgs2);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      whereArgs0.lt = (Object) whereArgs0;
      Object object0 = whereArgs0.getLt();
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>();
      Integer integer0 = whereArgs0.getLte();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      WhereArgs<WhereArgs<String>> whereArgs0 = new WhereArgs<WhereArgs<String>>();
      WhereArgs<String> whereArgs1 = whereArgs0.getNe();
      assertNull(whereArgs1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      boolean boolean0 = whereArgs0.equals(whereArgs0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", "");
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>("", whereArgs0, whereArgs0, whereArgs0, "", (Object) null);
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>();
      whereArgs0.ne = "/T";
      WhereArgs<String> whereArgs1 = new WhereArgs<String>();
      whereArgs1.ne = "";
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WhereArgs<Integer> whereArgs0 = new WhereArgs<Integer>();
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>();
      Integer integer0 = new Integer((-300));
      whereArgs0.setGt(integer0);
      whereArgs1.setGt(whereArgs0);
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      WhereArgs<Object> whereArgs0 = new WhereArgs<Object>();
      WhereArgs<Object> whereArgs1 = new WhereArgs<Object>();
      assertTrue(whereArgs1.equals((Object)whereArgs0));
      
      whereArgs1.gte = (Object) whereArgs0;
      boolean boolean0 = whereArgs1.equals(whereArgs0);
      assertFalse(whereArgs1.equals((Object)whereArgs0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "", "", "");
      WhereArgs<String> whereArgs1 = new WhereArgs<String>("", "", "", "", "", "");
      boolean boolean0 = whereArgs0.equals(whereArgs1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>();
      whereArgs0.gte = "6";
      WhereArgs<String> whereArgs1 = new WhereArgs<String>();
      whereArgs1.setGte("");
      boolean boolean0 = whereArgs0.equals(whereArgs1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      WhereArgs<String> whereArgs0 = new WhereArgs<String>("", "", "", "NGFe;[?r", "", "S,`qJr/j10l)&l;");
      whereArgs0.hashCode();
  }
}
