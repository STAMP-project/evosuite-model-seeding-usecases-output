/*
 * This file was automatically generated by EvoSuite
 * Wed Sep 25 08:15:58 GMT 2019
 */

package no.tellu.findit.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import no.tellu.findit.cmd.CommandHandler;
import no.tellu.findit.cmd.FindServiceProvidersCmd;
import no.tellu.findit.cmd.hibernate.CommandHandlerImpl;
import no.tellu.findit.services.BillingLogServiceImpl;
import org.evosuite.runtime.ViolatedAssumptionAnswer;

public class BillingLogServiceImpl_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logMessageReceived("+tHy&d");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logSmsSent((Long) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logEmailSent((Long) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logDeviceStart((Long) null, "Error logEmailSent", "Error logEmailSent");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logDeviceStop((Long) null, "&lLKlYB");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logSelectMapProvider((Long) null, "9z#TEHbV3Uj( ");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logProviderMapProvider((Long) null, "F !m;/&");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logCustomerSelectCSS((Long) null, "BillingLogServiceImpl logProviderMapProvider ");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logProviderSelectCSS((Long) null, "Error logProviderSelectFeatures");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logCustomerSelectFeatures((Long) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logProviderSelectFeatures((Long) null, "");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logCustomerSelectDomain((Long) null, "properties:`' ");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      FindServiceProvidersCmd findServiceProvidersCmd0 = new FindServiceProvidersCmd();
      CommandHandler commandHandler0 = mock(CommandHandler.class, new ViolatedAssumptionAnswer());
      doReturn(findServiceProvidersCmd0).when(commandHandler0).executeCommand(any(no.tellu.findit.cmd.DataAccessCommand.class));
      billingLogServiceImpl0.setCommandHandler(commandHandler0);
      billingLogServiceImpl0.logProviderSelectDomain((Long) null, "");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logCustomerSelectCSS((Long) null, "BillingLogServiceImpl logProviderMapProvider ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logCustomerSelectCSS((Long) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logCustomerSelectDomain((Long) null, "+ kGZDJmX)J@W4(!u5T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logCustomerSelectDomain((Long) null, "2/^#2UI;%BC`bd");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logCustomerSelectFeatures((Long) null, "a?-:RI$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logCustomerSelectFeatures((Long) null, "$IAiPAd7*\"");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logDeviceStart((Long) null, "Os'tRg$Fk0gV\u0004/R\"z", "Os'tRg$Fk0gV\u0004/R\"z");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logDeviceStop((Long) null, "org.hibernate.event.PostUpdateEventListener");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.commandHandler = (CommandHandler) commandHandlerImpl0;
      try { 
        billingLogServiceImpl0.logDeviceStop((Long) null, "org.hibernate.event.PostUpdateEventListener");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logEmailSent((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logEmailSent((Long) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logMessageReceived("]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logMessageReceived("ULq'");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logProviderMapProvider((Long) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logProviderMapProvider((Long) null, "|mRy/KQph0pQLjhf");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logProviderSelectCSS((Long) null, "5g!G00R\"igNHf?#?+#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logProviderSelectCSS((Long) null, "UPDATE CustomerImpl SET dateDrools5Read = :changedAt, dateChanged = :now, ruleCount = :numRules, ruleCacheVersion = :ruleCacheVersion WHERE id = :customerId");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logProviderSelectDomain((Long) null, "web.show_trace_on_error");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logProviderSelectDomain((Long) null, "Z6$3=7");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logProviderSelectFeatures((Long) null, "G/LuI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logProviderSelectFeatures((Long) null, ".Hc");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logSelectMapProvider((Long) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logSelectMapProvider((Long) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logSmsSent((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      CommandHandlerImpl commandHandlerImpl0 = new CommandHandlerImpl();
      billingLogServiceImpl0.setCommandHandler(commandHandlerImpl0);
      try { 
        billingLogServiceImpl0.logSmsSent((Long) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Logging failed
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BillingLogServiceImpl billingLogServiceImpl0 = new BillingLogServiceImpl();
      // Undeclared exception!
      try { 
        billingLogServiceImpl0.logDeviceStart((Long) 0L, "Error logProviderSelectDomain", "eh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
