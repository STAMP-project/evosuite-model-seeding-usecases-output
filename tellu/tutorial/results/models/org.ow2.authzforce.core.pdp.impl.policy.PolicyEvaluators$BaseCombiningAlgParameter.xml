<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.next()" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s1" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.&lt;init&gt;(org.ow2.authzforce.core.pdp.api.Decidable,java.util.List,org.ow2.authzforce.core.pdp.api.expression.ExpressionFactory,net.sf.saxon.s9api.XPathCompiler,org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$1)" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s1" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.&lt;init&gt;(org.ow2.authzforce.core.pdp.api.Decidable,java.util.List,org.ow2.authzforce.core.pdp.api.expression.ExpressionFactory,net.sf.saxon.s9api.XPathCompiler,org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$1)" proba="1.0"></transition></state><state id="s1"><transition target="s5" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.getValue()" proba="0.2"></transition><transition target="sX" action="epsilon" proba="0.2"></transition><transition target="s1" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.&lt;init&gt;(org.ow2.authzforce.core.pdp.api.Decidable,java.util.List,org.ow2.authzforce.core.pdp.api.expression.ExpressionFactory,net.sf.saxon.s9api.XPathCompiler,org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$1)" proba="0.2"></transition><transition target="s2" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.getVariableId()" proba="0.4"></transition></state><state id="s2"><transition target="s3" action="org.ow2.authzforce.core.pdp.impl.policy.PolicyEvaluators$BaseCombiningAlgParameter.hasNext()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state></states></ts>