/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:55:46 GMT 2019
 */

package org.ow2.proactive.catalog.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import graphql.GraphQL;
import graphql.schema.DataFetcher;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.Delayed;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.ow2.proactive.catalog.service.GraphqlService;

public class GraphqlService_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GraphqlService graphqlService0 = new GraphqlService();
      try { 
        graphqlService0.init();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // class path resource [graphql-idl/catalogObjectSchema.graphqls] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/media/mael/stamp/wp3/projects/catalog/build/libs/catalog-10.1.0-SNAPSHOT-tests.jar!/graphql-idl/catalogObjectSchema.graphqls
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GraphqlService graphqlService0 = new GraphqlService();
      DataFetcher<Delayed> dataFetcher0 = (DataFetcher<Delayed>) mock(DataFetcher.class, new ViolatedAssumptionAnswer());
      Injector.inject(graphqlService0, (Class<?>) GraphqlService.class, "catalogObjectFetcher", (Object) dataFetcher0);
      Injector.validateBean(graphqlService0, (Class<?>) GraphqlService.class);
      GraphQL graphQL0 = graphqlService0.getGraphql();
      assertNull(graphQL0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GraphqlService graphqlService0 = new GraphqlService();
      // Undeclared exception!
      try { 
        graphqlService0.executeQuery("rdR]i", "rdR]i", "rdR]i", (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GraphqlService graphqlService0 = new GraphqlService();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        graphqlService0.executeQuery("Calling {} on class {} for element {} {}", "2zo3khu)[aMuU3D]D", "Q7%oAJ0>\"e%J", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
