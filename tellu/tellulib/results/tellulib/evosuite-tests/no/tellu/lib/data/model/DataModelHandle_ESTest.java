/*
 * This file was automatically generated by EvoSuite
 * Tue Sep 24 10:38:26 GMT 2019
 */

package no.tellu.lib.data.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import no.tellu.lib.data.DataGroupNode;
import no.tellu.lib.data.DataHandle;
import no.tellu.lib.data.DataNode;
import no.tellu.lib.data.DataValueNode;
import no.tellu.lib.data.MetaItemNode;
import no.tellu.lib.data.MetaNumberNode;
import no.tellu.lib.data.model.DataModel;
import no.tellu.lib.data.model.DataModelHandle;
import no.tellu.lib.data.model.ParsedExpr;
import no.tellu.lib.data.model.Rule;
import no.tellu.lib.log.Logger;
import org.evosuite.runtime.ViolatedAssumptionAnswer;

public class DataModelHandle_ESTest {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.deactivateProvider((DataHandle.DataUpdateSubscriber) null, "");
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.addDataSubscriber("", (DataHandle.DataUpdateSubscriber) null);
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.cancelTransaction();
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "/");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("/");
      assertFalse(dataHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("Expecjed member instead of oject for ");
      dataModelHandle0.removeDataSubscriber((DataHandle.DataUpdateSubscriber) null);
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.startTransaction();
      dataModelHandle0.addNode(dataGroupNode0);
      assertEquals(1, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addProcessor((DataModel.DataProcessor) null, "", "[5oZ4", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addDataSubscriber("g", "g", "g", (DataHandle.DataUpdateSubscriber) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeDataSubscriber("", (DataHandle.DataUpdateSubscriber) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("Expecjed member instead of oject for ");
      dataModelHandle0.commitTransaction();
      assertNull(dataModelHandle0.getName());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0);
      assertEquals(1, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(".");
      // Undeclared exception!
      try { 
        dataModelHandle0.getNode();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No direct access to DataNodes managed by model
         //
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      boolean boolean0 = dataModelHandle0.activateProvider((DataHandle.DataUpdateSubscriber) null, "", (DataNode) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath((String) null);
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      boolean boolean0 = dataModelHandle0.hasValue("_**3`.xm[2|w");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataValueNode dataValueNode0 = dataModelHandle0.getValueNode(":");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath((String) null);
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("#");
      assertEquals(":/#", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath(":/P7xq}8}/P7xq}8}/");
      assertEquals(":/P7xq}8}/P7xq}8}/", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("/");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataModelHandle.handleFromPath((DataModel) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      // Undeclared exception!
      try { 
        DataModelHandle.handleFromPath(dataModel0, "instance(B");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(".");
      String string0 = dataModelHandle0.getGlobalDataPath((String) null);
      assertNotNull(string0);
      assertEquals(":/./", string0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataNode dataNode0 = dataModelHandle0.getNodeInter();
      assertSame(dataGroupNode0, dataNode0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, ".");
      DataNode dataNode0 = dataModelHandle0.getNodeInter();
      assertNull(dataNode0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Logger logger0 = new Logger("tCCthZ5\u0001l_/P:\".3Vh");
      DataModel dataModel0 = new DataModel(logger0, 6);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(":/IB~jCe'ZB<;''$/$/");
      boolean boolean0 = dataModelHandle0.hasValue("$");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode((String) null, (Object) null);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      DataValueNode dataValueNode1 = dataModelHandle0.getValueNode((String) null);
      assertSame(dataValueNode1, dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataValueNode dataValueNode0 = dataModelHandle0.getValueNode("");
      assertNull(dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      MetaNumberNode metaNumberNode0 = new MetaNumberNode("", metaItemNode_DataType0);
      DataValueNode dataValueNode0 = new DataValueNode(metaNumberNode0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      DataValueNode dataValueNode1 = dataModelHandle0.getValueNode("removeValue path can't null/empty");
      assertNull(dataValueNode1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, ",es98.r$JrJUc");
      // Undeclared exception!
      try { 
        dataModelHandle0.getValueNode(",es98.r$JrJUc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, (DataNode) null, "3d%*q16dR/}S+9} {");
      // Undeclared exception!
      try { 
        dataModelHandle0.getDataHandle("3d%*q16dR/}S+9} {");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("");
      assertTrue(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("_!ZG_6:w53b(UU&cF");
      assertFalse(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("=pwe+3`mwE2*[)");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "=pwe+3`mwE2*[)");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("=pwe+3`mwE2*[)");
      assertFalse(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle("://");
      assertFalse(dataHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("EE9");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "DataHandle node is null");
      Stack<String> stack0 = new Stack<String>();
      stack0.add("<'r");
      // Undeclared exception!
      try { 
        dataModelHandle0.addProcessor((DataModel.DataProcessor) null, (List<String>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "No direct access to DataNodes managed by model");
      boolean boolean0 = dataModelHandle0.hasOpenTransaction();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      Rule rule0 = new Rule("Text with embedded spaces was found but not enclosed in quotes (this is often caused by a missing comma following an unquoted value); Text=\"", ">nd>=Da", "^", "div");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction(rule0, dataHandle_TransactionCommitCallback0, true);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      boolean boolean0 = dataModelHandle0.hasOpenTransaction();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("", dataModel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue((String) null, dataModel0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataGroupNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("oBgA!@I%");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "oBgA!@I%");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("DV=S7", "DV=S7");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle(".");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue(".");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("=pwe+3`mwE2*[)");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "=pwe+3`mwE2*[)");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // removeValue path can't null/empty
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // removeValue path can't null/empty
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("_**3`.xm[2|w");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode((DataNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // addNode newNode can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Logger logger0 = new Logger("IB~jCe'ZB<;''$");
      DataModel dataModel0 = new DataModel(logger0);
      DataValueNode dataValueNode0 = new DataValueNode("");
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode(dataValueNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("oBgA!@I%");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "oBgA!@I%");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode(dataValueNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Logger logger0 = new Logger("D_6OX");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "D_6OX");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode((DataNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Logger logger0 = new Logger("Data type is incompatible");
      DataModel dataModel0 = new DataModel(logger0);
      DataValueNode dataValueNode0 = new DataValueNode("9");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "Data type is incompatible");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode((DataNode) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // mergeNode newNode can't be null
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("=pwe+3`mwE2*[)");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "=pwe+3`mwE2*[)");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode(dataValueNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "}=JG]q>");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("}=JG]q>", "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is null
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("=pwe+3`mwE2*[)");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "=pwe+3`mwE2*[)");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName((String) null, (String) null, "=pwe+3`mwE2*[)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath("");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath("instance(.");
      assertEquals("instance(.", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath(":/");
      assertEquals(":/", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String string0 = DataModelHandle.normalizePath("/D;27R#SN");
      assertEquals(":/D;27R#SN", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = null;
      try {
        dataModelHandle0 = new DataModelHandle(dataModel0, (List<DataNode>) null, ">yrO!AJ^Z?Qc^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DataModel dataModel0 = mock(DataModel.class, new ViolatedAssumptionAnswer());
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, "");
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      Rule rule0 = new Rule("", "An extraneous object closing brace was present in the input data/", "wsJ~)", "wsJ~)");
      // Undeclared exception!
      try { 
        dataModelHandle0.activateProvider(rule0, "7M", dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addDataSubscriber("", (DataHandle.DataUpdateSubscriber) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.addNode(dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.cancelTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.commitTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.deactivateProvider((DataHandle.DataUpdateSubscriber) null, "no.tellu.lib.data.model.DataModelHandle");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("oB{gI@I%");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "oB{gI@I%");
      // Undeclared exception!
      try { 
        dataModelHandle0.getDataNodes(":/oB{gI@I%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("p[9e+3A`a/wE2*[");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "p[9e+3A`a/wE2*[");
      // Undeclared exception!
      try { 
        dataModelHandle0.hasOpenTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.mergeNode(dataGroupNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      ParsedExpr parsedExpr0 = new ParsedExpr("", "", 35, metaItemNode_DataType0);
      // Undeclared exception!
      try { 
        dataModelHandle0.removeDataSubscriber((DataHandle.DataUpdateSubscriber) parsedExpr0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, "@_,`Uv;Ck#AgPhcr");
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("@_,`Uv;Ck#AgPhcr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.startTransaction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataGroupNode0, "Qp4~");
      Rule rule0 = new Rule("", "Qp4~", "w%,VwTjR/", "");
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        dataModelHandle0.startTransaction((DataHandle.DataUpdateSubscriber) rule0, dataHandle_TransactionCommitCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Logger logger0 = new Logger("`co[ee`XMvqJ7pE2H/");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, ";;");
      dataModelHandle0.startTransaction();
      DataHandle dataHandle0 = dataModelHandle0.getDataHandle(";'8b)&R$LlmYK");
      assertEquals(0, dataHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("=pwe+3`mwE2*[)");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "=pwe+3`mwE2*[)");
      List<DataNode> list0 = dataModelHandle0.getDataNodes((String) null);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("&6F7`0)~WSi.s");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "C0Pn@KJQ");
      List<DataNode> list0 = dataModelHandle0.getDataNodes("3D:EqJ)WuN6o>b|~[0{");
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("oB{gI@I%");
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "Can't change name of node which has MetaNode");
      List<DataNode> list0 = dataModelHandle0.getDataNodes("oB{gI@I%");
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode((String) null, (Object) null);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, "");
      String string0 = dataModelHandle0.getGlobalDataPath((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataGroupNode dataGroupNode0 = new DataGroupNode("V");
      List<DataNode> list0 = dataGroupNode0.getNodes("CM]TOI^iS$");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, list0, (String) null);
      String string0 = dataModelHandle0.getGlobalDataPath((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Logger logger0 = new Logger("IB~jCe'ZB<;''$");
      DataModel dataModel0 = new DataModel(logger0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataValueNode dataValueNode0 = new DataValueNode("");
      dataGroupNode0.addNode((DataNode) dataValueNode0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      DataNode dataNode0 = dataModelHandle0.getNodeInter();
      assertTrue(dataNode0.isModified());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Logger logger0 = new Logger("instance(");
      DataModel dataModel0 = new DataModel(logger0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataValueNode dataValueNode0 = new DataValueNode("instance(");
      dataGroupNode0.addNode((DataNode) dataValueNode0);
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "Text with embedded spaces was found but not enclosed in quotes (this is often caused by a missing comma following an unquoted value); Text=\"");
      DataValueNode dataValueNode1 = dataModelHandle0.getValueNode("instance(");
      assertSame(dataValueNode1, dataValueNode0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      dataModel0.initEmpty();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      assertEquals(1, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataHandle.TransactionCommitCallback dataHandle_TransactionCommitCallback0 = mock(DataHandle.TransactionCommitCallback.class, new ViolatedAssumptionAnswer());
      dataModel0.startTransaction((DataHandle.DataUpdateSubscriber) null, dataHandle_TransactionCommitCallback0, true);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "}=JG]q>");
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, "");
      dataModelHandle0.addDataSubscriber(" should be single, not multiple", " should be single, not multiple", "]qs?1B/eD;", (DataHandle.DataUpdateSubscriber) null);
      assertFalse(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Logger logger0 = new Logger("`co[ee`XMvqJ7pE2H/");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, ";;");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.LONG;
      ParsedExpr parsedExpr0 = new ParsedExpr("#", "instance(addNode newNode can't be null", 1, metaItemNode_DataType0);
      dataModelHandle0.addProcessor((DataModel.DataProcessor) parsedExpr0, "#", "$", "DataHandle node is DataGroupNode");
      assertEquals(0, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Logger logger0 = new Logger("`co[ee`XMvqJ7pE2H/");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, ";;");
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.FLOAT;
      ParsedExpr parsedExpr0 = new ParsedExpr("$", "2XEm4]+-5>mkv2", 58, metaItemNode_DataType0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      dataModelHandle0.addProcessor((DataModel.DataProcessor) parsedExpr0, (List<String>) linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.startTransaction();
      dataModelHandle0.changeName("", "f=.", "f=.");
      assertEquals("", dataModelHandle0.getName());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Logger logger0 = new Logger("e.");
      DataModel dataModel0 = new DataModel(logger0);
      DataModelHandle dataModelHandle0 = dataModel0.getDataHandle("instance(;'8b)&R$LlmYK/");
      assertFalse(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.startTransaction();
      dataModelHandle0.mergeNode(dataGroupNode0);
      assertEquals(1, dataModelHandle0.totalNodes());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Logger logger0 = new Logger("Data type is incompatible");
      DataModel dataModel0 = new DataModel(logger0);
      DataValueNode dataValueNode0 = new DataValueNode("9");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, (String) null);
      dataModelHandle0.removeDataSubscriber("", (DataHandle.DataUpdateSubscriber) null);
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModel0.startTransaction((DataHandle.DataUpdateSubscriber) null, (DataHandle.TransactionCommitCallback) null, false);
      dataModelHandle0.removeValue("/");
      assertTrue(dataModelHandle0.hasOpenTransaction());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode((String) null);
      DataModelHandle dataModelHandle0 = DataModelHandle.handleFromPath(dataModel0, (String) null);
      dataModelHandle0.startTransaction();
      DataModelHandle dataModelHandle1 = new DataModelHandle(dataModel0, dataValueNode0, (String) null);
      dataModelHandle1.setValue((String) null, dataValueNode0);
      assertTrue(dataModelHandle1.hasNode());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      dataModelHandle0.startTransaction();
      dataModelHandle0.setValue("", dataModelHandle0);
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("'Q+");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, (String) null);
      // Undeclared exception!
      try { 
        dataModelHandle0.removeValue("'Q+");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // DataHandle node is DataValueNode
         //
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = DataModelHandle.normalizeGlobalPath("Data type is incompatible/");
      assertEquals(":/Data type is incompatible/", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, (DataNode) null, "");
      try { 
        dataModelHandle0.getValue("/");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DataValueNode dataValueNode0 = new DataValueNode("oB{gI@I%");
      DataModelHandle dataModelHandle0 = new DataModelHandle((DataModel) null, dataValueNode0, "oB{gI@I%");
      DataValueNode dataValueNode1 = dataModelHandle0.getValueNode("'2x%/mH\"");
      assertNull(dataValueNode1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DataModel dataModel0 = new DataModel();
      DataValueNode dataValueNode0 = new DataValueNode("/");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, ":/");
      List<DataNode> list0 = dataModelHandle0.getDataNodes("/");
      assertNotNull(list0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Logger logger0 = new Logger("Data type is incompatible");
      DataModel dataModel0 = new DataModel(logger0);
      DataValueNode dataValueNode0 = new DataValueNode("l");
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataValueNode0, (String) null);
      MetaItemNode.DataType metaItemNode_DataType0 = MetaItemNode.DataType.INTEGER;
      ParsedExpr parsedExpr0 = new ParsedExpr("$", "Data type is incompatible", 3165, metaItemNode_DataType0);
      dataModelHandle0.addDataSubscriber("$2pcn<!#tl", "Text was found between an array's closing bracket and a subsequent comma (this is usually caused by a missing comma); Text=\"", "l", (DataHandle.DataUpdateSubscriber) parsedExpr0);
      assertTrue(dataModelHandle0.hasNode());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModel dataModel0 = new DataModel();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "");
      // Undeclared exception!
      try { 
        dataModelHandle0.setValue("+'qWd=c>}3gvx)l", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Logger logger0 = new Logger("IB~jCe'ZB<;''$");
      DataModel dataModel0 = new DataModel(logger0);
      DataGroupNode dataGroupNode0 = new DataGroupNode();
      DataModelHandle dataModelHandle0 = new DataModelHandle(dataModel0, dataGroupNode0, "$");
      // Undeclared exception!
      try { 
        dataModelHandle0.changeName("=LHM", "", ":/' is alre");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Attempt to change data outside transaction
         //
      }
  }
}
