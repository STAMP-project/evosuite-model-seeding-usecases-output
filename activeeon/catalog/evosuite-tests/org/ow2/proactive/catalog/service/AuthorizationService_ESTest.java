/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 16 14:54:34 GMT 2019
 */

package org.ow2.proactive.catalog.service;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.ow2.proactive.catalog.service.AuthorizationService;
import org.ow2.proactive.catalog.service.OwnerGroupStringHelper;
import org.ow2.proactive.catalog.service.model.AuthenticatedUser;

public class AuthorizationService_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      AuthorizationService authorizationService0 = new AuthorizationService(ownerGroupStringHelper0);
      AuthenticatedUser authenticatedUser0 = AuthenticatedUser.EMPTY;
      boolean boolean0 = authorizationService0.askUserAuthorizationByBucketOwner(authenticatedUser0, "GROUP:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      AuthorizationService authorizationService0 = new AuthorizationService(ownerGroupStringHelper0);
      boolean boolean0 = authorizationService0.askUserAuthorizationByBucketOwner((AuthenticatedUser) null, "GROUP:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      AuthenticatedUser authenticatedUser0 = AuthenticatedUser.EMPTY;
      AuthorizationService authorizationService0 = new AuthorizationService(ownerGroupStringHelper0);
      boolean boolean0 = authorizationService0.askUserAuthorizationByBucketOwner(authenticatedUser0, (String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      AuthorizationService authorizationService0 = new AuthorizationService(ownerGroupStringHelper0);
      AuthenticatedUser authenticatedUser0 = AuthenticatedUser.EMPTY;
      boolean boolean0 = authorizationService0.askUserAuthorizationByBucketOwner(authenticatedUser0, "GROUP:public-objects");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OwnerGroupStringHelper ownerGroupStringHelper0 = new OwnerGroupStringHelper();
      AuthorizationService authorizationService0 = new AuthorizationService(ownerGroupStringHelper0);
      AuthenticatedUser authenticatedUser0 = AuthenticatedUser.EMPTY;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("CharMatch{.inRangyg'");
      authenticatedUser0.setGroups(linkedList0);
      boolean boolean0 = authorizationService0.askUserAuthorizationByBucketOwner(authenticatedUser0, "CharMatch{.inRangyg'");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AuthenticatedUser authenticatedUser0 = AuthenticatedUser.EMPTY;
      AuthorizationService authorizationService0 = new AuthorizationService((OwnerGroupStringHelper) null);
      // Undeclared exception!
      try { 
        authorizationService0.askUserAuthorizationByBucketOwner(authenticatedUser0, "GROUP:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
