<?xml version='1.0' encoding='UTF-8'?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="s4"><transition target="s4" action="java.util.Optional.isPresent()" proba="0.08571428571428572"/><transition target="s5" action="java.util.Optional.get()" proba="0.8571428571428571"/><transition target="sX" action="epsilon" proba="0.05714285714285714"/></state><state id="s5"><transition target="s4" action="java.util.Optional.isPresent()" proba="0.3235294117647059"/><transition target="s5" action="java.util.Optional.get()" proba="0.08823529411764706"/><transition target="s7" action="java.util.Optional.ifPresent(java.util.function.Consumer)" proba="0.058823529411764705"/><transition target="sX" action="epsilon" proba="0.5294117647058824"/></state><state id="s6"><transition target="s3" action="java.util.Optional.orElse(java.lang.Object)" proba="0.5"/><transition target="sX" action="epsilon" proba="0.5"/></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"/></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"/></state><state id="s8"><transition target="s3" action="java.util.Optional.orElse(java.lang.Object)" proba="1.0"/></state><state id="s0"><transition target="s3" action="java.util.Optional.orElse(java.lang.Object)" proba="0.08571428571428572"/><transition target="s4" action="java.util.Optional.isPresent()" proba="0.3"/><transition target="s5" action="java.util.Optional.get()" proba="0.014285714285714285"/><transition target="s6" action="java.util.Optional.map(java.util.function.Function)" proba="0.02857142857142857"/><transition target="s8" action="java.util.Optional.ofNullable(java.lang.Object)" proba="0.014285714285714285"/><transition target="s1" action="java.util.Optional.of(java.lang.Object)" proba="0.24285714285714285"/><transition target="s2" action="java.util.Optional.empty()" proba="0.3142857142857143"/></state><state id="s1"><transition target="sX" action="epsilon" proba="0.3170731707317073"/><transition target="s1" action="java.util.Optional.of(java.lang.Object)" proba="0.4146341463414634"/><transition target="s2" action="java.util.Optional.empty()" proba="0.2682926829268293"/></state><state id="s2"><transition target="sX" action="epsilon" proba="0.43333333333333335"/><transition target="s1" action="java.util.Optional.of(java.lang.Object)" proba="0.11666666666666667"/><transition target="s2" action="java.util.Optional.empty()" proba="0.45"/></state></states></ts>